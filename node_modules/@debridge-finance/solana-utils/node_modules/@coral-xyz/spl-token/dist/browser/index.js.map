{"version":3,"file":"index.js","sources":["../../../anchor/dist/browser/index.js","../../../../node_modules/@native-to-anchor/buffer-layout/dist/browser/index.js","../../../src/coder/accounts.ts","../../../src/coder/events.ts","../../../src/coder/instructions.ts","../../../src/coder/types.ts","../../../src/coder/index.ts","../../../src/program.ts"],"sourcesContent":["import BN from 'bn.js';\nexport { default as BN } from 'bn.js';\nimport { PublicKey, Transaction, TransactionInstruction, SendTransactionError, NONCE_ACCOUNT_LENGTH, SystemProgram } from '@solana/web3.js';\nimport * as web3_js from '@solana/web3.js';\nexport { web3_js as web3 };\nimport { Buffer as Buffer$1 } from 'buffer';\nimport bs58$1 from 'bs58';\nimport camelCase from 'camelcase';\nimport * as borsh from '@coral-xyz/borsh';\nimport { sha256 as sha256$1 } from '@noble/hashes/sha256';\nimport { inflate } from 'pako';\nimport EventEmitter from 'eventemitter3';\n\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */\nfunction chunks(array, size) {\n    return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n/**\n * Check if a transaction object is a VersionedTransaction or not\n *\n * @param tx\n * @returns bool\n */\nconst isVersionedTransaction = (tx) => {\n    return \"version\" in tx;\n};\n\nfunction encode$3(data) {\n    return data.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nfunction decode$3(data) {\n    if (data.indexOf(\"0x\") === 0) {\n        data = data.substr(2);\n    }\n    if (data.length % 2 === 1) {\n        data = \"0\" + data;\n    }\n    let key = data.match(/.{2}/g);\n    if (key === null) {\n        return Buffer$1.from([]);\n    }\n    return Buffer$1.from(key.map((byte) => parseInt(byte, 16)));\n}\n\nvar hex = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode$3,\n    decode: decode$3\n});\n\nfunction decode$2(array) {\n    const decoder = new TextDecoder(\"utf-8\") // Browser https://caniuse.com/textencoder.\n        ; // Node.\n    return decoder.decode(array);\n}\nfunction encode$2(input) {\n    const encoder = new TextEncoder() // Browser.\n        ; // Node.\n    return encoder.encode(input);\n}\n\nvar utf8 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    decode: decode$2,\n    encode: encode$2\n});\n\nfunction encode$1(data) {\n    return bs58$1.encode(data);\n}\nfunction decode$1(data) {\n    return bs58$1.decode(data);\n}\n\nvar bs58 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode$1,\n    decode: decode$1\n});\n\nfunction encode(data) {\n    return data.toString(\"base64\");\n}\nfunction decode(data) {\n    return Buffer$1.from(data, \"base64\");\n}\n\nvar base64 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode,\n    decode: decode\n});\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hex: hex,\n    utf8: utf8,\n    bs58: bs58,\n    base64: base64\n});\n\nfunction isCompositeAccounts(accountItem) {\n    return \"accounts\" in accountItem;\n}\n// Deterministic IDL address as a function of the program id.\nasync function idlAddress(programId) {\n    const base = (await PublicKey.findProgramAddress([], programId))[0];\n    return await PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nfunction seed() {\n    return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = borsh.struct([\n    borsh.publicKey(\"authority\"),\n    borsh.vecU8(\"data\"),\n]);\nfunction decodeIdlAccount(data) {\n    return IDL_ACCOUNT_LAYOUT.decode(data);\n}\n/**\n * Convert the given IDL to camelCase.\n *\n * The IDL is generated from Rust which has different conventions compared to\n * JS/TS, e.g. instruction names in Rust are snake_case.\n *\n * The conversion happens automatically for programs, however, if you are using\n * internals such as `BorshInstructionCoder` and you only have the original\n * (not camelCase) IDL, you might need to use this function.\n *\n * @param idl IDL to convert to camelCase\n * @returns camelCase version of the IDL\n */\nfunction convertIdlToCamelCase(idl) {\n    const KEYS_TO_CONVERT = [\"name\", \"path\", \"account\", \"relations\", \"generic\"];\n    // `my_account.field` is getting converted to `myAccountField` but we\n    // need `myAccount.field`.\n    const toCamelCase = (s) => s.split(\".\").map(camelCase).join(\".\");\n    const recursivelyConvertNamesToCamelCase = (obj) => {\n        for (const key in obj) {\n            const val = obj[key];\n            if (KEYS_TO_CONVERT.includes(key)) {\n                obj[key] = Array.isArray(val) ? val.map(toCamelCase) : toCamelCase(val);\n            }\n            else if (typeof val === \"object\") {\n                recursivelyConvertNamesToCamelCase(val);\n            }\n        }\n    };\n    const camelCasedIdl = structuredClone(idl);\n    recursivelyConvertNamesToCamelCase(camelCasedIdl);\n    return camelCasedIdl;\n}\n/** Conveniently handle all defined field kinds with proper type support. */\nfunction handleDefinedFields(fields, unitCb, namedCb, tupleCb) {\n    // Unit\n    if (!(fields === null || fields === void 0 ? void 0 : fields.length))\n        return unitCb();\n    // Named\n    if (fields[0].name) {\n        return namedCb(fields);\n    }\n    // Tuple\n    return tupleCb(fields);\n}\n\nfunction parseIdlErrors(idl) {\n    const errors = new Map();\n    if (idl.errors) {\n        idl.errors.forEach((e) => {\n            var _a;\n            let msg = (_a = e.msg) !== null && _a !== void 0 ? _a : e.name;\n            errors.set(e.code, msg);\n        });\n    }\n    return errors;\n}\nfunction toInstruction(idlIx, ...args) {\n    if (idlIx.args.length != args.length) {\n        throw new Error(\"Invalid argument length\");\n    }\n    const ix = {};\n    let idx = 0;\n    idlIx.args.forEach((ixArg) => {\n        ix[ixArg.name] = args[idx];\n        idx += 1;\n    });\n    return ix;\n}\n// Throws error if any account required for the `ix` is not given.\nfunction validateAccounts(ixAccounts, accounts = {}) {\n    ixAccounts.forEach((acc) => {\n        if (isCompositeAccounts(acc)) {\n            validateAccounts(acc.accounts, accounts[acc.name]);\n        }\n        else {\n            if (!accounts[acc.name]) {\n                throw new Error(`Account \\`${acc.name}\\` not provided.`);\n            }\n        }\n    });\n}\n// Translates an address to a Pubkey.\nfunction translateAddress(address) {\n    return address instanceof PublicKey ? address : new PublicKey(address);\n}\n\n/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    this.value = void 0;\n    this.key = void 0;\n    this.type = void 0;\n    this.refinement = void 0;\n    this.path = void 0;\n    this.branch = void 0;\n    this.failures = void 0;\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    this.TYPE = void 0;\n    this.type = void 0;\n    this.schema = void 0;\n    this.coercer = void 0;\n    this.validator = void 0;\n    this.refiner = void 0;\n    this.entries = void 0;\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nfunction union$1(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    coercer(value, ctx) {\n      const firstMatch = Structs.find(s => {\n        const [e] = s.validate(value, {\n          coerce: true\n        });\n        return !e;\n      }) || unknown();\n      return firstMatch.coercer(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n\n/**\n * Sends a transaction to a program with the given accounts and instruction\n * data.\n */\nasync function invoke(programId, accounts, data, provider) {\n    programId = translateAddress(programId);\n    if (!provider) {\n        provider = getProvider();\n    }\n    const tx = new Transaction();\n    tx.add(new TransactionInstruction({\n        programId,\n        keys: accounts !== null && accounts !== void 0 ? accounts : [],\n        data,\n    }));\n    if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n    }\n    return await provider.sendAndConfirm(tx, []);\n}\nconst GET_MULTIPLE_ACCOUNTS_LIMIT = 99;\nasync function getMultipleAccounts(connection, publicKeys, commitment) {\n    const results = await getMultipleAccountsAndContext(connection, publicKeys, commitment);\n    return results.map((result) => {\n        return result\n            ? { publicKey: result.publicKey, account: result.account }\n            : null;\n    });\n}\nasync function getMultipleAccountsAndContext(connection, publicKeys, commitment) {\n    if (publicKeys.length <= GET_MULTIPLE_ACCOUNTS_LIMIT) {\n        return await getMultipleAccountsAndContextCore(connection, publicKeys, commitment);\n    }\n    else {\n        const batches = chunks(publicKeys, GET_MULTIPLE_ACCOUNTS_LIMIT);\n        const results = await Promise.all(batches.map((batch) => getMultipleAccountsAndContextCore(connection, batch, commitment)));\n        return results.flat();\n    }\n}\nasync function getMultipleAccountsAndContextCore(connection, publicKeys, commitmentOverride) {\n    const commitment = commitmentOverride !== null && commitmentOverride !== void 0 ? commitmentOverride : connection.commitment;\n    const { value: accountInfos, context } = await connection.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n    const accounts = accountInfos.map((account, idx) => {\n        if (account === null) {\n            return null;\n        }\n        return {\n            publicKey: publicKeys[idx],\n            account,\n            context,\n        };\n    });\n    return accounts;\n}\n// copy from @solana/web3.js that has a commitment param\nasync function simulateTransaction(connection, transaction, signers, commitment, includeAccounts) {\n    var _a;\n    if (signers && signers.length > 0) {\n        transaction.sign(...signers);\n    }\n    // @ts-expect-error\n    const message = transaction._compile();\n    const signData = message.serialize();\n    // @ts-expect-error\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString(\"base64\");\n    const config = {\n        encoding: \"base64\",\n        commitment: commitment !== null && commitment !== void 0 ? commitment : connection.commitment,\n    };\n    if (includeAccounts) {\n        const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map((key) => key.toBase58());\n        config[\"accounts\"] = {\n            encoding: \"base64\",\n            addresses,\n        };\n    }\n    if (signers && signers.length > 0) {\n        config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    // @ts-expect-error\n    const unsafeRes = await connection._rpcRequest(\"simulateTransaction\", args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if (\"error\" in res) {\n        let logs;\n        if (\"data\" in res.error) {\n            logs = (_a = res.error.data) === null || _a === void 0 ? void 0 : _a.logs;\n            if (logs && Array.isArray(logs)) {\n                const traceIndent = \"\\n    \";\n                const logTrace = traceIndent + logs.join(traceIndent);\n                console.error(res.error.message, logTrace);\n            }\n        }\n        throw new SendTransactionError(\"failed to simulate transaction: \" + res.error.message, logs);\n    }\n    return res.result;\n}\n// copy from @solana/web3.js\nfunction jsonRpcResult(schema) {\n    return coerce(createRpcResult(schema), UnknownRpcResult, (value) => {\n        if (\"error\" in value) {\n            return value;\n        }\n        else {\n            return {\n                ...value,\n                result: create(value.result, schema),\n            };\n        }\n    });\n}\n// copy from @solana/web3.js\nconst UnknownRpcResult = createRpcResult(unknown());\n// copy from @solana/web3.js\nfunction createRpcResult(result) {\n    return union$1([\n        type({\n            jsonrpc: literal(\"2.0\"),\n            id: string(),\n            result,\n        }),\n        type({\n            jsonrpc: literal(\"2.0\"),\n            id: string(),\n            error: type({\n                code: unknown(),\n                message: string(),\n                data: optional(any()),\n            }),\n        }),\n    ]);\n}\n// copy from @solana/web3.js\nfunction jsonRpcResultAndContext(value) {\n    return jsonRpcResult(type({\n        context: type({\n            slot: number(),\n        }),\n        value,\n    }));\n}\n// copy from @solana/web3.js\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n    err: nullable(union$1([type({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(nullable(array(nullable(type({\n        executable: boolean(),\n        owner: string(),\n        lamports: number(),\n        data: array(string()),\n        rentEpoch: optional(number()),\n    }))))),\n    unitsConsumed: optional(number()),\n}));\n\nvar rpc = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    invoke: invoke,\n    getMultipleAccounts: getMultipleAccounts,\n    getMultipleAccountsAndContext: getMultipleAccountsAndContext,\n    simulateTransaction: simulateTransaction\n});\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n */\nclass AnchorProvider {\n    /**\n     * @param connection The cluster connection where the program is deployed.\n     * @param wallet     The wallet used to pay for and sign all transactions.\n     * @param opts       Transaction confirmation options to use by default.\n     */\n    constructor(connection, wallet, opts = AnchorProvider.defaultOptions()) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n        this.publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: \"processed\",\n            commitment: \"processed\",\n        };\n    }\n    /**\n     * Returns a `Provider` with a wallet read from the local filesystem.\n     *\n     * @param url  The network cluster url.\n     * @param opts The default transaction confirmation options.\n     *\n     * (This api is for Node only.)\n     */\n    static local(url, opts = AnchorProvider.defaultOptions()) {\n        {\n            throw new Error(`Provider local is not available on browser.`);\n        }\n    }\n    /**\n     * Returns a `Provider` read from the `ANCHOR_PROVIDER_URL` environment\n     * variable\n     *\n     * (This api is for Node only.)\n     */\n    static env() {\n        {\n            throw new Error(`Provider env is not available on browser.`);\n        }\n    }\n    /**\n     * Sends the given transaction, paid for and signed by the provider's wallet.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */\n    async sendAndConfirm(tx, signers, opts) {\n        var _a, _b, _c, _d;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        if (isVersionedTransaction(tx)) {\n            if (signers) {\n                tx.sign(signers);\n            }\n        }\n        else {\n            tx.feePayer = (_a = tx.feePayer) !== null && _a !== void 0 ? _a : this.wallet.publicKey;\n            tx.recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n            if (signers) {\n                for (const signer of signers) {\n                    tx.partialSign(signer);\n                }\n            }\n        }\n        tx = await this.wallet.signTransaction(tx);\n        const rawTx = tx.serialize();\n        try {\n            return await sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n        }\n        catch (err) {\n            // thrown if the underlying 'confirmTransaction' encounters a failed tx\n            // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n            if (err instanceof ConfirmError) {\n                // choose the shortest available commitment for 'getTransaction'\n                // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                // commitment `sendAndConfirmRawTransaction` used\n                const txSig = encode$1(isVersionedTransaction(tx)\n                    ? ((_b = tx.signatures) === null || _b === void 0 ? void 0 : _b[0]) || new Uint8Array()\n                    : (_c = tx.signature) !== null && _c !== void 0 ? _c : new Uint8Array());\n                const maxVer = isVersionedTransaction(tx) ? 0 : undefined;\n                const failedTx = await this.connection.getTransaction(txSig, {\n                    commitment: \"confirmed\",\n                    maxSupportedTransactionVersion: maxVer,\n                });\n                if (!failedTx) {\n                    throw err;\n                }\n                else {\n                    const logs = (_d = failedTx.meta) === null || _d === void 0 ? void 0 : _d.logMessages;\n                    throw !logs ? err : new SendTransactionError(err.message, logs);\n                }\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Similar to `send`, but for an array of transactions and signers.\n     * All transactions need to be of the same type, it doesn't support a mix of `VersionedTransaction`s and `Transaction`s.\n     *\n     * @param txWithSigners Array of transactions and signers.\n     * @param opts          Transaction confirmation options.\n     */\n    async sendAll(txWithSigners, opts) {\n        var _a, _b, _c;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n        let txs = txWithSigners.map((r) => {\n            var _a, _b;\n            if (isVersionedTransaction(r.tx)) {\n                let tx = r.tx;\n                if (r.signers) {\n                    tx.sign(r.signers);\n                }\n                return tx;\n            }\n            else {\n                let tx = r.tx;\n                let signers = (_a = r.signers) !== null && _a !== void 0 ? _a : [];\n                tx.feePayer = (_b = tx.feePayer) !== null && _b !== void 0 ? _b : this.wallet.publicKey;\n                tx.recentBlockhash = recentBlockhash;\n                signers.forEach((kp) => {\n                    tx.partialSign(kp);\n                });\n                return tx;\n            }\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for (let k = 0; k < txs.length; k += 1) {\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            }\n            catch (err) {\n                // thrown if the underlying 'confirmTransaction' encounters a failed tx\n                // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n                if (err instanceof ConfirmError) {\n                    // choose the shortest available commitment for 'getTransaction'\n                    // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                    // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                    // commitment `sendAndConfirmRawTransaction` used\n                    const txSig = encode$1(isVersionedTransaction(tx)\n                        ? ((_a = tx.signatures) === null || _a === void 0 ? void 0 : _a[0]) || new Uint8Array()\n                        : (_b = tx.signature) !== null && _b !== void 0 ? _b : new Uint8Array());\n                    const maxVer = isVersionedTransaction(tx) ? 0 : undefined;\n                    const failedTx = await this.connection.getTransaction(txSig, {\n                        commitment: \"confirmed\",\n                        maxSupportedTransactionVersion: maxVer,\n                    });\n                    if (!failedTx) {\n                        throw err;\n                    }\n                    else {\n                        const logs = (_c = failedTx.meta) === null || _c === void 0 ? void 0 : _c.logMessages;\n                        throw !logs ? err : new SendTransactionError(err.message, logs);\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n        return sigs;\n    }\n    /**\n     * Simulates the given transaction, returning emitted logs from execution.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction. If unset, the transaction\n     *                will be simulated with the \"sigVerify: false\" option. This\n     *                allows for simulation of transactions without asking the\n     *                wallet for a signature.\n     * @param opts    Transaction confirmation options.\n     */\n    async simulate(tx, signers, commitment, includeAccounts) {\n        let recentBlockhash = (await this.connection.getLatestBlockhash(commitment !== null && commitment !== void 0 ? commitment : this.connection.commitment)).blockhash;\n        let result;\n        if (isVersionedTransaction(tx)) {\n            if (signers && signers.length > 0) {\n                tx.sign(signers);\n                tx = await this.wallet.signTransaction(tx);\n            }\n            // Doesn't support includeAccounts which has been changed to something\n            // else in later versions of this function.\n            result = await this.connection.simulateTransaction(tx, { commitment });\n        }\n        else {\n            tx.feePayer = tx.feePayer || this.wallet.publicKey;\n            tx.recentBlockhash = recentBlockhash;\n            if (signers && signers.length > 0) {\n                tx = await this.wallet.signTransaction(tx);\n            }\n            result = await simulateTransaction(this.connection, tx, signers, commitment, includeAccounts);\n        }\n        if (result.value.err) {\n            throw new SimulateError(result.value);\n        }\n        return result.value;\n    }\n}\nclass SimulateError extends Error {\n    constructor(simulationResponse, message) {\n        super(message);\n        this.simulationResponse = simulationResponse;\n    }\n}\n// Copy of Connection.sendAndConfirmRawTransaction that throws\n// a better error if 'confirmTransaction` returns an error status\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n    const sendOptions = options\n        ? {\n            skipPreflight: options.skipPreflight,\n            preflightCommitment: options.preflightCommitment || options.commitment,\n            maxRetries: options.maxRetries,\n            minContextSlot: options.minContextSlot,\n        }\n        : {};\n    let status;\n    const startTime = Date.now();\n    while (Date.now() - startTime < 60000) {\n        try {\n            const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n            if (options === null || options === void 0 ? void 0 : options.blockhash) {\n                if (sendOptions.maxRetries === 0) {\n                    const abortSignal = AbortSignal.timeout(15000);\n                    status = (await connection.confirmTransaction({ abortSignal, signature, ...options.blockhash }, options && options.commitment)).value;\n                }\n                else {\n                    status = (await connection.confirmTransaction({ signature, ...options.blockhash }, options && options.commitment)).value;\n                }\n            }\n            else {\n                status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n            }\n            if (status.err) {\n                throw new ConfirmError(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n            }\n            return signature;\n        }\n        catch (err) {\n            if (err.name === \"TimeoutError\") {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw Error(\"Transaction failed to confirm in 60s\");\n}\nclass ConfirmError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/**\n * Sets the default provider on the client.\n */\nfunction setProvider(provider) {\n    _provider = provider;\n}\n/**\n * Returns the default provider being used by the client.\n */\nfunction getProvider() {\n    if (_provider === null) {\n        return AnchorProvider.local();\n    }\n    return _provider;\n}\n// Global provider used as the default when a provider is not given.\nlet _provider = null;\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar dist = {};\n\n// Instruction errors.\nObject.defineProperty(dist, \"__esModule\", { value: true });\nvar ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = ANCHOR_ERROR__REQUIRE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_VIOLATED = ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = dist.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = ANCHOR_ERROR__CONSTRAINT_SPACE = dist.ANCHOR_ERROR__CONSTRAINT_SPACE = ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = ANCHOR_ERROR__CONSTRAINT_ZERO = dist.ANCHOR_ERROR__CONSTRAINT_ZERO = ANCHOR_ERROR__CONSTRAINT_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_ADDRESS = ANCHOR_ERROR__CONSTRAINT_CLOSE = dist.ANCHOR_ERROR__CONSTRAINT_CLOSE = ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = ANCHOR_ERROR__CONSTRAINT_STATE = dist.ANCHOR_ERROR__CONSTRAINT_STATE = ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = dist.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = ANCHOR_ERROR__CONSTRAINT_SEEDS = dist.ANCHOR_ERROR__CONSTRAINT_SEEDS = ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = dist.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = ANCHOR_ERROR__CONSTRAINT_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_OWNER = ANCHOR_ERROR__CONSTRAINT_RAW = dist.ANCHOR_ERROR__CONSTRAINT_RAW = ANCHOR_ERROR__CONSTRAINT_SIGNER = dist.ANCHOR_ERROR__CONSTRAINT_SIGNER = ANCHOR_ERROR__CONSTRAINT_HAS_ONE = dist.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = ANCHOR_ERROR__CONSTRAINT_MUT = dist.ANCHOR_ERROR__CONSTRAINT_MUT = ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = dist.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = dist.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = dist.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = ANCHOR_ERROR__IDL_INSTRUCTION_STUB = dist.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = dist.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = ANCHOR_ERROR__INSTRUCTION_MISSING = dist.ANCHOR_ERROR__INSTRUCTION_MISSING = void 0;\nvar ANCHOR_ERROR__DEPRECATED = dist.ANCHOR_ERROR__DEPRECATED = ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = dist.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = dist.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = dist.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = dist.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = dist.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = dist.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = dist.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = dist.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = dist.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = dist.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = dist.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = ANCHOR_ERROR__INVALID_PROGRAM_ID = dist.ANCHOR_ERROR__INVALID_PROGRAM_ID = ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = dist.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = dist.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = dist.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = ANCHOR_ERROR__REQUIRE_GT_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = void 0;\n/** 8 byte instruction identifier not provided. */\nvar ANCHOR_ERROR__INSTRUCTION_MISSING = dist.ANCHOR_ERROR__INSTRUCTION_MISSING = 100;\n/** Fallback functions are not supported. */\nvar ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = dist.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = 101;\n/** The program could not deserialize the given instruction. */\nvar ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = 102;\n/** The program could not serialize the given instruction. */\nvar ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = 103;\n// IDL instruction errors.\n/** The program was compiled without idl instructions. */\nvar ANCHOR_ERROR__IDL_INSTRUCTION_STUB = dist.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = 1000;\n/** The transaction was given an invalid program for the IDL instruction. */\nvar ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = dist.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = 1001;\n/** IDL account must be empty in order to resize, try closing first. */\nvar ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = dist.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = 1002;\n// Event instructions.\n/** The program was compiled without `event-cpi` feature. */\nvar ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = dist.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = 1500;\n// Constraint errors.\n/** A mut constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MUT = dist.ANCHOR_ERROR__CONSTRAINT_MUT = 2000;\n/** A has one constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_HAS_ONE = dist.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = 2001;\n/** A signer constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_SIGNER = dist.ANCHOR_ERROR__CONSTRAINT_SIGNER = 2002;\n/** A raw constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_RAW = dist.ANCHOR_ERROR__CONSTRAINT_RAW = 2003;\n/** An owner constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_OWNER = 2004;\n/** A rent exemption constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = dist.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = 2005;\n/** A seeds constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_SEEDS = dist.ANCHOR_ERROR__CONSTRAINT_SEEDS = 2006;\n/** An executable constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = dist.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = 2007;\n/** Deprecated Error, feel free to replace with something else. */\nvar ANCHOR_ERROR__CONSTRAINT_STATE = dist.ANCHOR_ERROR__CONSTRAINT_STATE = 2008;\n/** An associated constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = 2009;\n/** An associated init constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = 2010;\n/** A close constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_CLOSE = dist.ANCHOR_ERROR__CONSTRAINT_CLOSE = 2011;\n/** An address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_ADDRESS = 2012;\n/** Expected zero account discriminant. */\nvar ANCHOR_ERROR__CONSTRAINT_ZERO = dist.ANCHOR_ERROR__CONSTRAINT_ZERO = 2013;\n/** A token mint constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = 2014;\n/** A token owner constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = 2015;\n/** A mint mint authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = 2016;\n/** A mint freeze authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = 2017;\n/** A mint decimals constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = 2018;\n/** A space constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_SPACE = dist.ANCHOR_ERROR__CONSTRAINT_SPACE = 2019;\n/** A required account for the constraint is None. */\nvar ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = dist.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = 2020;\n/** A token account token program constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = 2021;\n/** A mint token program constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = 2022;\n/** An associated token account token program constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = 2023;\n/** A group pointer extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = 2024;\n/** A group pointer extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = 2025;\n/** A group pointer extension group address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = 2026;\n/** A group member pointer extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = 2027;\n/** A group member pointer extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = 2028;\n/** A group member pointer extension group address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = 2029;\n/** A metadata pointer extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = 2030;\n/** A metadata pointer extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = 2031;\n/** A metadata pointer extension metadata address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = 2032;\n/** A close authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = 2033;\n/** A close authority extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = 2034;\n/** A permanent delegate extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = 2035;\n/** A permanent delegate extension delegate constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = 2036;\n/** A transfer hook extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = 2037;\n/** A transfer hook extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = 2038;\n/** A transfer hook extension transfer hook program id constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = 2039;\n// Require errors.\n/** A require expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_VIOLATED = 2500;\n/** A require_eq expression was violated. */\nANCHOR_ERROR__REQUIRE_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = 2501;\n/** A require_keys_eq expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = 2502;\n/** A require_neq expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = 2503;\n/** A require_keys_neq expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = 2504;\n/** A require_gt expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_GT_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = 2505;\n/** A require_gte expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = 2506;\n// Account errors.\n/** The account discriminator was already set on this account. */\nvar ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = 3000;\n/** No 8 byte discriminator was found on the account. */\nvar ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = 3001;\n/** 8 byte discriminator did not match what was expected. */\nvar ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = 3002;\n/** Failed to deserialize the account. */\nvar ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = 3003;\n/** Failed to serialize the account. */\nvar ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = 3004;\n/** Not enough account keys given to the instruction. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = dist.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = 3005;\n/** The given account is not mutable. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = dist.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = 3006;\n/** The given account is owned by a different program than expected. */\nvar ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = dist.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = 3007;\n/** Program ID was not as expected. */\nvar ANCHOR_ERROR__INVALID_PROGRAM_ID = dist.ANCHOR_ERROR__INVALID_PROGRAM_ID = 3008;\n/** Program account is not executable. */\nvar ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = dist.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = 3009;\n/** The given account did not sign. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = dist.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = 3010;\n/** The given account is not owned by the system program. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = dist.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = 3011;\n/** The program expected this account to be already initialized. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = dist.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = 3012;\n/** The given account is not a program data account. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = dist.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = 3013;\n/** The given account is not the associated token account. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = dist.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = 3014;\n/** The given public key does not match the required sysvar. */\nvar ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = 3015;\n/** The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit. */\nvar ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = dist.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = 3016;\n/** The account was duplicated for more than one reallocation. */\nvar ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = dist.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = 3017;\n// Miscellaneous errors.\n/** The declared program id does not match the actual program id. */\nvar ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = dist.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = 4100;\n/** You cannot/should not initialize the payer account as a program account. */\nvar ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = dist.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = 4101;\n/** The program could not perform the numeric conversion, out of range integral type conversion attempted. */\nvar ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = dist.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = 4102;\n// Deprecated errors.\n/** The API being used is deprecated and should no longer be used. */\nANCHOR_ERROR__DEPRECATED = dist.ANCHOR_ERROR__DEPRECATED = 5000;\n\nconst _AVAILABLE_FEATURES = new Set([\"debug-logs\"]);\nconst _FEATURES = new Map();\nfunction set(key) {\n    if (!_AVAILABLE_FEATURES.has(key)) {\n        throw new Error(\"Invalid feature\");\n    }\n    _FEATURES.set(key, true);\n}\nfunction isSet(key) {\n    return _FEATURES.get(key) !== undefined;\n}\n\nvar features = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    set: set,\n    isSet: isSet\n});\n\nclass IdlError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"IdlError\";\n    }\n}\nclass ProgramErrorStack {\n    constructor(stack) {\n        this.stack = stack;\n    }\n    static parse(logs) {\n        var _a;\n        const programKeyRegex = /^Program (\\w*) invoke/;\n        const successRegex = /^Program \\w* success/;\n        const programStack = [];\n        for (let i = 0; i < logs.length; i++) {\n            if (successRegex.exec(logs[i])) {\n                programStack.pop();\n                continue;\n            }\n            const programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n            if (!programKey) {\n                continue;\n            }\n            programStack.push(new PublicKey(programKey));\n        }\n        return new ProgramErrorStack(programStack);\n    }\n}\nclass AnchorError extends Error {\n    constructor(errorCode, errorMessage, errorLogs, logs, origin, comparedValues) {\n        super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n        this.errorLogs = errorLogs;\n        this.logs = logs;\n        this.error = { errorCode, errorMessage, comparedValues, origin };\n        this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n    static parse(logs) {\n        if (!logs) {\n            return null;\n        }\n        const anchorErrorLogIndex = logs.findIndex((log) => log.startsWith(\"Program log: AnchorError\"));\n        if (anchorErrorLogIndex === -1) {\n            return null;\n        }\n        const anchorErrorLog = logs[anchorErrorLogIndex];\n        const errorLogs = [anchorErrorLog];\n        let comparedValues;\n        if (anchorErrorLogIndex + 1 < logs.length) {\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left:\n            // <Pubkey>\n            // Right:\n            // <Pubkey>\n            if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n                const pubkeyRegex = /^Program log: (.*)$/;\n                const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n                const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n                comparedValues = [\n                    new PublicKey(leftPubkey),\n                    new PublicKey(rightPubkey),\n                ];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5));\n            }\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left: <value>\n            // Right: <value>\n            else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n                const valueRegex = /^Program log: (Left|Right): (.*)$/;\n                const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n                const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3));\n                comparedValues = [leftValue, rightValue];\n            }\n        }\n        const regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n        const regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n        const regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n        if (noInfoAnchorErrorLog) {\n            const [errorCodeString, errorNumber, errorMessage] = noInfoAnchorErrorLog.slice(1, 4);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n        }\n        else if (fileLineAnchorErrorLog) {\n            const [file, line, errorCodeString, errorNumber, errorMessage] = fileLineAnchorErrorLog.slice(1, 6);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            const fileLine = { file, line: parseInt(line) };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, fileLine, comparedValues);\n        }\n        else if (accountNameAnchorErrorLog) {\n            const [accountName, errorCodeString, errorNumber, errorMessage] = accountNameAnchorErrorLog.slice(1, 5);\n            const origin = accountName;\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues);\n        }\n        else {\n            return null;\n        }\n    }\n    get program() {\n        return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        return this._programErrorStack.stack;\n    }\n    toString() {\n        return this.message;\n    }\n}\n// An error from a user defined program.\nclass ProgramError extends Error {\n    constructor(code, msg, logs) {\n        super();\n        this.code = code;\n        this.msg = msg;\n        this.logs = logs;\n        if (logs) {\n            this._programErrorStack = ProgramErrorStack.parse(logs);\n        }\n    }\n    static parse(err, idlErrors) {\n        const errString = err.toString();\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let unparsedErrorCode;\n        if (errString.includes(\"custom program error:\")) {\n            let components = errString.split(\"custom program error: \");\n            if (components.length !== 2) {\n                return null;\n            }\n            else {\n                unparsedErrorCode = components[1];\n            }\n        }\n        else {\n            const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n            if (!matches || matches.length > 1) {\n                return null;\n            }\n            unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(unparsedErrorCode);\n        }\n        catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    get program() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nfunction translateError(err, idlErrors) {\n    if (isSet(\"debug-logs\")) {\n        console.log(\"Translating error:\", err);\n    }\n    const anchorError = AnchorError.parse(err.logs);\n    if (anchorError) {\n        return anchorError;\n    }\n    const programError = ProgramError.parse(err, idlErrors);\n    if (programError) {\n        return programError;\n    }\n    if (err.logs) {\n        const handler = {\n            get: function (target, prop) {\n                if (prop === \"programErrorStack\") {\n                    return target.programErrorStack.stack;\n                }\n                else if (prop === \"program\") {\n                    return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n                }\n                else {\n                    // this is the normal way to return all other props\n                    // without modifying them.\n                    // @ts-expect-error\n                    return Reflect.get(...arguments);\n                }\n            },\n        };\n        err.programErrorStack = ProgramErrorStack.parse(err.logs);\n        return new Proxy(err, handler);\n    }\n    return err;\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: ANCHOR_ERROR__INSTRUCTION_MISSING,\n    InstructionFallbackNotFound: ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND,\n    InstructionDidNotDeserialize: ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE,\n    InstructionDidNotSerialize: ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE,\n    // IDL instructions.\n    IdlInstructionStub: ANCHOR_ERROR__IDL_INSTRUCTION_STUB,\n    IdlInstructionInvalidProgram: ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM,\n    IdlAccountNotEmpty: ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY,\n    // Event instructions.\n    EventInstructionStub: ANCHOR_ERROR__EVENT_INSTRUCTION_STUB,\n    // Constraints.\n    ConstraintMut: ANCHOR_ERROR__CONSTRAINT_MUT,\n    ConstraintHasOne: ANCHOR_ERROR__CONSTRAINT_HAS_ONE,\n    ConstraintSigner: ANCHOR_ERROR__CONSTRAINT_SIGNER,\n    ConstraintRaw: ANCHOR_ERROR__CONSTRAINT_RAW,\n    ConstraintOwner: ANCHOR_ERROR__CONSTRAINT_OWNER,\n    ConstraintRentExempt: ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT,\n    ConstraintSeeds: ANCHOR_ERROR__CONSTRAINT_SEEDS,\n    ConstraintExecutable: ANCHOR_ERROR__CONSTRAINT_EXECUTABLE,\n    ConstraintState: ANCHOR_ERROR__CONSTRAINT_STATE,\n    ConstraintAssociated: ANCHOR_ERROR__CONSTRAINT_ASSOCIATED,\n    ConstraintAssociatedInit: ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT,\n    ConstraintClose: ANCHOR_ERROR__CONSTRAINT_CLOSE,\n    ConstraintAddress: ANCHOR_ERROR__CONSTRAINT_ADDRESS,\n    ConstraintZero: ANCHOR_ERROR__CONSTRAINT_ZERO,\n    ConstraintTokenMint: ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT,\n    ConstraintTokenOwner: ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER,\n    ConstraintMintMintAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY,\n    ConstraintMintFreezeAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY,\n    ConstraintMintDecimals: ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS,\n    ConstraintSpace: ANCHOR_ERROR__CONSTRAINT_SPACE,\n    ConstraintAccountIsNone: ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE,\n    ConstraintTokenTokenProgram: ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM,\n    ConstraintMintTokenProgram: ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM,\n    ConstraintAssociatedTokenTokenProgram: ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM,\n    ConstraintMintGroupPointerExtension: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION,\n    ConstraintMintGroupPointerExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY,\n    ConstraintMintGroupPointerExtensionGroupAddress: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS,\n    ConstraintMintGroupMemberPointerExtension: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION,\n    ConstraintMintGroupMemberPointerExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY,\n    ConstraintMintGroupMemberPointerExtensionMemberAddress: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS,\n    ConstraintMintMetadataPointerExtension: ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION,\n    ConstraintMintMetadataPointerExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY,\n    ConstraintMintMetadataPointerExtensionMetadataAddress: ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS,\n    ConstraintMintCloseAuthorityExtension: ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION,\n    ConstraintMintCloseAuthorityExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY,\n    ConstraintMintPermanentDelegateExtension: ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION,\n    ConstraintMintPermanentDelegateExtensionDelegate: ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE,\n    ConstraintMintTransferHookExtension: ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION,\n    ConstraintMintTransferHookExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY,\n    ConstraintMintTransferHookExtensionProgramId: ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID,\n    // Require.\n    RequireViolated: ANCHOR_ERROR__REQUIRE_VIOLATED,\n    RequireEqViolated: ANCHOR_ERROR__REQUIRE_EQ_VIOLATED,\n    RequireKeysEqViolated: ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED,\n    RequireNeqViolated: ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED,\n    RequireKeysNeqViolated: ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED,\n    RequireGtViolated: ANCHOR_ERROR__REQUIRE_GT_VIOLATED,\n    RequireGteViolated: ANCHOR_ERROR__REQUIRE_GTE_VIOLATED,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET,\n    AccountDiscriminatorNotFound: ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND,\n    AccountDiscriminatorMismatch: ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH,\n    AccountDidNotDeserialize: ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE,\n    AccountDidNotSerialize: ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE,\n    AccountNotEnoughKeys: ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS,\n    AccountNotMutable: ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE,\n    AccountOwnedByWrongProgram: ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM,\n    InvalidProgramId: ANCHOR_ERROR__INVALID_PROGRAM_ID,\n    InvalidProgramExecutable: ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE,\n    AccountNotSigner: ANCHOR_ERROR__ACCOUNT_NOT_SIGNER,\n    AccountNotSystemOwned: ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED,\n    AccountNotInitialized: ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED,\n    AccountNotProgramData: ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA,\n    AccountNotAssociatedTokenAccount: ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT,\n    AccountSysvarMismatch: ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH,\n    AccountReallocExceedsLimit: ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT,\n    AccountDuplicateReallocs: ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS,\n    // Miscellaneous\n    DeclaredProgramIdMismatch: ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH,\n    TryingToInitPayerAsProgramAccount: ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT,\n    InvalidNumericConversion: ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: ANCHOR_ERROR__DEPRECATED,\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [LangErrorCode.InstructionMissing, \"Instruction discriminator not provided\"],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\",\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\",\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\",\n    ],\n    [\n        LangErrorCode.IdlAccountNotEmpty,\n        \"IDL account must be empty in order to resize, try closing first\",\n    ],\n    // Event instructions.\n    [\n        LangErrorCode.EventInstructionStub,\n        \"The program was compiled without `event-cpi` feature\",\n    ],\n    // Constraints.\n    [LangErrorCode.ConstraintMut, \"A mut constraint was violated\"],\n    [LangErrorCode.ConstraintHasOne, \"A has one constraint was violated\"],\n    [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"],\n    [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"],\n    [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"],\n    [\n        LangErrorCode.ConstraintRentExempt,\n        \"A rent exemption constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"],\n    [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"],\n    [\n        LangErrorCode.ConstraintState,\n        \"Deprecated Error, feel free to replace with something else\",\n    ],\n    [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintClose, \"A close constraint was violated\"],\n    [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n    [LangErrorCode.ConstraintZero, \"Expected zero account discriminant\"],\n    [LangErrorCode.ConstraintTokenMint, \"A token mint constraint was violated\"],\n    [LangErrorCode.ConstraintTokenOwner, \"A token owner constraint was violated\"],\n    [\n        LangErrorCode.ConstraintMintMintAuthority,\n        \"A mint mint authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintFreezeAuthority,\n        \"A mint freeze authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintDecimals,\n        \"A mint decimals constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintSpace, \"A space constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAccountIsNone,\n        \"A required account for the constraint is None\",\n    ],\n    [\n        LangErrorCode.ConstraintTokenTokenProgram,\n        \"A token account token program constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintTokenProgram,\n        \"A mint token program constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintAssociatedTokenTokenProgram,\n        \"An associated token account token program constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupPointerExtension,\n        \"A group pointer extension constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupPointerExtensionAuthority,\n        \"A group pointer extension authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupPointerExtensionGroupAddress,\n        \"A group pointer extension group address constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupMemberPointerExtension,\n        \"A group member pointer extension constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupMemberPointerExtensionAuthority,\n        \"A group member pointer extension authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintGroupMemberPointerExtensionMemberAddress,\n        \"A group member pointer extension group address constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintMetadataPointerExtension,\n        \"A metadata pointer extension constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintMetadataPointerExtensionAuthority,\n        \"A metadata pointer extension authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintMetadataPointerExtensionMetadataAddress,\n        \"A metadata pointer extension metadata address constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintCloseAuthorityExtension,\n        \"A close authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintCloseAuthorityExtensionAuthority,\n        \"A close authority extension authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintPermanentDelegateExtension,\n        \"A permanent delegate extension constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintPermanentDelegateExtensionDelegate,\n        \"A permanent delegate extension delegate constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintTransferHookExtension,\n        \"A transfer hook extension constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintTransferHookExtensionAuthority,\n        \"A transfer hook extension authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintTransferHookExtensionProgramId,\n        \"A transfer hook extension transfer hook program id constraint was violated\",\n    ],\n    // Require.\n    [LangErrorCode.RequireViolated, \"A require expression was violated\"],\n    [LangErrorCode.RequireEqViolated, \"A require_eq expression was violated\"],\n    [\n        LangErrorCode.RequireKeysEqViolated,\n        \"A require_keys_eq expression was violated\",\n    ],\n    [LangErrorCode.RequireNeqViolated, \"A require_neq expression was violated\"],\n    [\n        LangErrorCode.RequireKeysNeqViolated,\n        \"A require_keys_neq expression was violated\",\n    ],\n    [LangErrorCode.RequireGtViolated, \"A require_gt expression was violated\"],\n    [LangErrorCode.RequireGteViolated, \"A require_gte expression was violated\"],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No discriminator was found on the account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"Account discriminator did not match what was expected\",\n    ],\n    [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"],\n    [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\",\n    ],\n    [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"],\n    [\n        LangErrorCode.AccountOwnedByWrongProgram,\n        \"The given account is owned by a different program than expected\",\n    ],\n    [LangErrorCode.InvalidProgramId, \"Program ID was not as expected\"],\n    [LangErrorCode.InvalidProgramExecutable, \"Program account is not executable\"],\n    [LangErrorCode.AccountNotSigner, \"The given account did not sign\"],\n    [\n        LangErrorCode.AccountNotSystemOwned,\n        \"The given account is not owned by the system program\",\n    ],\n    [\n        LangErrorCode.AccountNotInitialized,\n        \"The program expected this account to be already initialized\",\n    ],\n    [\n        LangErrorCode.AccountNotProgramData,\n        \"The given account is not a program data account\",\n    ],\n    [\n        LangErrorCode.AccountNotAssociatedTokenAccount,\n        \"The given account is not the associated token account\",\n    ],\n    [\n        LangErrorCode.AccountSysvarMismatch,\n        \"The given public key does not match the required sysvar\",\n    ],\n    [\n        LangErrorCode.AccountReallocExceedsLimit,\n        \"The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit\",\n    ],\n    [\n        LangErrorCode.AccountDuplicateReallocs,\n        \"The account was duplicated for more than one reallocation\",\n    ],\n    // Miscellaneous\n    [\n        LangErrorCode.DeclaredProgramIdMismatch,\n        \"The declared program id does not match the actual program id\",\n    ],\n    [\n        LangErrorCode.TryingToInitPayerAsProgramAccount,\n        \"You cannot/should not initialize the payer account as a program account\",\n    ],\n    [\n        LangErrorCode.InvalidNumericConversion,\n        \"The program could not perform the numeric conversion, out of range integral type conversion attempted\",\n    ],\n    // Deprecated\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\",\n    ],\n]);\n\nclass IdlCoder {\n    static fieldLayout(field, types = [], genericArgs) {\n        const fieldName = field.name;\n        switch (field.type) {\n            case \"bool\": {\n                return borsh.bool(fieldName);\n            }\n            case \"u8\": {\n                return borsh.u8(fieldName);\n            }\n            case \"i8\": {\n                return borsh.i8(fieldName);\n            }\n            case \"u16\": {\n                return borsh.u16(fieldName);\n            }\n            case \"i16\": {\n                return borsh.i16(fieldName);\n            }\n            case \"u32\": {\n                return borsh.u32(fieldName);\n            }\n            case \"i32\": {\n                return borsh.i32(fieldName);\n            }\n            case \"f32\": {\n                return borsh.f32(fieldName);\n            }\n            case \"u64\": {\n                return borsh.u64(fieldName);\n            }\n            case \"i64\": {\n                return borsh.i64(fieldName);\n            }\n            case \"f64\": {\n                return borsh.f64(fieldName);\n            }\n            case \"u128\": {\n                return borsh.u128(fieldName);\n            }\n            case \"i128\": {\n                return borsh.i128(fieldName);\n            }\n            case \"u256\": {\n                return borsh.u256(fieldName);\n            }\n            case \"i256\": {\n                return borsh.i256(fieldName);\n            }\n            case \"bytes\": {\n                return borsh.vecU8(fieldName);\n            }\n            case \"string\": {\n                return borsh.str(fieldName);\n            }\n            case \"pubkey\": {\n                return borsh.publicKey(fieldName);\n            }\n            default: {\n                if (\"option\" in field.type) {\n                    return borsh.option(IdlCoder.fieldLayout({ type: field.type.option }, types, genericArgs), fieldName);\n                }\n                if (\"vec\" in field.type) {\n                    return borsh.vec(IdlCoder.fieldLayout({ type: field.type.vec }, types, genericArgs), fieldName);\n                }\n                if (\"array\" in field.type) {\n                    let [type, len] = field.type.array;\n                    len = IdlCoder.resolveArrayLen(len, genericArgs);\n                    return borsh.array(IdlCoder.fieldLayout({ type }, types, genericArgs), len, fieldName);\n                }\n                if (\"defined\" in field.type) {\n                    if (!types) {\n                        throw new IdlError(\"User defined types not provided\");\n                    }\n                    const definedName = field.type.defined.name;\n                    const typeDef = types.find((t) => t.name === definedName);\n                    if (!typeDef) {\n                        throw new IdlError(`Type not found: ${field.name}`);\n                    }\n                    return IdlCoder.typeDefLayout({\n                        typeDef,\n                        types,\n                        genericArgs: genericArgs !== null && genericArgs !== void 0 ? genericArgs : field.type.defined.generics,\n                        name: fieldName,\n                    });\n                }\n                if (\"generic\" in field.type) {\n                    const genericArg = genericArgs === null || genericArgs === void 0 ? void 0 : genericArgs.at(0);\n                    if ((genericArg === null || genericArg === void 0 ? void 0 : genericArg.kind) !== \"type\") {\n                        throw new IdlError(`Invalid generic field: ${field.name}`);\n                    }\n                    return IdlCoder.fieldLayout({ ...field, type: genericArg.type }, types);\n                }\n                throw new IdlError(`Not yet implemented: ${JSON.stringify(field.type)}`);\n            }\n        }\n    }\n    /**\n     * Get the type layout of the given defined type(struct or enum).\n     */\n    static typeDefLayout({ typeDef, types, name, genericArgs, }) {\n        switch (typeDef.type.kind) {\n            case \"struct\": {\n                const fieldLayouts = handleDefinedFields(typeDef.type.fields, () => [], (fields) => fields.map((f) => {\n                    const genArgs = genericArgs\n                        ? IdlCoder.resolveGenericArgs({\n                            type: f.type,\n                            typeDef,\n                            genericArgs,\n                        })\n                        : genericArgs;\n                    return IdlCoder.fieldLayout(f, types, genArgs);\n                }), (fields) => fields.map((f, i) => {\n                    const genArgs = genericArgs\n                        ? IdlCoder.resolveGenericArgs({\n                            type: f,\n                            typeDef,\n                            genericArgs,\n                        })\n                        : genericArgs;\n                    return IdlCoder.fieldLayout({ name: i.toString(), type: f }, types, genArgs);\n                }));\n                return borsh.struct(fieldLayouts, name);\n            }\n            case \"enum\": {\n                const variants = typeDef.type.variants.map((variant) => {\n                    const fieldLayouts = handleDefinedFields(variant.fields, () => [], (fields) => fields.map((f) => {\n                        const genArgs = genericArgs\n                            ? IdlCoder.resolveGenericArgs({\n                                type: f.type,\n                                typeDef,\n                                genericArgs,\n                            })\n                            : genericArgs;\n                        return IdlCoder.fieldLayout(f, types, genArgs);\n                    }), (fields) => fields.map((f, i) => {\n                        const genArgs = genericArgs\n                            ? IdlCoder.resolveGenericArgs({\n                                type: f,\n                                typeDef,\n                                genericArgs,\n                            })\n                            : genericArgs;\n                        return IdlCoder.fieldLayout({ name: i.toString(), type: f }, types, genArgs);\n                    }));\n                    return borsh.struct(fieldLayouts, variant.name);\n                });\n                if (name !== undefined) {\n                    // Buffer-layout lib requires the name to be null (on construction)\n                    // when used as a field.\n                    return borsh.rustEnum(variants).replicate(name);\n                }\n                return borsh.rustEnum(variants, name);\n            }\n            case \"type\": {\n                return IdlCoder.fieldLayout({ type: typeDef.type.alias, name }, types);\n            }\n        }\n    }\n    /**\n     * Get the type of the size in bytes. Returns `1` for variable length types.\n     */\n    static typeSize(ty, idl, genericArgs) {\n        var _a;\n        switch (ty) {\n            case \"bool\":\n                return 1;\n            case \"u8\":\n                return 1;\n            case \"i8\":\n                return 1;\n            case \"i16\":\n                return 2;\n            case \"u16\":\n                return 2;\n            case \"u32\":\n                return 4;\n            case \"i32\":\n                return 4;\n            case \"f32\":\n                return 4;\n            case \"u64\":\n                return 8;\n            case \"i64\":\n                return 8;\n            case \"f64\":\n                return 8;\n            case \"u128\":\n                return 16;\n            case \"i128\":\n                return 16;\n            case \"u256\":\n                return 32;\n            case \"i256\":\n                return 32;\n            case \"bytes\":\n                return 1;\n            case \"string\":\n                return 1;\n            case \"pubkey\":\n                return 32;\n            default:\n                if (\"option\" in ty) {\n                    return 1 + IdlCoder.typeSize(ty.option, idl, genericArgs);\n                }\n                if (\"coption\" in ty) {\n                    return 4 + IdlCoder.typeSize(ty.coption, idl, genericArgs);\n                }\n                if (\"vec\" in ty) {\n                    return 1;\n                }\n                if (\"array\" in ty) {\n                    let [type, len] = ty.array;\n                    len = IdlCoder.resolveArrayLen(len, genericArgs);\n                    return IdlCoder.typeSize(type, idl, genericArgs) * len;\n                }\n                if (\"defined\" in ty) {\n                    const typeDef = (_a = idl.types) === null || _a === void 0 ? void 0 : _a.find((t) => t.name === ty.defined.name);\n                    if (!typeDef) {\n                        throw new IdlError(`Type not found: ${JSON.stringify(ty)}`);\n                    }\n                    const typeSize = (type) => {\n                        const genArgs = genericArgs !== null && genericArgs !== void 0 ? genericArgs : ty.defined.generics;\n                        const args = genArgs\n                            ? IdlCoder.resolveGenericArgs({\n                                type,\n                                typeDef,\n                                genericArgs: genArgs,\n                            })\n                            : genArgs;\n                        return IdlCoder.typeSize(type, idl, args);\n                    };\n                    switch (typeDef.type.kind) {\n                        case \"struct\": {\n                            return handleDefinedFields(typeDef.type.fields, () => [0], (fields) => fields.map((f) => typeSize(f.type)), (fields) => fields.map((f) => typeSize(f))).reduce((acc, size) => acc + size, 0);\n                        }\n                        case \"enum\": {\n                            const variantSizes = typeDef.type.variants.map((variant) => {\n                                return handleDefinedFields(variant.fields, () => [0], (fields) => fields.map((f) => typeSize(f.type)), (fields) => fields.map((f) => typeSize(f))).reduce((acc, size) => acc + size, 0);\n                            });\n                            return Math.max(...variantSizes) + 1;\n                        }\n                        case \"type\": {\n                            return IdlCoder.typeSize(typeDef.type.alias, idl, genericArgs);\n                        }\n                    }\n                }\n                if (\"generic\" in ty) {\n                    const genericArg = genericArgs === null || genericArgs === void 0 ? void 0 : genericArgs.at(0);\n                    if ((genericArg === null || genericArg === void 0 ? void 0 : genericArg.kind) !== \"type\") {\n                        throw new IdlError(`Invalid generic: ${ty.generic}`);\n                    }\n                    return IdlCoder.typeSize(genericArg.type, idl, genericArgs);\n                }\n                throw new Error(`Invalid type ${JSON.stringify(ty)}`);\n        }\n    }\n    /**\n     * Resolve the generic array length or return the constant-sized array length.\n     */\n    static resolveArrayLen(len, genericArgs) {\n        if (typeof len === \"number\")\n            return len;\n        if (genericArgs) {\n            const genericLen = genericArgs.find((g) => g.kind === \"const\");\n            if ((genericLen === null || genericLen === void 0 ? void 0 : genericLen.kind) === \"const\") {\n                len = +genericLen.value;\n            }\n        }\n        if (typeof len !== \"number\") {\n            throw new IdlError(\"Generic array length did not resolve\");\n        }\n        return len;\n    }\n    /**\n     * Recursively resolve generic arguments i.e. replace all generics with the\n     * actual type that they hold based on the initial `genericArgs` given.\n     */\n    static resolveGenericArgs({ type, typeDef, genericArgs, isDefined, }) {\n        if (typeof type !== \"object\")\n            return null;\n        for (const index in typeDef.generics) {\n            const defGeneric = typeDef.generics[index];\n            if (\"generic\" in type && defGeneric.name === type.generic) {\n                return [genericArgs[index]];\n            }\n            if (\"option\" in type) {\n                const args = IdlCoder.resolveGenericArgs({\n                    type: type.option,\n                    typeDef,\n                    genericArgs,\n                    isDefined,\n                });\n                if (!args || !isDefined)\n                    return args;\n                if (args[0].kind === \"type\") {\n                    return [\n                        {\n                            kind: \"type\",\n                            type: { option: args[0].type },\n                        },\n                    ];\n                }\n            }\n            if (\"vec\" in type) {\n                const args = IdlCoder.resolveGenericArgs({\n                    type: type.vec,\n                    typeDef,\n                    genericArgs,\n                    isDefined,\n                });\n                if (!args || !isDefined)\n                    return args;\n                if (args[0].kind === \"type\") {\n                    return [\n                        {\n                            kind: \"type\",\n                            type: { vec: args[0].type },\n                        },\n                    ];\n                }\n            }\n            if (\"array\" in type) {\n                const [elTy, len] = type.array;\n                const isGenericLen = typeof len === \"object\";\n                const args = IdlCoder.resolveGenericArgs({\n                    type: elTy,\n                    typeDef,\n                    genericArgs,\n                    isDefined,\n                });\n                if (args) {\n                    // Has generic type, also check for generic length\n                    for (const i in typeDef.generics.slice(+index)) {\n                        const curIndex = +index + +i;\n                        if (isGenericLen &&\n                            typeDef.generics[curIndex].name === len.generic) {\n                            args.push(genericArgs[curIndex]);\n                        }\n                    }\n                    if (!isDefined)\n                        return args;\n                    if (args[0].kind === \"type\" && args[1].kind === \"const\") {\n                        return [\n                            {\n                                kind: \"type\",\n                                type: { array: [args[0].type, +args[1].value] },\n                            },\n                        ];\n                    }\n                }\n                // Only generic len\n                if (isGenericLen && defGeneric.name === len.generic) {\n                    const arg = genericArgs[index];\n                    if (!isDefined)\n                        return [arg];\n                    return [\n                        {\n                            kind: \"type\",\n                            type: { array: [elTy, +arg.value] },\n                        },\n                    ];\n                }\n                // Non-generic\n                return null;\n            }\n            if (\"defined\" in type) {\n                if (!type.defined.generics)\n                    return null;\n                return type.defined.generics\n                    .flatMap((g) => {\n                    switch (g.kind) {\n                        case \"type\":\n                            return IdlCoder.resolveGenericArgs({\n                                type: g.type,\n                                typeDef,\n                                genericArgs,\n                                isDefined: true,\n                            });\n                        case \"const\":\n                            return [g];\n                    }\n                })\n                    .filter((g) => g !== null);\n            }\n        }\n        return null;\n    }\n}\n\n/**\n * Encodes and decodes program instructions.\n */\nclass BorshInstructionCoder {\n    constructor(idl) {\n        this.idl = idl;\n        const ixLayouts = idl.instructions.map((ix) => {\n            const name = ix.name;\n            const fieldLayouts = ix.args.map((arg) => IdlCoder.fieldLayout(arg, idl.types));\n            const layout = borsh.struct(fieldLayouts, name);\n            return [name, { discriminator: ix.discriminator, layout }];\n        });\n        this.ixLayouts = new Map(ixLayouts);\n    }\n    /**\n     * Encodes a program instruction.\n     */\n    encode(ixName, ix) {\n        const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n        const encoder = this.ixLayouts.get(ixName);\n        if (!encoder) {\n            throw new Error(`Unknown method: ${ixName}`);\n        }\n        const len = encoder.layout.encode(ix, buffer);\n        const data = buffer.slice(0, len);\n        return Buffer$1.concat([Buffer$1.from(encoder.discriminator), data]);\n    }\n    /**\n     * Decodes a program instruction.\n     */\n    decode(ix, encoding = \"hex\") {\n        if (typeof ix === \"string\") {\n            ix = encoding === \"hex\" ? Buffer$1.from(ix, \"hex\") : bs58$1.decode(ix);\n        }\n        for (const [name, layout] of this.ixLayouts) {\n            const givenDisc = ix.subarray(0, layout.discriminator.length);\n            const matches = givenDisc.equals(Buffer$1.from(layout.discriminator));\n            if (matches) {\n                return {\n                    name,\n                    data: layout.layout.decode(ix.subarray(givenDisc.length)),\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns a formatted table of all the fields in the given instruction data.\n     */\n    format(ix, accountMetas) {\n        return InstructionFormatter.format(ix, accountMetas, this.idl);\n    }\n}\nclass InstructionFormatter {\n    static format(ix, accountMetas, idl) {\n        const idlIx = idl.instructions.find((i) => ix.name === i.name);\n        if (!idlIx) {\n            console.error(\"Invalid instruction given\");\n            return null;\n        }\n        const args = idlIx.args.map((idlField) => {\n            return {\n                name: idlField.name,\n                type: InstructionFormatter.formatIdlType(idlField.type),\n                data: InstructionFormatter.formatIdlData(idlField, ix.data[idlField.name], idl.types),\n            };\n        });\n        const flatIdlAccounts = InstructionFormatter.flattenIdlAccounts(idlIx.accounts);\n        const accounts = accountMetas.map((meta, idx) => {\n            if (idx < flatIdlAccounts.length) {\n                return {\n                    name: flatIdlAccounts[idx].name,\n                    ...meta,\n                };\n            }\n            // \"Remaining accounts\" are unnamed in Anchor.\n            else {\n                return {\n                    name: undefined,\n                    ...meta,\n                };\n            }\n        });\n        return {\n            args,\n            accounts,\n        };\n    }\n    static formatIdlType(idlType) {\n        if (typeof idlType === \"string\") {\n            return idlType;\n        }\n        if (\"option\" in idlType) {\n            return `Option<${this.formatIdlType(idlType.option)}>`;\n        }\n        if (\"coption\" in idlType) {\n            return `COption<${this.formatIdlType(idlType.coption)}>`;\n        }\n        if (\"vec\" in idlType) {\n            return `Vec<${this.formatIdlType(idlType.vec)}>`;\n        }\n        if (\"array\" in idlType) {\n            return `Array<${idlType.array[0]}; ${idlType.array[1]}>`;\n        }\n        if (\"defined\" in idlType) {\n            const name = idlType.defined.name;\n            if (idlType.defined.generics) {\n                const generics = idlType.defined.generics\n                    .map((g) => {\n                    switch (g.kind) {\n                        case \"type\":\n                            return InstructionFormatter.formatIdlType(g.type);\n                        case \"const\":\n                            return g.value;\n                    }\n                })\n                    .join(\", \");\n                return `${name}<${generics}>`;\n            }\n            return name;\n        }\n        throw new Error(`Unknown IDL type: ${idlType}`);\n    }\n    static formatIdlData(idlField, data, types) {\n        if (typeof idlField.type === \"string\") {\n            return data.toString();\n        }\n        if (\"vec\" in idlField.type) {\n            return (\"[\" +\n                data\n                    .map((d) => this.formatIdlData({ name: \"\", type: idlField.type.vec }, d, types))\n                    .join(\", \") +\n                \"]\");\n        }\n        if (\"option\" in idlField.type) {\n            return data === null\n                ? \"null\"\n                : this.formatIdlData({ name: \"\", type: idlField.type.option }, data, types);\n        }\n        if (\"defined\" in idlField.type) {\n            if (!types) {\n                throw new Error(\"User defined types not provided\");\n            }\n            const definedName = idlField.type.defined.name;\n            const typeDef = types.find((t) => t.name === definedName);\n            if (!typeDef) {\n                throw new Error(`Type not found: ${definedName}`);\n            }\n            return InstructionFormatter.formatIdlDataDefined(typeDef, data, types);\n        }\n        return \"unknown\";\n    }\n    static formatIdlDataDefined(typeDef, data, types) {\n        switch (typeDef.type.kind) {\n            case \"struct\": {\n                return (\"{ \" +\n                    handleDefinedFields(typeDef.type.fields, () => \"\", (fields) => {\n                        return Object.entries(data)\n                            .map(([key, val]) => {\n                            const field = fields.find((f) => f.name === key);\n                            if (!field) {\n                                throw new Error(`Field not found: ${key}`);\n                            }\n                            return (key +\n                                \": \" +\n                                InstructionFormatter.formatIdlData(field, val, types));\n                        })\n                            .join(\", \");\n                    }, (fields) => {\n                        return Object.entries(data)\n                            .map(([key, val]) => {\n                            return (key +\n                                \": \" +\n                                InstructionFormatter.formatIdlData({ name: \"\", type: fields[key] }, val, types));\n                        })\n                            .join(\", \");\n                    }) +\n                    \" }\");\n            }\n            case \"enum\": {\n                const variantName = Object.keys(data)[0];\n                const variant = typeDef.type.variants.find((v) => v.name === variantName);\n                if (!variant) {\n                    throw new Error(`Unable to find variant: ${variantName}`);\n                }\n                const enumValue = data[variantName];\n                return handleDefinedFields(variant.fields, () => variantName, (fields) => {\n                    const namedFields = Object.keys(enumValue)\n                        .map((f) => {\n                        const fieldData = enumValue[f];\n                        const idlField = fields.find((v) => v.name === f);\n                        if (!idlField) {\n                            throw new Error(`Field not found: ${f}`);\n                        }\n                        return (f +\n                            \": \" +\n                            InstructionFormatter.formatIdlData(idlField, fieldData, types));\n                    })\n                        .join(\", \");\n                    return `${variantName} { ${namedFields} }`;\n                }, (fields) => {\n                    const tupleFields = Object.entries(enumValue)\n                        .map(([key, val]) => {\n                        return (key +\n                            \": \" +\n                            InstructionFormatter.formatIdlData({ name: \"\", type: fields[key] }, val, types));\n                    })\n                        .join(\", \");\n                    return `${variantName} { ${tupleFields} }`;\n                });\n            }\n            case \"type\": {\n                return InstructionFormatter.formatIdlType(typeDef.type.alias);\n            }\n        }\n    }\n    static flattenIdlAccounts(accounts, prefix) {\n        return accounts\n            .map((account) => {\n            const accName = sentenceCase(account.name);\n            if (account.hasOwnProperty(\"accounts\")) {\n                const newPrefix = prefix ? `${prefix} > ${accName}` : accName;\n                return InstructionFormatter.flattenIdlAccounts(account.accounts, newPrefix);\n            }\n            else {\n                return {\n                    ...account,\n                    name: prefix ? `${prefix} > ${accName}` : accName,\n                };\n            }\n        })\n            .flat();\n    }\n}\nfunction sentenceCase(field) {\n    const result = field.replace(/([A-Z])/g, \" $1\");\n    return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\n/**\n * Encodes and decodes account objects.\n */\nclass BorshAccountsCoder {\n    constructor(idl) {\n        this.idl = idl;\n        if (!idl.accounts) {\n            this.accountLayouts = new Map();\n            return;\n        }\n        const types = idl.types;\n        if (!types) {\n            throw new Error(\"Accounts require `idl.types`\");\n        }\n        const layouts = idl.accounts.map((acc) => {\n            const typeDef = types.find((ty) => ty.name === acc.name);\n            if (!typeDef) {\n                throw new Error(`Account not found: ${acc.name}`);\n            }\n            return [\n                acc.name,\n                {\n                    discriminator: acc.discriminator,\n                    layout: IdlCoder.typeDefLayout({ typeDef, types }),\n                },\n            ];\n        });\n        this.accountLayouts = new Map(layouts);\n    }\n    async encode(accountName, account) {\n        const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        const len = layout.layout.encode(account, buffer);\n        const accountData = buffer.slice(0, len);\n        const discriminator = this.accountDiscriminator(accountName);\n        return Buffer$1.concat([discriminator, accountData]);\n    }\n    decode(accountName, data) {\n        // Assert the account discriminator is correct.\n        const discriminator = this.accountDiscriminator(accountName);\n        if (discriminator.compare(data.slice(0, discriminator.length))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeAny(data) {\n        for (const [name, layout] of this.accountLayouts) {\n            const givenDisc = data.subarray(0, layout.discriminator.length);\n            const matches = givenDisc.equals(Buffer$1.from(layout.discriminator));\n            if (matches)\n                return this.decodeUnchecked(name, data);\n        }\n        throw new Error(\"Account not found\");\n    }\n    decodeUnchecked(accountName, acc) {\n        // Chop off the discriminator before decoding.\n        const discriminator = this.accountDiscriminator(accountName);\n        const data = acc.subarray(discriminator.length);\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        return layout.layout.decode(data);\n    }\n    memcmp(accountName, appendData) {\n        const discriminator = this.accountDiscriminator(accountName);\n        return {\n            offset: 0,\n            bytes: bs58$1.encode(appendData ? Buffer$1.concat([discriminator, appendData]) : discriminator),\n        };\n    }\n    size(accountName) {\n        return (this.accountDiscriminator(accountName).length +\n            IdlCoder.typeSize({ defined: { name: accountName } }, this.idl));\n    }\n    /**\n     * Get the unique discriminator prepended to all anchor accounts.\n     *\n     * @param name The name of the account to get the discriminator of.\n     */\n    accountDiscriminator(name) {\n        var _a;\n        const account = (_a = this.idl.accounts) === null || _a === void 0 ? void 0 : _a.find((acc) => acc.name === name);\n        if (!account) {\n            throw new Error(`Account not found: ${name}`);\n        }\n        return Buffer$1.from(account.discriminator);\n    }\n}\n\nclass BorshEventCoder {\n    constructor(idl) {\n        if (!idl.events) {\n            this.layouts = new Map();\n            return;\n        }\n        const types = idl.types;\n        if (!types) {\n            throw new Error(\"Events require `idl.types`\");\n        }\n        const layouts = idl.events.map((ev) => {\n            const typeDef = types.find((ty) => ty.name === ev.name);\n            if (!typeDef) {\n                throw new Error(`Event not found: ${ev.name}`);\n            }\n            return [\n                ev.name,\n                {\n                    discriminator: ev.discriminator,\n                    layout: IdlCoder.typeDefLayout({ typeDef, types }),\n                },\n            ];\n        });\n        this.layouts = new Map(layouts);\n    }\n    decode(log) {\n        let logArr;\n        // This will throw if log length is not a multiple of 4.\n        try {\n            logArr = decode(log);\n        }\n        catch (e) {\n            return null;\n        }\n        for (const [name, layout] of this.layouts) {\n            const givenDisc = logArr.subarray(0, layout.discriminator.length);\n            const matches = givenDisc.equals(Buffer$1.from(layout.discriminator));\n            if (matches) {\n                return {\n                    name,\n                    data: layout.layout.decode(logArr.subarray(givenDisc.length)),\n                };\n            }\n        }\n        return null;\n    }\n}\n\n/**\n * Encodes and decodes user-defined types.\n */\nclass BorshTypesCoder {\n    constructor(idl) {\n        const types = idl.types;\n        if (!types) {\n            this.typeLayouts = new Map();\n            return;\n        }\n        const layouts = types\n            .filter((ty) => !ty.generics)\n            .map((ty) => [\n            ty.name,\n            IdlCoder.typeDefLayout({ typeDef: ty, types }),\n        ]);\n        this.typeLayouts = new Map(layouts);\n    }\n    encode(name, type) {\n        const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.typeLayouts.get(name);\n        if (!layout) {\n            throw new Error(`Unknown type: ${name}`);\n        }\n        const len = layout.encode(type, buffer);\n        return buffer.slice(0, len);\n    }\n    decode(name, data) {\n        const layout = this.typeLayouts.get(name);\n        if (!layout) {\n            throw new Error(`Unknown type: ${name}`);\n        }\n        return layout.decode(data);\n    }\n}\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */\nclass BorshCoder {\n    constructor(idl) {\n        this.instruction = new BorshInstructionCoder(idl);\n        this.accounts = new BorshAccountsCoder(idl);\n        this.events = new BorshEventCoder(idl);\n        this.types = new BorshTypesCoder(idl);\n    }\n}\n\n/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nvar Layout_2 = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob$1 extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/** Factory for {@link OffsetLayout}. */\nvar offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nvar u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nvar u32 = (property => new UInt(4, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nvar nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nvar ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Structure} values. */\nvar struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link Union} values. */\nvar union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link Blob} values. */\nvar blob = ((length, property) => new Blob$1(length, property));\n\nclass SystemInstructionCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_) { }\n    encode(ixName, ix) {\n        switch (ixName) {\n            case \"createAccount\": {\n                return encodeCreateAccount(ix);\n            }\n            case \"assign\": {\n                return encodeAssign(ix);\n            }\n            case \"transfer\": {\n                return encodeTransfer(ix);\n            }\n            case \"createAccountWithSeed\": {\n                return encodeCreateAccountWithSeed(ix);\n            }\n            case \"advanceNonceAccount\": {\n                return encodeAdvanceNonceAccount(ix);\n            }\n            case \"withdrawNonceAccount\": {\n                return encodeWithdrawNonceAccount(ix);\n            }\n            case \"initializeNonceAccount\": {\n                return encodeInitializeNonceAccount(ix);\n            }\n            case \"authorizeNonceAccount\": {\n                return encodeAuthorizeNonceAccount(ix);\n            }\n            case \"allocate\": {\n                return encodeAllocate(ix);\n            }\n            case \"allocateWithSeed\": {\n                return encodeAllocateWithSeed(ix);\n            }\n            case \"assignWithSeed\": {\n                return encodeAssignWithSeed(ix);\n            }\n            case \"transferWithSeed\": {\n                return encodeTransferWithSeed(ix);\n            }\n            default: {\n                throw new Error(`Invalid instruction: ${ixName}`);\n            }\n        }\n    }\n    encodeState(_ixName, _ix) {\n        throw new Error(\"System does not have state\");\n    }\n}\nclass RustStringLayout extends Layout_2 {\n    constructor(property) {\n        super(-1, property);\n        this.property = property;\n        this.layout = struct([\n            u32(\"length\"),\n            u32(\"lengthPadding\"),\n            blob(offset(u32(), -8), \"chars\"),\n        ], this.property);\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span;\n        }\n        const data = {\n            chars: Buffer.from(src, \"utf8\"),\n        };\n        return this.layout.encode(data, b, offset);\n    }\n    decode(b, offset = 0) {\n        const data = this.layout.decode(b, offset);\n        return data[\"chars\"].toString();\n    }\n    getSpan(b, offset = 0) {\n        return (u32().span +\n            u32().span +\n            new BN(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber());\n    }\n}\nfunction rustStringLayout(property) {\n    return new RustStringLayout(property);\n}\nfunction publicKey$2(property) {\n    return blob(32, property);\n}\nfunction encodeCreateAccount({ lamports, space, owner }) {\n    return encodeData({\n        createAccount: { lamports, space, owner: owner.toBuffer() },\n    });\n}\nfunction encodeAssign({ owner }) {\n    return encodeData({\n        assign: { owner: owner.toBuffer() },\n    });\n}\nfunction encodeTransfer({ lamports }) {\n    return encodeData({\n        transfer: { lamports },\n    });\n}\nfunction encodeCreateAccountWithSeed({ base, seed, lamports, space, owner, }) {\n    return encodeData({\n        createAccountWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            lamports,\n            space,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount({ authorized }) {\n    return encodeData({\n        initializeNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeAdvanceNonceAccount({ authorized }) {\n    return encodeData({\n        advanceNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeWithdrawNonceAccount({ lamports }) {\n    return encodeData({\n        withdrawNonceAccount: { lamports },\n    });\n}\nfunction encodeAuthorizeNonceAccount({ authorized }) {\n    return encodeData({\n        authorizeNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeAllocate({ space }) {\n    return encodeData({\n        allocate: { space },\n    });\n}\nfunction encodeAllocateWithSeed({ base, seed, space, owner }) {\n    return encodeData({\n        allocateWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            space,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed({ base, seed, owner }) {\n    return encodeData({\n        assignWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed({ lamports, seed, owner }) {\n    return encodeData({\n        transferWithSeed: {\n            lamports,\n            seed,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = union(u32(\"instruction\"));\nLAYOUT.addVariant(0, struct([\n    ns64(\"lamports\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"createAccount\");\nLAYOUT.addVariant(1, struct([publicKey$2(\"owner\")]), \"assign\");\nLAYOUT.addVariant(2, struct([ns64(\"lamports\")]), \"transfer\");\nLAYOUT.addVariant(3, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    ns64(\"lamports\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, struct([publicKey$2(\"authorized\")]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, struct([ns64(\"lamports\")]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, struct([publicKey$2(\"authorized\")]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, struct([publicKey$2(\"authorized\")]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, struct([ns64(\"space\")]), \"allocate\");\nLAYOUT.addVariant(9, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    publicKey$2(\"owner\"),\n]), \"assignWithSeed\");\nLAYOUT.addVariant(11, struct([\n    ns64(\"lamports\"),\n    rustStringLayout(\"seed\"),\n    publicKey$2(\"owner\"),\n]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n    const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    if (maxSpan === undefined) {\n        return b.slice(0, span);\n    }\n    return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\n\nclass SystemAccountsCoder {\n    constructor(idl) {\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        switch (accountName) {\n            case \"nonce\": {\n                const buffer = Buffer.alloc(NONCE_ACCOUNT_LENGTH);\n                const len = NONCE_ACCOUNT_LAYOUT.encode(account, buffer);\n                return buffer.slice(0, len);\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    decode(accountName, ix) {\n        return this.decodeUnchecked(accountName, ix);\n    }\n    decodeUnchecked(accountName, ix) {\n        switch (accountName) {\n            case \"nonce\": {\n                return decodeNonceAccount(ix);\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    // TODO: this won't use the appendData.\n    memcmp(accountName, _appendData) {\n        switch (accountName) {\n            case \"nonce\": {\n                return {\n                    dataSize: NONCE_ACCOUNT_LENGTH,\n                };\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    size(accountName) {\n        return IdlCoder.typeSize({ defined: { name: accountName } }, this.idl);\n    }\n}\nfunction decodeNonceAccount(ix) {\n    return NONCE_ACCOUNT_LAYOUT.decode(ix);\n}\nclass WrappedLayout$1 extends Layout_2 {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey$1(property) {\n    return new WrappedLayout$1(blob(32), (b) => new PublicKey(b), (key) => key.toBuffer(), property);\n}\nconst NONCE_ACCOUNT_LAYOUT = struct([\n    u32(\"version\"),\n    u32(\"state\"),\n    publicKey$1(\"authorizedPubkey\"),\n    publicKey$1(\"nonce\"),\n    struct([nu64(\"lamportsPerSignature\")], \"feeCalculator\"),\n]);\n\nclass SystemEventsCoder {\n    constructor(_idl) { }\n    decode(_log) {\n        throw new Error(\"System program does not have events\");\n    }\n}\n\nclass SystemTypesCoder {\n    constructor(_idl) { }\n    encode(_name, _type) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n    decode(_name, _typeData) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n}\n\n/**\n * Coder for the System program.\n */\nclass SystemCoder {\n    constructor(idl) {\n        this.instruction = new SystemInstructionCoder(idl);\n        this.accounts = new SystemAccountsCoder(idl);\n        this.events = new SystemEventsCoder(idl);\n        this.types = new SystemTypesCoder(idl);\n    }\n}\n\nfunction hash(data) {\n    return new TextDecoder().decode(sha256$1(data));\n}\n\nvar sha256 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hash: hash\n});\n\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n    const buffer = Buffer$1.concat([\n        fromPublicKey.toBuffer(),\n        Buffer$1.from(seed),\n        programId.toBuffer(),\n    ]);\n    return new PublicKey(sha256$1(buffer));\n}\n\nvar pubkey = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createWithSeedSync: createWithSeedSync\n});\n\nconst TOKEN_PROGRAM_ID = new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");\nconst ASSOCIATED_PROGRAM_ID = new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\nfunction associatedAddress({ mint, owner, }) {\n    return PublicKey.findProgramAddressSync([owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()], ASSOCIATED_PROGRAM_ID)[0];\n}\n\nvar token = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    TOKEN_PROGRAM_ID: TOKEN_PROGRAM_ID,\n    ASSOCIATED_PROGRAM_ID: ASSOCIATED_PROGRAM_ID,\n    associatedAddress: associatedAddress\n});\n\nvar browserPonyfill = {exports: {}};\n\n(function (module, exports) {\nvar global = typeof self !== 'undefined' ? self : commonjsGlobal;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException;\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\n((function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}))({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers;\nexports.Request = ctx.Request;\nexports.Response = ctx.Response;\nmodule.exports = exports;\n}(browserPonyfill, browserPonyfill.exports));\n\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\n/**\n * Returns a verified build from the anchor registry. null if no such\n * verified build exists, e.g., if the program has been upgraded since the\n * last verified build.\n */\nasync function verifiedBuild(connection, programId, limit = 5) {\n    const url = `https://api.apr.dev/api/v0/program/${programId.toString()}/latest?limit=${limit}`;\n    const [programData, latestBuildsResp] = await Promise.all([\n        fetchData(connection, programId),\n        fetch(url),\n    ]);\n    // Filter out all non successful builds.\n    const latestBuilds = (await latestBuildsResp.json()).filter((b) => !b.aborted && b.state === \"Built\" && b.verified === \"Verified\");\n    if (latestBuilds.length === 0) {\n        return null;\n    }\n    // Get the latest build.\n    const build = latestBuilds[0];\n    // Has the program been upgraded since the last build?\n    if (programData.slot.toNumber() !== build.verified_slot) {\n        return null;\n    }\n    // Success.\n    return build;\n}\n/**\n * Returns the program data account for this program, containing the\n * metadata for this program, e.g., the upgrade authority.\n */\nasync function fetchData(connection, programId) {\n    const accountInfo = await connection.getAccountInfo(programId);\n    if (accountInfo === null) {\n        throw new Error(\"program account not found\");\n    }\n    const { program } = decodeUpgradeableLoaderState(accountInfo.data);\n    const programdataAccountInfo = await connection.getAccountInfo(program.programdataAddress);\n    if (programdataAccountInfo === null) {\n        throw new Error(\"program data account not found\");\n    }\n    const { programData } = decodeUpgradeableLoaderState(programdataAccountInfo.data);\n    return programData;\n}\nconst UPGRADEABLE_LOADER_STATE_LAYOUT = borsh.rustEnum([\n    borsh.struct([], \"uninitialized\"),\n    borsh.struct([borsh.option(borsh.publicKey(), \"authorityAddress\")], \"buffer\"),\n    borsh.struct([borsh.publicKey(\"programdataAddress\")], \"program\"),\n    borsh.struct([\n        borsh.u64(\"slot\"),\n        borsh.option(borsh.publicKey(), \"upgradeAuthorityAddress\"),\n    ], \"programData\"),\n], undefined, borsh.u32());\nfunction decodeUpgradeableLoaderState(data) {\n    return UPGRADEABLE_LOADER_STATE_LAYOUT.decode(data);\n}\n\nvar registry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    verifiedBuild: verifiedBuild,\n    fetchData: fetchData,\n    decodeUpgradeableLoaderState: decodeUpgradeableLoaderState\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    sha256: sha256,\n    rpc: rpc,\n    publicKey: pubkey,\n    bytes: index$1,\n    token: token,\n    features: features,\n    registry: registry\n});\n\nconst PROGRAM_LOG = \"Program log: \";\nconst PROGRAM_DATA = \"Program data: \";\nconst PROGRAM_LOG_START_INDEX = PROGRAM_LOG.length;\nconst PROGRAM_DATA_START_INDEX = PROGRAM_DATA.length;\nclass EventManager {\n    constructor(programId, provider, coder) {\n        this._programId = programId;\n        this._provider = provider;\n        this._eventParser = new EventParser(programId, coder);\n        this._eventCallbacks = new Map();\n        this._eventListeners = new Map();\n        this._listenerIdCount = 0;\n    }\n    addEventListener(eventName, callback, commitment) {\n        var _a;\n        let listener = this._listenerIdCount;\n        this._listenerIdCount += 1;\n        // Store the listener into the event map.\n        if (!this._eventListeners.has(eventName)) {\n            this._eventListeners.set(eventName, []);\n        }\n        this._eventListeners.set(eventName, ((_a = this._eventListeners.get(eventName)) !== null && _a !== void 0 ? _a : []).concat(listener));\n        // Store the callback into the listener map.\n        this._eventCallbacks.set(listener, [eventName, callback]);\n        // Create the subscription singleton, if needed.\n        if (this._onLogsSubscriptionId !== undefined) {\n            return listener;\n        }\n        this._onLogsSubscriptionId = this._provider.connection.onLogs(this._programId, (logs, ctx) => {\n            if (logs.err) {\n                return;\n            }\n            for (const event of this._eventParser.parseLogs(logs.logs)) {\n                const allListeners = this._eventListeners.get(event.name);\n                if (allListeners) {\n                    allListeners.forEach((listener) => {\n                        const listenerCb = this._eventCallbacks.get(listener);\n                        if (listenerCb) {\n                            const [, callback] = listenerCb;\n                            callback(event.data, ctx.slot, logs.signature);\n                        }\n                    });\n                }\n            }\n        }, commitment);\n        return listener;\n    }\n    async removeEventListener(listener) {\n        // Get the callback.\n        const callback = this._eventCallbacks.get(listener);\n        if (!callback) {\n            throw new Error(`Event listener ${listener} doesn't exist!`);\n        }\n        const [eventName] = callback;\n        // Get the listeners.\n        let listeners = this._eventListeners.get(eventName);\n        if (!listeners) {\n            throw new Error(`Event listeners don't exist for ${eventName}!`);\n        }\n        // Update both maps.\n        this._eventCallbacks.delete(listener);\n        listeners = listeners.filter((l) => l !== listener);\n        this._eventListeners.set(eventName, listeners);\n        if (listeners.length === 0) {\n            this._eventListeners.delete(eventName);\n        }\n        // Kill the websocket connection if all listeners have been removed.\n        if (this._eventCallbacks.size === 0) {\n            if (this._eventListeners.size !== 0) {\n                throw new Error(`Expected event listeners size to be 0 but got ${this._eventListeners.size}`);\n            }\n            if (this._onLogsSubscriptionId !== undefined) {\n                await this._provider.connection.removeOnLogsListener(this._onLogsSubscriptionId);\n                this._onLogsSubscriptionId = undefined;\n            }\n        }\n    }\n}\nclass EventParser {\n    constructor(programId, coder) {\n        this.coder = coder;\n        this.programId = programId;\n    }\n    // Each log given, represents an array of messages emitted by\n    // a single transaction, which can execute many different programs across\n    // CPI boundaries. However, the subscription is only interested in the\n    // events emitted by *this* program. In achieving this, we keep track of the\n    // program execution context by parsing each log and looking for a CPI\n    // `invoke` call. If one exists, we know a new program is executing. So we\n    // push the programId onto a stack and switch the program context. This\n    // allows us to track, for a given log, which program was executing during\n    // its emission, thereby allowing us to know if a given log event was\n    // emitted by *this* program. If it was, then we parse the raw string and\n    // emit the event if the string matches the event being subscribed to.\n    *parseLogs(logs, errorOnDecodeFailure = false) {\n        const logScanner = new LogScanner(logs);\n        const execution = new ExecutionContext();\n        let log = logScanner.next();\n        while (log !== null) {\n            let [event, newProgram, didPop] = this.handleLog(execution, log, errorOnDecodeFailure);\n            if (event) {\n                yield event;\n            }\n            if (newProgram) {\n                execution.push(newProgram);\n            }\n            if (didPop) {\n                execution.pop();\n            }\n            log = logScanner.next();\n        }\n    }\n    // Main log handler. Returns a three element array of the event, the\n    // next program that was invoked for CPI, and a boolean indicating if\n    // a program has completed execution (and thus should be popped off the\n    // execution stack).\n    handleLog(execution, log, errorOnDecodeFailure) {\n        // Executing program is this program.\n        if (execution.stack.length > 0 &&\n            execution.program() === this.programId.toString()) {\n            return this.handleProgramLog(log, errorOnDecodeFailure);\n        }\n        // Executing program is not this program.\n        else {\n            return [null, ...this.handleSystemLog(log)];\n        }\n    }\n    // Handles logs from *this* program.\n    handleProgramLog(log, errorOnDecodeFailure) {\n        // This is a `msg!` log or a `sol_log_data` log.\n        if (log.startsWith(PROGRAM_LOG) || log.startsWith(PROGRAM_DATA)) {\n            const logStr = log.startsWith(PROGRAM_LOG)\n                ? log.slice(PROGRAM_LOG_START_INDEX)\n                : log.slice(PROGRAM_DATA_START_INDEX);\n            const event = this.coder.events.decode(logStr);\n            if (errorOnDecodeFailure && event === null) {\n                throw new Error(`Unable to decode event ${logStr}`);\n            }\n            return [event, null, false];\n        }\n        // System log.\n        else {\n            return [null, ...this.handleSystemLog(log)];\n        }\n    }\n    // Handles logs when the current program being executing is *not* this.\n    handleSystemLog(log) {\n        // System component.\n        const logStart = log.split(\":\")[0];\n        // Did the program finish executing?\n        if (logStart.match(/^Program (.*) success/g) !== null) {\n            return [null, true];\n            // Recursive call.\n        }\n        else if (logStart.startsWith(`Program ${this.programId.toString()} invoke`)) {\n            return [this.programId.toString(), false];\n        }\n        // CPI call.\n        else if (logStart.includes(\"invoke\")) {\n            return [\"cpi\", false]; // Any string will do.\n        }\n        else {\n            return [null, false];\n        }\n    }\n}\n// Stack frame execution context, allowing one to track what program is\n// executing for a given log.\nclass ExecutionContext {\n    constructor() {\n        this.stack = [];\n    }\n    program() {\n        if (!this.stack.length) {\n            throw new Error(\"Expected the stack to have elements\");\n        }\n        return this.stack[this.stack.length - 1];\n    }\n    push(newProgram) {\n        this.stack.push(newProgram);\n    }\n    pop() {\n        if (!this.stack.length) {\n            throw new Error(\"Expected the stack to have elements\");\n        }\n        this.stack.pop();\n    }\n}\nclass LogScanner {\n    constructor(logs) {\n        this.logs = logs;\n    }\n    next() {\n        if (this.logs.length === 0) {\n            return null;\n        }\n        let l = this.logs[0];\n        this.logs = this.logs.slice(1);\n        return l;\n    }\n}\n\nfunction splitArgsAndCtx(idlIx, args) {\n    var _a, _b;\n    let options = {};\n    const inputLen = idlIx.args ? idlIx.args.length : 0;\n    if (args.length > inputLen) {\n        if (args.length !== inputLen + 1) {\n            throw new Error(`provided too many arguments ${args} to instruction ${idlIx === null || idlIx === void 0 ? void 0 : idlIx.name} expecting: ${(_b = (_a = idlIx.args) === null || _a === void 0 ? void 0 : _a.map((a) => a.name)) !== null && _b !== void 0 ? _b : []}`);\n        }\n        options = args.pop();\n    }\n    return [args, options];\n}\n\nclass InstructionNamespaceFactory {\n    static build(idlIx, encodeFn, programId) {\n        if (idlIx.name === \"_inner\") {\n            throw new IdlError(\"the _inner name is reserved\");\n        }\n        const ix = (...args) => {\n            const [ixArgs, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            validateAccounts(idlIx.accounts, ctx.accounts);\n            validateInstruction(idlIx, ...args);\n            const keys = ix.accounts(ctx.accounts);\n            if (ctx.remainingAccounts !== undefined) {\n                keys.push(...ctx.remainingAccounts);\n            }\n            if (isSet(\"debug-logs\")) {\n                console.log(\"Outgoing account metas:\", keys);\n            }\n            return new TransactionInstruction({\n                keys,\n                programId,\n                data: encodeFn(idlIx.name, toInstruction(idlIx, ...ixArgs)),\n            });\n        };\n        // Utility fn for ordering the accounts for this instruction.\n        ix[\"accounts\"] = (accs) => {\n            return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts, programId, idlIx.name);\n        };\n        return ix;\n    }\n    static accountsArray(ctx, accounts, programId, ixName) {\n        if (!ctx) {\n            return [];\n        }\n        return accounts\n            .map((acc) => {\n            if (isCompositeAccounts(acc)) {\n                const rpcAccs = ctx[acc.name];\n                return InstructionNamespaceFactory.accountsArray(rpcAccs, acc.accounts, programId, ixName).flat();\n            }\n            let pubkey;\n            try {\n                pubkey = translateAddress(ctx[acc.name]);\n            }\n            catch (err) {\n                throw new Error(`Wrong input type for account \"${acc.name}\" in the instruction accounts object${ixName !== undefined ? ' for instruction \"' + ixName + '\"' : \"\"}. Expected PublicKey or string.`);\n            }\n            const isOptional = acc.optional && pubkey.equals(programId);\n            const isWritable = Boolean(acc.writable && !isOptional);\n            const isSigner = Boolean(acc.signer && !isOptional);\n            return {\n                pubkey,\n                isWritable,\n                isSigner,\n            };\n        })\n            .flat();\n    }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n    // todo\n}\n\nclass TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args) => {\n            var _a, _b, _c;\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            const tx = new Transaction();\n            if (ctx.preInstructions && ctx.instructions) {\n                throw new Error(\"instructions is deprecated, use preInstructions\");\n            }\n            (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach((ix) => tx.add(ix));\n            (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach((ix) => tx.add(ix));\n            tx.add(ixFn(...args));\n            (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach((ix) => tx.add(ix));\n            return tx;\n        };\n        return txFn;\n    }\n}\n\nclass RpcFactory {\n    static build(idlIx, txFn, idlErrors, provider) {\n        const rpc = async (...args) => {\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            if (provider.sendAndConfirm === undefined) {\n                throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n            }\n            try {\n                return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n            }\n            catch (err) {\n                throw translateError(err, idlErrors);\n            }\n        };\n        return rpc;\n    }\n}\n\nclass AccountFactory {\n    static build(idl, coder, programId, provider) {\n        var _a;\n        return ((_a = idl.accounts) !== null && _a !== void 0 ? _a : []).reduce((accountFns, acc) => {\n            accountFns[acc.name] = new AccountClient(idl, acc, programId, provider, coder);\n            return accountFns;\n        }, {});\n    }\n}\nclass AccountClient {\n    /**\n     * Returns the number of bytes in this account.\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * Returns the program ID owning all accounts.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */\n    get coder() {\n        return this._coder;\n    }\n    constructor(idl, idlAccount, programId, provider, coder) {\n        this._idlAccount = idlAccount;\n        this._programId = programId;\n        this._provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(idl);\n        this._size = this._coder.accounts.size(idlAccount.name);\n    }\n    /**\n     * Returns a deserialized account, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchNullable(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchNullableAndContext(address, commitment) {\n        const accountInfo = await this.getAccountInfoAndContext(address, commitment);\n        const { value, context } = accountInfo;\n        return {\n            data: value && value.data.length !== 0\n                ? this._coder.accounts.decode(this._idlAccount.name, value.data)\n                : null,\n            context,\n        };\n    }\n    /**\n     * Returns a deserialized account.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetch(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist or has no data ${address.toString()}`);\n        }\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchAndContext(address, commitment) {\n        const { data, context } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist ${address.toString()}`);\n        }\n        return { data, context };\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */\n    async fetchMultiple(addresses, commitment) {\n        const accounts = await this.fetchMultipleAndContext(addresses, commitment);\n        return accounts.map((account) => (account ? account.data : null));\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */\n    async fetchMultipleAndContext(addresses, commitment) {\n        const accounts = await getMultipleAccountsAndContext(this._provider.connection, addresses.map((address) => translateAddress(address)), commitment);\n        // Decode accounts where discriminator is correct, null otherwise\n        return accounts.map((result) => {\n            if (result == null) {\n                return null;\n            }\n            const { account, context } = result;\n            return {\n                data: this._coder.accounts.decode(this._idlAccount.name, account.data),\n                context,\n            };\n        });\n    }\n    /**\n     * Returns all instances of this account type for the program.\n     *\n     * @param filters User-provided filters to narrow the results from `connection.getProgramAccounts`.\n     *\n     *                When filters are not defined this method returns all\n     *                the account instances.\n     *\n     *                When filters are of type `Buffer`, the filters are appended\n     *                after the discriminator.\n     *\n     *                When filters are of type `GetProgramAccountsFilter[]`,\n     *                filters are appended after the discriminator filter.\n     */\n    async all(filters) {\n        const filter = this.coder.accounts.memcmp(this._idlAccount.name, filters instanceof Buffer ? filters : undefined);\n        const coderFilters = [];\n        if ((filter === null || filter === void 0 ? void 0 : filter.offset) != undefined && (filter === null || filter === void 0 ? void 0 : filter.bytes) != undefined) {\n            coderFilters.push({\n                memcmp: { offset: filter.offset, bytes: filter.bytes },\n            });\n        }\n        if ((filter === null || filter === void 0 ? void 0 : filter.dataSize) != undefined) {\n            coderFilters.push({ dataSize: filter.dataSize });\n        }\n        let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n            commitment: this._provider.connection.commitment,\n            filters: [...coderFilters, ...(Array.isArray(filters) ? filters : [])],\n        });\n        return resp.map(({ pubkey, account }) => {\n            return {\n                publicKey: pubkey,\n                account: this._coder.accounts.decode(this._idlAccount.name, account.data),\n            };\n        });\n    }\n    /**\n     * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n     * changes.\n     */\n    subscribe(address, commitment) {\n        const sub = subscriptions.get(address.toString());\n        if (sub) {\n            return sub.ee;\n        }\n        const ee = new EventEmitter();\n        address = translateAddress(address);\n        const listener = this._provider.connection.onAccountChange(address, (acc) => {\n            const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        subscriptions.set(address.toString(), {\n            ee,\n            listener,\n        });\n        return ee;\n    }\n    /**\n     * Unsubscribes from the account at the given address.\n     */\n    async unsubscribe(address) {\n        let sub = subscriptions.get(address.toString());\n        if (!sub) {\n            console.warn(\"Address is not subscribed\");\n            return;\n        }\n        if (subscriptions) {\n            await this._provider.connection\n                .removeAccountChangeListener(sub.listener)\n                .then(() => {\n                subscriptions.delete(address.toString());\n            })\n                .catch(console.error);\n        }\n    }\n    /**\n     * Returns an instruction for creating this account.\n     */\n    async createInstruction(signer, sizeOverride) {\n        const size = this.size;\n        if (this._provider.publicKey === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'publicKey' field.\");\n        }\n        return SystemProgram.createAccount({\n            fromPubkey: this._provider.publicKey,\n            newAccountPubkey: signer.publicKey,\n            space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n            lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n            programId: this._programId,\n        });\n    }\n    async getAccountInfo(address, commitment) {\n        return await this._provider.connection.getAccountInfo(translateAddress(address), commitment);\n    }\n    async getAccountInfoAndContext(address, commitment) {\n        return await this._provider.connection.getAccountInfoAndContext(translateAddress(address), commitment);\n    }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map();\n\nclass SimulateFactory {\n    static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n        const simulate = async (...args) => {\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            let resp = undefined;\n            if (provider.simulate === undefined) {\n                throw new Error(\"This function requires 'Provider.simulate' to be implemented.\");\n            }\n            try {\n                resp = await provider.simulate(tx, ctx.signers, (_a = ctx.options) === null || _a === void 0 ? void 0 : _a.commitment);\n            }\n            catch (err) {\n                throw translateError(err, idlErrors);\n            }\n            if (resp === undefined) {\n                throw new Error(\"Unable to simulate transaction\");\n            }\n            const logs = resp.logs;\n            if (!logs) {\n                throw new Error(\"Simulated logs not found\");\n            }\n            const events = [];\n            if (idl.events) {\n                let parser = new EventParser(programId, coder);\n                for (const event of parser.parseLogs(logs)) {\n                    events.push(event);\n                }\n            }\n            return { events, raw: logs };\n        };\n        return simulate;\n    }\n}\n\nfunction uint64(property) {\n    return new WrappedLayout(blob(8), (b) => u64.fromBuffer(b), (n) => n.toBuffer(), property);\n}\nfunction publicKey(property) {\n    return new WrappedLayout(blob(32), (b) => new PublicKey(b), (key) => key.toBuffer(), property);\n}\nfunction coption(layout, property) {\n    return new COptionLayout(layout, property);\n}\nclass WrappedLayout extends Layout_2 {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nclass COptionLayout extends Layout_2 {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = u32();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span + this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 4) + 4;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 4);\n        }\n        throw new Error(\"Invalid coption \" + this.layout.property);\n    }\n    getSpan(b, offset = 0) {\n        return this.layout.getSpan(b, offset + 4) + 4;\n    }\n}\nclass u64 extends BN {\n    /**\n     * Convert to Buffer representation\n     */\n    toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 8) {\n            return b;\n        }\n        if (b.length >= 8) {\n            throw new Error(\"u64 too large\");\n        }\n        const zeroPad = Buffer.alloc(8);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */\n    static fromBuffer(buffer) {\n        if (buffer.length !== 8) {\n            throw new Error(`Invalid buffer length: ${buffer.length}`);\n        }\n        return new u64([...buffer]\n            .reverse()\n            .map((i) => `00${i.toString(16)}`.slice(-2))\n            .join(\"\"), 16);\n    }\n}\nconst TOKEN_ACCOUNT_LAYOUT = struct([\n    publicKey(\"mint\"),\n    publicKey(\"owner\"),\n    uint64(\"amount\"),\n    coption(publicKey(), \"delegate\"),\n    ((p) => {\n        const U = union(u8(\"discriminator\"), null, p);\n        U.addVariant(0, struct([]), \"uninitialized\");\n        U.addVariant(1, struct([]), \"initialized\");\n        U.addVariant(2, struct([]), \"frozen\");\n        return U;\n    })(\"state\"),\n    coption(uint64(), \"isNative\"),\n    uint64(\"delegatedAmount\"),\n    coption(publicKey(), \"closeAuthority\"),\n]);\nfunction decodeTokenAccount(b) {\n    return TOKEN_ACCOUNT_LAYOUT.decode(b);\n}\n\n// Populates a given accounts context with PDAs and common missing accounts.\nclass AccountsResolver {\n    constructor(_args, _accounts, _provider, _programId, _idlIx, accountNamespace, _idlTypes, _customResolver) {\n        this._args = _args;\n        this._accounts = _accounts;\n        this._provider = _provider;\n        this._programId = _programId;\n        this._idlIx = _idlIx;\n        this._idlTypes = _idlTypes;\n        this._customResolver = _customResolver;\n        this._accountStore = new AccountStore(_provider, accountNamespace, _programId);\n    }\n    args(args) {\n        this._args = args;\n    }\n    // Note: We serially resolve PDAs one by one rather than doing them\n    //       in parallel because there can be dependencies between\n    //       addresses. That is, one PDA can be used as a seed in another.\n    async resolve() {\n        this.resolveEventCpi(this._idlIx.accounts);\n        this.resolveConst(this._idlIx.accounts);\n        // Auto populate pdas and relations until we stop finding new accounts\n        let depth = 0;\n        while ((await this.resolvePdasAndRelations(this._idlIx.accounts)) +\n            (await this.resolveCustom()) >\n            0) {\n            depth++;\n            if (depth === 16) {\n                const isResolvable = (acc) => {\n                    if (!isCompositeAccounts(acc)) {\n                        return !!(acc.address || acc.pda || acc.relations);\n                    }\n                    return acc.accounts.some(isResolvable);\n                };\n                const getPaths = (accs, path = [], paths = []) => {\n                    for (const acc of accs) {\n                        if (isCompositeAccounts(acc)) {\n                            paths.push(...getPaths(acc.accounts, [...path, acc.name]));\n                        }\n                        else {\n                            paths.push([...path, acc.name]);\n                        }\n                    }\n                    return paths;\n                };\n                const resolvableAccs = this._idlIx.accounts.filter(isResolvable);\n                const unresolvedAccs = getPaths(resolvableAccs)\n                    .filter((path) => !this.get(path))\n                    .map((path) => path.reduce((acc, p) => acc + \".\" + p))\n                    .map((acc) => `\\`${acc}\\``)\n                    .join(\", \");\n                throw new Error([\n                    `Reached maximum depth for account resolution.`,\n                    `Unresolved accounts: ${unresolvedAccs}`,\n                ].join(\" \"));\n            }\n        }\n    }\n    resolveOptionals(accounts) {\n        Object.assign(this._accounts, this.resolveOptionalsHelper(accounts, this._idlIx.accounts));\n    }\n    get(path) {\n        // Only return if pubkey\n        const ret = path.reduce((acc, subPath) => acc && acc[subPath], this._accounts);\n        if (ret && ret.toBase58) {\n            return ret;\n        }\n    }\n    set(path, value) {\n        let cur = this._accounts;\n        path.forEach((p, i) => {\n            var _a;\n            const isLast = i === path.length - 1;\n            if (isLast) {\n                cur[p] = value;\n            }\n            cur[p] = (_a = cur[p]) !== null && _a !== void 0 ? _a : {};\n            cur = cur[p];\n        });\n    }\n    resolveOptionalsHelper(partialAccounts, accounts) {\n        const nestedAccountsGeneric = {};\n        // Looping through accountItem array instead of on partialAccounts, so\n        // we only traverse array once\n        for (const accountItem of accounts) {\n            const accountName = accountItem.name;\n            const partialAccount = partialAccounts[accountName];\n            // Skip if the account isn't included (thus would be undefined)\n            if (partialAccount === undefined)\n                continue;\n            if (isPartialAccounts(partialAccount)) {\n                // is compound accounts, recurse one level deeper\n                if (isCompositeAccounts(accountItem)) {\n                    nestedAccountsGeneric[accountName] = this.resolveOptionalsHelper(partialAccount, accountItem[\"accounts\"]);\n                }\n                else {\n                    // Here we try our best to recover gracefully. If there are optionals we can't check, we will fail then.\n                    nestedAccountsGeneric[accountName] = flattenPartialAccounts(partialAccount, true);\n                }\n            }\n            else {\n                // if not compound accounts, do null/optional check and proceed\n                if (partialAccount !== null) {\n                    nestedAccountsGeneric[accountName] = translateAddress(partialAccount);\n                }\n                else if (accountItem[\"optional\"]) {\n                    nestedAccountsGeneric[accountName] = this._programId;\n                }\n            }\n        }\n        return nestedAccountsGeneric;\n    }\n    async resolveCustom() {\n        if (this._customResolver) {\n            const { accounts, resolved } = await this._customResolver({\n                args: this._args,\n                accounts: this._accounts,\n                provider: this._provider,\n                programId: this._programId,\n                idlIx: this._idlIx,\n            });\n            this._accounts = accounts;\n            return resolved;\n        }\n        return 0;\n    }\n    /**\n     * Resolve event CPI accounts `eventAuthority` and `program`.\n     *\n     * Accounts will only be resolved if they are declared next to each other to\n     * reduce the chance of name collision.\n     */\n    resolveEventCpi(accounts, path = []) {\n        for (const i in accounts) {\n            const accountOrAccounts = accounts[i];\n            if (isCompositeAccounts(accountOrAccounts)) {\n                this.resolveEventCpi(accountOrAccounts.accounts, [\n                    ...path,\n                    accountOrAccounts.name,\n                ]);\n            }\n            // Validate next index exists\n            const nextIndex = +i + 1;\n            if (nextIndex === accounts.length)\n                return;\n            const currentName = accounts[i].name;\n            const nextName = accounts[nextIndex].name;\n            // Populate event CPI accounts if they exist\n            if (currentName === \"eventAuthority\" && nextName === \"program\") {\n                const currentPath = [...path, currentName];\n                const nextPath = [...path, nextName];\n                if (!this.get(currentPath)) {\n                    this.set(currentPath, PublicKey.findProgramAddressSync([Buffer.from(\"__event_authority\")], this._programId)[0]);\n                }\n                if (!this.get(nextPath)) {\n                    this.set(nextPath, this._programId);\n                }\n                return;\n            }\n        }\n    }\n    resolveConst(accounts, path = []) {\n        for (const accountOrAccounts of accounts) {\n            const name = accountOrAccounts.name;\n            if (isCompositeAccounts(accountOrAccounts)) {\n                this.resolveConst(accountOrAccounts.accounts, [...path, name]);\n            }\n            else {\n                const account = accountOrAccounts;\n                if ((account.signer || account.address) && !this.get([...path, name])) {\n                    // Default signers to the provider\n                    if (account.signer) {\n                        if (!this._provider.wallet) {\n                            throw new Error(\"This function requires the `Provider` interface implementor to have a `wallet` field.\");\n                        }\n                        this.set([...path, name], this._provider.wallet.publicKey);\n                    }\n                    // Set based on `address` field\n                    if (account.address) {\n                        this.set([...path, name], translateAddress(account.address));\n                    }\n                }\n            }\n        }\n    }\n    async resolvePdasAndRelations(accounts, path = []) {\n        let found = 0;\n        for (const accountOrAccounts of accounts) {\n            const name = accountOrAccounts.name;\n            if (isCompositeAccounts(accountOrAccounts)) {\n                found += await this.resolvePdasAndRelations(accountOrAccounts.accounts, [...path, name]);\n            }\n            else {\n                const account = accountOrAccounts;\n                if ((account.pda || account.relations) && !this.get([...path, name])) {\n                    found++;\n                    // Accounts might not get resolved successfully if a seed depends on\n                    // another seed to be resolved *and* the accounts for resolution are\n                    // out of order. In this case, skip the accounts that throw in order\n                    // to resolve those accounts later.\n                    try {\n                        if (account.pda) {\n                            const seeds = await Promise.all(account.pda.seeds.map((seed) => this.toBuffer(seed, path)));\n                            if (seeds.some((seed) => !seed)) {\n                                continue;\n                            }\n                            const programId = await this.parseProgramId(account, path);\n                            const [pubkey] = PublicKey.findProgramAddressSync(seeds, programId);\n                            this.set([...path, name], pubkey);\n                        }\n                    }\n                    catch { }\n                    try {\n                        if (account.relations) {\n                            const accountKey = this.get([...path, account.relations[0]]);\n                            if (accountKey) {\n                                const account = await this._accountStore.fetchAccount({\n                                    publicKey: accountKey,\n                                });\n                                this.set([...path, name], account[name]);\n                            }\n                        }\n                    }\n                    catch { }\n                }\n            }\n        }\n        return found;\n    }\n    async parseProgramId(account, path = []) {\n        var _a;\n        if (!((_a = account.pda) === null || _a === void 0 ? void 0 : _a.program)) {\n            return this._programId;\n        }\n        const buf = await this.toBuffer(account.pda.program, path);\n        if (!buf) {\n            throw new Error(`Program seed not resolved: ${account.name}`);\n        }\n        return new PublicKey(buf);\n    }\n    async toBuffer(seed, path = []) {\n        switch (seed.kind) {\n            case \"const\":\n                return this.toBufferConst(seed);\n            case \"arg\":\n                return await this.toBufferArg(seed);\n            case \"account\":\n                return await this.toBufferAccount(seed, path);\n            default:\n                throw new Error(`Unexpected seed: ${seed}`);\n        }\n    }\n    toBufferConst(seed) {\n        return this.toBufferValue(\"bytes\", seed.value);\n    }\n    async toBufferArg(seed) {\n        const [name, ...path] = seed.path.split(\".\");\n        const index = this._idlIx.args.findIndex((arg) => arg.name === name);\n        if (index === -1) {\n            throw new Error(`Unable to find argument for seed: ${name}`);\n        }\n        const value = path.reduce((acc, path) => (acc !== null && acc !== void 0 ? acc : {})[path], this._args[index]);\n        if (value === undefined) {\n            return;\n        }\n        const type = this.getType(this._idlIx.args[index].type, path);\n        return this.toBufferValue(type, value);\n    }\n    async toBufferAccount(seed, path = []) {\n        const [name, ...paths] = seed.path.split(\".\");\n        const fieldPubkey = this.get([...path, name]);\n        if (!fieldPubkey)\n            return;\n        // The seed is a pubkey of the account.\n        if (!paths.length) {\n            return this.toBufferValue(\"pubkey\", fieldPubkey);\n        }\n        if (!seed.account) {\n            throw new Error(`Seed account is required in order to resolve type: ${seed.path}`);\n        }\n        // The key is account data.\n        //\n        // Fetch and deserialize it.\n        const account = await this._accountStore.fetchAccount({\n            publicKey: fieldPubkey,\n            name: seed.account,\n        });\n        // Dereference all fields in the path to get the field value\n        // used in the seed.\n        let accountValue = account;\n        let currentPaths = paths;\n        while (currentPaths.length > 0) {\n            accountValue = accountValue[currentPaths[0]];\n            currentPaths = currentPaths.slice(1);\n        }\n        if (accountValue === undefined)\n            return;\n        const type = this.getType({ defined: { name: seed.account } }, paths);\n        return this.toBufferValue(type, accountValue);\n    }\n    /**\n     * Converts the given idl valaue into a Buffer. The values here must be\n     * primitives, e.g. no structs.\n     */\n    toBufferValue(type, value) {\n        switch (type) {\n            case \"u8\":\n            case \"i8\":\n                return Buffer.from([value]);\n            case \"u16\":\n            case \"i16\":\n                return new BN(value).toArrayLike(Buffer, \"le\", 2);\n            case \"u32\":\n            case \"i32\":\n                return new BN(value).toArrayLike(Buffer, \"le\", 4);\n            case \"u64\":\n            case \"i64\":\n                return new BN(value).toArrayLike(Buffer, \"le\", 8);\n            case \"u128\":\n            case \"i128\":\n                return new BN(value).toArrayLike(Buffer, \"le\", 16);\n            case \"u256\":\n            case \"i256\":\n                return new BN(value).toArrayLike(Buffer, \"le\", 32);\n            case \"string\":\n                return Buffer.from(value);\n            case \"pubkey\":\n                return value.toBuffer();\n            case \"bytes\":\n                return Buffer.from(value);\n            default:\n                if (type === null || type === void 0 ? void 0 : type.array) {\n                    return Buffer.from(value);\n                }\n                throw new Error(`Unexpected seed type: ${type}`);\n        }\n    }\n    /**\n     * Recursively get the type at some path of either a primitive or a user\n     * defined struct.\n     */\n    getType(type, path = []) {\n        var _a;\n        const typeName = (_a = type === null || type === void 0 ? void 0 : type.defined) === null || _a === void 0 ? void 0 : _a.name;\n        if (typeName) {\n            // Handle token account separately\n            if (typeName === \"tokenAccount\") {\n                switch (path.at(0)) {\n                    case \"mint\":\n                    case \"owner\":\n                        return \"pubkey\";\n                    case \"amount\":\n                    case \"delagatedAmount\":\n                        return \"u64\";\n                    default:\n                        throw new Error(`Unknown token account path: ${path}`);\n                }\n            }\n            const definedType = this._idlTypes.find((t) => t.name === typeName);\n            if (!definedType) {\n                throw new Error(`Type not found: ${typeName}`);\n            }\n            // Only named structs are supported\n            const [fieldName, ...subPath] = path;\n            const fields = definedType.type\n                .fields;\n            const field = fields.find((field) => field.name === fieldName);\n            if (!field) {\n                throw new Error(`Field not found: ${fieldName}`);\n            }\n            return this.getType(field.type, subPath);\n        }\n        return type;\n    }\n}\n// TODO: this should be configurable to avoid unnecessary requests.\nclass AccountStore {\n    constructor(_provider, accounts, programId) {\n        this._provider = _provider;\n        this._cache = new Map();\n        this._idls = {};\n        this._idls[programId.toBase58()] = accounts;\n    }\n    async fetchAccount({ publicKey, name, }) {\n        const address = publicKey.toBase58();\n        if (!this._cache.has(address)) {\n            const accountInfo = await this._provider.connection.getAccountInfo(publicKey);\n            if (accountInfo === null) {\n                throw new Error(`Account not found: ${address}`);\n            }\n            if (name === \"tokenAccount\") {\n                const account = decodeTokenAccount(accountInfo.data);\n                this._cache.set(address, account);\n            }\n            else {\n                const accounts = await this.getAccountsNs(accountInfo.owner);\n                if (accounts) {\n                    const accountNs = Object.values(accounts)[0];\n                    if (accountNs) {\n                        const account = accountNs.coder.accounts.decodeAny(accountInfo.data);\n                        this._cache.set(address, account);\n                    }\n                }\n            }\n        }\n        return this._cache.get(address);\n    }\n    async getAccountsNs(programId) {\n        const programIdStr = programId.toBase58();\n        if (!this._idls[programIdStr]) {\n            const idl = await Program.fetchIdl(programId, this._provider);\n            if (idl) {\n                const program = new Program(idl, this._provider);\n                this._idls[programIdStr] = program.account;\n            }\n        }\n        return this._idls[programIdStr];\n    }\n}\n\nclass MethodsBuilderFactory {\n    static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace, idlTypes, customResolver) {\n        return (...args) => new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n}\nfunction isPartialAccounts(partialAccount) {\n    return (typeof partialAccount === \"object\" &&\n        partialAccount !== null &&\n        !(\"_bn\" in partialAccount) // Ensures not a pubkey\n    );\n}\nfunction flattenPartialAccounts(partialAccounts, throwOnNull) {\n    const toReturn = {};\n    for (const accountName in partialAccounts) {\n        const account = partialAccounts[accountName];\n        if (account === null) {\n            if (throwOnNull)\n                throw new Error(\"Failed to resolve optionals due to IDL type mismatch with input accounts!\");\n            continue;\n        }\n        toReturn[accountName] = isPartialAccounts(account)\n            ? flattenPartialAccounts(account, true)\n            : translateAddress(account);\n    }\n    return toReturn;\n}\nclass MethodsBuilder {\n    constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver) {\n        this._args = _args;\n        this._ixFn = _ixFn;\n        this._txFn = _txFn;\n        this._rpcFn = _rpcFn;\n        this._simulateFn = _simulateFn;\n        this._viewFn = _viewFn;\n        this._accounts = {};\n        this._remainingAccounts = [];\n        this._signers = [];\n        this._preInstructions = [];\n        this._postInstructions = [];\n        this._resolveAccounts = true;\n        this._accountsResolver = new AccountsResolver(_args, this._accounts, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n    args(args) {\n        this._args = args;\n        this._accountsResolver.args(args);\n    }\n    /**\n     * Set instruction accounts with account resolution.\n     *\n     * This method only accepts accounts that cannot be resolved.\n     *\n     * See {@link accountsPartial} for overriding the account resolution or\n     * {@link accountsStrict} for strictly specifying all accounts.\n     */\n    accounts(accounts) {\n        // @ts-ignore\n        return this.accountsPartial(accounts);\n    }\n    /**\n     * Set instruction accounts with account resolution.\n     *\n     * There is no functional difference between this method and {@link accounts}\n     * method, the only difference is this method allows specifying all accounts\n     * even if they can be resolved. On the other hand, {@link accounts} method\n     * doesn't accept accounts that can be resolved.\n     */\n    accountsPartial(accounts) {\n        this._resolveAccounts = true;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    /**\n     * Set instruction accounts without account resolution.\n     *\n     * All accounts strictly need to be specified when this method is used.\n     *\n     * See {@link accounts} and {@link accountsPartial} methods for automatically\n     * resolving accounts.\n     *\n     * @param accounts instruction accounts\n     */\n    accountsStrict(accounts) {\n        this._resolveAccounts = false;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    /**\n     * Set instruction signers.\n     *\n     * Note that calling this method appends the given signers to the existing\n     * signers (instead of overriding them).\n     *\n     * @param signers signers to append\n     */\n    signers(signers) {\n        this._signers = this._signers.concat(signers);\n        return this;\n    }\n    /**\n     * Set remaining accounts.\n     *\n     * Note that calling this method appends the given accounts to the existing\n     * remaining accounts (instead of overriding them).\n     *\n     * @param accounts remaining accounts\n     */\n    remainingAccounts(accounts) {\n        this._remainingAccounts = this._remainingAccounts.concat(accounts);\n        return this;\n    }\n    /**\n     * Set previous instructions.\n     *\n     * See {@link postInstructions} to set the post instructions instead.\n     *\n     * @param ixs instructions\n     * @param prepend whether to prepend to the existing previous instructions\n     */\n    preInstructions(ixs, prepend = false) {\n        if (prepend) {\n            this._preInstructions = ixs.concat(this._preInstructions);\n        }\n        else {\n            this._preInstructions = this._preInstructions.concat(ixs);\n        }\n        return this;\n    }\n    /**\n     * Set post instructions.\n     *\n     * See {@link preInstructions} to set the previous instructions instead.\n     *\n     * @param ixs instructions\n     */\n    postInstructions(ixs) {\n        this._postInstructions = this._postInstructions.concat(ixs);\n        return this;\n    }\n    /**\n     * Get the public keys of the instruction accounts.\n     *\n     * The return type is an object with account names as keys and their public\n     * keys as their values.\n     *\n     * Note that an account key is `undefined` if the account hasn't yet been\n     * specified or resolved.\n     */\n    async pubkeys() {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._accounts;\n    }\n    /**\n     * Create an instruction based on the current configuration.\n     *\n     * See {@link transaction} to create a transaction instead.\n     *\n     * @returns the transaction instruction\n     */\n    async instruction() {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._ixFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n        });\n    }\n    /**\n     * Create a transaction based on the current configuration.\n     *\n     * This method doesn't send the created transaction. Use {@link rpc} method\n     * to conveniently send an confirm the configured transaction.\n     *\n     * See {@link instruction} to only create an instruction instead.\n     *\n     * @returns the transaction\n     */\n    async transaction() {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._txFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n        });\n    }\n    /**\n     * Simulate the configured transaction.\n     *\n     * @param options confirmation options\n     * @returns the simulation response\n     */\n    async simulate(options) {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._simulateFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options,\n        });\n    }\n    /**\n     * View the configured transaction.\n     *\n     * Note that to use this method, the instruction needs to return a value and\n     * all its accounts must be read-only.\n     *\n     * @param options confirmation options\n     * @returns the return value of the instruction\n     */\n    async view(options) {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        if (!this._viewFn) {\n            throw new Error([\n                \"Method does not support views.\",\n                \"The instruction should return a value, and its accounts must be read-only\",\n            ].join(\" \"));\n        }\n        // @ts-ignore\n        return this._viewFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options,\n        });\n    }\n    /**\n     * Send and confirm the configured transaction.\n     *\n     * See {@link rpcAndKeys} to both send the transaction and get the resolved\n     * account public keys.\n     *\n     * @param options confirmation options\n     * @returns the transaction signature\n     */\n    async rpc(options) {\n        if (this._resolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._rpcFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options,\n        });\n    }\n    /**\n     * Conveniently call both {@link rpc} and {@link pubkeys} methods.\n     *\n     * @param options confirmation options\n     * @returns the transaction signature and account public keys\n     */\n    async rpcAndKeys(options) {\n        return {\n            signature: await this.rpc(options),\n            pubkeys: (await this.pubkeys()),\n        };\n    }\n    /**\n     * Get instruction information necessary to include the instruction inside a\n     * transaction.\n     *\n     * # Example\n     *\n     * ```ts\n     * const { instruction, signers, pubkeys } = await method.prepare();\n     * ```\n     */\n    async prepare() {\n        return {\n            instruction: await this.instruction(),\n            signers: this._signers,\n            pubkeys: await this.pubkeys(),\n        };\n    }\n}\n\nclass ViewFactory {\n    static build(programId, idlIx, simulateFn, idl) {\n        const isWritable = idlIx.accounts.find((a) => a.writable);\n        const hasReturn = !!idlIx.returns;\n        if (isWritable || !hasReturn)\n            return;\n        const view = async (...args) => {\n            let simulationResult = await simulateFn(...args);\n            const returnPrefix = `Program return: ${programId} `;\n            let returnLog = simulationResult.raw.find((l) => l.startsWith(returnPrefix));\n            if (!returnLog) {\n                throw new Error(\"View expected return log\");\n            }\n            let returnData = decode(returnLog.slice(returnPrefix.length));\n            let returnType = idlIx.returns;\n            if (!returnType) {\n                throw new Error(\"View expected return type\");\n            }\n            const coder = IdlCoder.fieldLayout({ type: returnType }, idl.types);\n            return coder.decode(returnData);\n        };\n        return view;\n    }\n}\n\nclass NamespaceFactory {\n    /**\n     * Generates all namespaces for a given program.\n     */\n    static build(idl, coder, programId, provider, getCustomResolver) {\n        const rpc = {};\n        const instruction = {};\n        const transaction = {};\n        const simulate = {};\n        const methods = {};\n        const view = {};\n        const idlErrors = parseIdlErrors(idl);\n        const account = idl.accounts\n            ? AccountFactory.build(idl, coder, programId, provider)\n            : {};\n        idl.instructions.forEach((idlIx) => {\n            const ixItem = InstructionNamespaceFactory.build(idlIx, (ixName, ix) => coder.instruction.encode(ixName, ix), programId);\n            const txItem = TransactionFactory.build(idlIx, ixItem);\n            const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n            const simulateItem = SimulateFactory.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n            const viewItem = ViewFactory.build(programId, idlIx, simulateItem, idl);\n            const methodItem = MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account, idl.types || [], getCustomResolver === null || getCustomResolver === void 0 ? void 0 : getCustomResolver(idlIx));\n            const name = idlIx.name;\n            instruction[name] = ixItem;\n            transaction[name] = txItem;\n            rpc[name] = rpcItem;\n            simulate[name] = simulateItem;\n            methods[name] = methodItem;\n            if (viewItem) {\n                view[name] = viewItem;\n            }\n        });\n        return [\n            rpc,\n            instruction,\n            transaction,\n            account,\n            simulate,\n            methods,\n            view,\n        ];\n    }\n}\n\n/**\n * ## Program\n *\n * Program provides the IDL deserialized client representation of an Anchor\n * program.\n *\n * This API is the one stop shop for all things related to communicating with\n * on-chain programs. Among other things, one can send transactions, fetch\n * deserialized accounts, decode instruction data, subscribe to account\n * changes, and listen to events.\n *\n * In addition to field accessors and methods, the object provides a set of\n * dynamically generated properties, also known as namespaces, that\n * map one-to-one to program methods and accounts. These namespaces generally\n *  can be used as follows:\n *\n * ## Usage\n *\n * ```javascript\n * program.<namespace>.<program-specific-method>\n * ```\n *\n * API specifics are namespace dependent. The examples used in the documentation\n * below will refer to the two counter examples found\n * [here](https://github.com/coral-xyz/anchor#examples).\n */\nclass Program {\n    /**\n     * Address of the program.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * IDL in camelCase format to work in TypeScript.\n     *\n     * See {@link rawIdl} field if you need the original IDL.\n     */\n    get idl() {\n        return this._idl;\n    }\n    /**\n     * Raw IDL i.e. the original IDL without camelCase conversion.\n     *\n     * See {@link idl} field if you need the camelCased version of the IDL.\n     */\n    get rawIdl() {\n        return this._rawIdl;\n    }\n    /**\n     * Coder for serializing requests.\n     */\n    get coder() {\n        return this._coder;\n    }\n    /**\n     * Wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * @param idl       The interface definition.\n     * @param provider  The network and wallet context to use. If not provided\n     *                  then uses [[getProvider]].\n     * @param getCustomResolver A function that returns a custom account resolver\n     *                          for the given instruction. This is useful for resolving\n     *                          public keys of missing accounts when building instructions\n     */\n    constructor(idl, provider = getProvider(), coder, getCustomResolver) {\n        // Fields.\n        this._idl = convertIdlToCamelCase(idl);\n        this._rawIdl = idl;\n        this._provider = provider;\n        this._programId = translateAddress(idl.address);\n        this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(this._idl);\n        this._events = new EventManager(this._programId, provider, this._coder);\n        // Dynamic namespaces.\n        const [rpc, instruction, transaction, account, simulate, methods, views] = NamespaceFactory.build(this._idl, this._coder, this._programId, provider, getCustomResolver);\n        this.rpc = rpc;\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.account = account;\n        this.simulate = simulate;\n        this.methods = methods;\n        this.views = views;\n    }\n    /**\n     * Generates a Program client by fetching the IDL from the network.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */\n    static async at(address, provider) {\n        const programId = translateAddress(address);\n        const idl = await Program.fetchIdl(programId, provider);\n        if (!idl) {\n            throw new Error(`IDL not found for program: ${address.toString()}`);\n        }\n        return new Program(idl, provider);\n    }\n    /**\n     * Fetches an idl from the blockchain.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */\n    static async fetchIdl(address, provider) {\n        provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        const programId = translateAddress(address);\n        const idlAddr = await idlAddress(programId);\n        const accountInfo = await provider.connection.getAccountInfo(idlAddr);\n        if (!accountInfo) {\n            return null;\n        }\n        // Chop off account discriminator.\n        let idlAccount = decodeIdlAccount(accountInfo.data.slice(8));\n        const inflatedIdl = inflate(idlAccount.data);\n        return JSON.parse(decode$2(inflatedIdl));\n    }\n    /**\n     * Invokes the given callback every time the given event is emitted.\n     *\n     * @param eventName The PascalCase name of the event, provided by the IDL.\n     * @param callback  The function to invoke whenever the event is emitted from\n     *                  program logs.\n     */\n    addEventListener(eventName, callback, commitment) {\n        return this._events.addEventListener(eventName, callback, commitment);\n    }\n    /**\n     * Unsubscribes from the given eventName.\n     */\n    async removeEventListener(listener) {\n        return await this._events.removeEventListener(listener);\n    }\n}\n\nnew PublicKey(\"11111111111111111111111111111111\");\nfunction program(provider) {\n    return new Program(IDL, provider, coder());\n}\nfunction coder() {\n    return new SystemCoder(IDL);\n}\nconst IDL = {\n    address: \"11111111111111111111111111111111\",\n    metadata: {\n        name: \"systemProgram\",\n        version: \"0.1.0\",\n        spec: \"0.1.0\",\n    },\n    instructions: [\n        {\n            name: \"advanceNonceAccount\",\n            discriminator: [4, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                },\n                {\n                    name: \"authorized\",\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"allocate\",\n            discriminator: [8, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    writable: true,\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"allocateWithSeed\",\n            discriminator: [9, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"account\",\n                    writable: true,\n                },\n                {\n                    name: \"base\",\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"pubkey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"assign\",\n            discriminator: [1, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    writable: true,\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"owner\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"assignWithSeed\",\n            discriminator: [10, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"account\",\n                    writable: true,\n                },\n                {\n                    name: \"base\",\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"pubkey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"authorizeNonceAccount\",\n            discriminator: [7, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true,\n                },\n                {\n                    name: \"authorized\",\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"createAccount\",\n            discriminator: [0, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                    signer: true,\n                },\n                {\n                    name: \"to\",\n                    writable: true,\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"createAccountWithSeed\",\n            discriminator: [3, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                    signer: true,\n                },\n                {\n                    name: \"to\",\n                    writable: true,\n                },\n                {\n                    name: \"base\",\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"pubkey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"initializeNonceAccount\",\n            discriminator: [6, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true,\n                    signer: true,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                },\n                {\n                    name: \"rent\",\n                    address: \"SysvarRent111111111111111111111111111111111\",\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"transfer\",\n            discriminator: [2, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                    signer: true,\n                },\n                {\n                    name: \"to\",\n                    writable: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"transferWithSeed\",\n            discriminator: [11, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"from\",\n                    writable: true,\n                },\n                {\n                    name: \"base\",\n                    signer: true,\n                },\n                {\n                    name: \"to\",\n                    writable: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"pubkey\",\n                },\n            ],\n        },\n        {\n            name: \"withdrawNonceAccount\",\n            discriminator: [5, 0, 0, 0],\n            accounts: [\n                {\n                    name: \"nonce\",\n                    writable: true,\n                },\n                {\n                    name: \"to\",\n                    writable: true,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                },\n                {\n                    name: \"rent\",\n                    address: \"SysvarRent111111111111111111111111111111111\",\n                },\n                {\n                    name: \"authorized\",\n                    signer: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n            ],\n        },\n    ],\n    accounts: [\n        {\n            name: \"nonce\",\n            discriminator: [],\n        },\n    ],\n    types: [\n        {\n            name: \"feeCalculator\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"lamportsPerSignature\",\n                        type: \"u64\",\n                    },\n                ],\n            },\n        },\n        {\n            name: \"nonce\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"version\",\n                        type: \"u32\",\n                    },\n                    {\n                        name: \"state\",\n                        type: \"u32\",\n                    },\n                    {\n                        name: \"authorizedPubkey\",\n                        type: \"pubkey\",\n                    },\n                    {\n                        name: \"nonce\",\n                        type: \"pubkey\",\n                    },\n                    {\n                        name: \"feeCalculator\",\n                        type: {\n                            defined: {\n                                name: \"feeCalculator\",\n                            },\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nclass Native {\n    static system(provider) {\n        return program(provider);\n    }\n}\n\nexport { AccountClient, AnchorError, AnchorProvider, BorshAccountsCoder, BorshCoder, BorshEventCoder, BorshInstructionCoder, EventManager, EventParser, IdlError, LangErrorCode, LangErrorMessage, MethodsBuilderFactory, Native, Program, ProgramError, ProgramErrorStack, SystemCoder, getProvider, parseIdlErrors, setProvider, splitArgsAndCtx, toInstruction, translateAddress, translateError, index as utils, validateAccounts };\n//# sourceMappingURL=index.js.map\n","import e from\"bn.js\";import t from\"buffer\";import{PublicKey as r}from\"@solana/web3.js\";var n={};Object.defineProperty(n,\"__esModule\",{value:!0});var o=n.s16=n.s8=n.nu64be=n.u48be=n.u40be=n.u32be=n.u24be=n.u16be=n.nu64=n.u48=n.u40=H=n.u32=n.u24=n.u16=$=n.u8=q=n.offset=n.greedy=n.Constant=n.UTF8=n.CString=n.Blob=n.Boolean=n.BitField=n.BitStructure=n.VariantLayout=n.Union=n.UnionLayoutDiscriminator=n.UnionDiscriminator=n.Structure=n.Sequence=n.DoubleBE=n.Double=n.FloatBE=n.Float=n.NearInt64BE=n.NearInt64=n.NearUInt64BE=n.NearUInt64=n.IntBE=n.Int=n.UIntBE=n.UInt=n.OffsetLayout=n.GreedyCount=n.ExternalLayout=n.bindConstructorLayout=n.nameWithProperty=n.Layout=n.uint8ArrayToBuffer=n.checkUint8Array=void 0;n.constant=n.utf8=n.cstr=ee=n.blob=n.unionLayoutDiscriminator=n.union=K=n.seq=n.bits=Z=n.struct=n.f64be=n.f64=n.f32be=n.f32=n.ns64be=n.s48be=n.s40be=n.s32be=n.s24be=n.s16be=n.ns64=n.s48=n.s40=n.s32=n.s24=void 0;const i=t;function s(e){if(!(e instanceof Uint8Array))throw new TypeError(\"b must be a Uint8Array\")}function a(e){return s(e),i.Buffer.from(e.buffer,e.byteOffset,e.length)}n.checkUint8Array=s,n.uint8ArrayToBuffer=a;class u{constructor(e,t){if(!Number.isInteger(e))throw new TypeError(\"span must be an integer\");this.span=e,this.property=t}makeDestinationObject(){return{}}getSpan(e,t){if(0>this.span)throw new RangeError(\"indeterminate span\");return this.span}replicate(e){const t=Object.create(this.constructor.prototype);return Object.assign(t,this),t.property=e,t}fromArray(e){}}var c=n.Layout=u;function l(e,t){return t.property?e+\"[\"+t.property+\"]\":e}n.nameWithProperty=l,n.bindConstructorLayout=function(e,t){if(\"function\"!=typeof e)throw new TypeError(\"Class must be constructor\");if(Object.prototype.hasOwnProperty.call(e,\"layout_\"))throw new Error(\"Class is already bound to a layout\");if(!(t&&t instanceof u))throw new TypeError(\"layout must be a Layout\");if(Object.prototype.hasOwnProperty.call(t,\"boundConstructor_\"))throw new Error(\"layout is already bound to a constructor\");e.layout_=t,t.boundConstructor_=e,t.makeDestinationObject=()=>new e,Object.defineProperty(e.prototype,\"encode\",{value(e,r){return t.encode(this,e,r)},writable:!0}),Object.defineProperty(e,\"decode\",{value:(e,r)=>t.decode(e,r),writable:!0})};class f extends u{isCount(){throw new Error(\"ExternalLayout is abstract\")}}n.ExternalLayout=f;class h extends f{constructor(e=1,t){if(!Number.isInteger(e)||0>=e)throw new TypeError(\"elementSpan must be a (positive) integer\");super(-1,t),this.elementSpan=e}isCount(){return!0}decode(e,t=0){s(e);const r=e.length-t;return Math.floor(r/this.elementSpan)}encode(e,t,r){return 0}}n.GreedyCount=h;class d extends f{constructor(e,t=0,r){if(!(e instanceof u))throw new TypeError(\"layout must be a Layout\");if(!Number.isInteger(t))throw new TypeError(\"offset must be integer or undefined\");super(e.span,r||e.property),this.layout=e,this.offset=t}isCount(){return this.layout instanceof p||this.layout instanceof y}decode(e,t=0){return this.layout.decode(e,t+this.offset)}encode(e,t,r=0){return this.layout.encode(e,t,r+this.offset)}}n.OffsetLayout=d;class p extends u{constructor(e,t){if(super(e,t),6<this.span)throw new RangeError(\"span must not exceed 6 bytes\")}decode(e,t=0){return a(e).readUIntLE(t,this.span)}encode(e,t,r=0){return a(t).writeUIntLE(e,r,this.span),this.span}}n.UInt=p;class y extends u{constructor(e,t){if(super(e,t),6<this.span)throw new RangeError(\"span must not exceed 6 bytes\")}decode(e,t=0){return a(e).readUIntBE(t,this.span)}encode(e,t,r=0){return a(t).writeUIntBE(e,r,this.span),this.span}}n.UIntBE=y;class w extends u{constructor(e,t){if(super(e,t),6<this.span)throw new RangeError(\"span must not exceed 6 bytes\")}decode(e,t=0){return a(e).readIntLE(t,this.span)}encode(e,t,r=0){return a(t).writeIntLE(e,r,this.span),this.span}}n.Int=w;class g extends u{constructor(e,t){if(super(e,t),6<this.span)throw new RangeError(\"span must not exceed 6 bytes\")}decode(e,t=0){return a(e).readIntBE(t,this.span)}encode(e,t,r=0){return a(t).writeIntBE(e,r,this.span),this.span}}n.IntBE=g;const m=Math.pow(2,32);function b(e){const t=Math.floor(e/m);return{hi32:t,lo32:e-t*m}}function E(e,t){return e*m+t}class v extends u{constructor(e){super(8,e)}decode(e,t=0){const r=a(e),n=r.readUInt32LE(t);return E(r.readUInt32LE(t+4),n)}encode(e,t,r=0){const n=b(e),o=a(t);return o.writeUInt32LE(n.lo32,r),o.writeUInt32LE(n.hi32,r+4),8}}n.NearUInt64=v;class S extends u{constructor(e){super(8,e)}decode(e,t=0){const r=a(e);return E(r.readUInt32BE(t),r.readUInt32BE(t+4))}encode(e,t,r=0){const n=b(e),o=a(t);return o.writeUInt32BE(n.hi32,r),o.writeUInt32BE(n.lo32,r+4),8}}n.NearUInt64BE=S;class x extends u{constructor(e){super(8,e)}decode(e,t=0){const r=a(e),n=r.readUInt32LE(t);return E(r.readInt32LE(t+4),n)}encode(e,t,r=0){const n=b(e),o=a(t);return o.writeUInt32LE(n.lo32,r),o.writeInt32LE(n.hi32,r+4),8}}n.NearInt64=x;class B extends u{constructor(e){super(8,e)}decode(e,t=0){const r=a(e);return E(r.readInt32BE(t),r.readUInt32BE(t+4))}encode(e,t,r=0){const n=b(e),o=a(t);return o.writeInt32BE(n.hi32,r),o.writeUInt32BE(n.lo32,r+4),8}}n.NearInt64BE=B;class O extends u{constructor(e){super(4,e)}decode(e,t=0){return a(e).readFloatLE(t)}encode(e,t,r=0){return a(t).writeFloatLE(e,r),4}}n.Float=O;class L extends u{constructor(e){super(4,e)}decode(e,t=0){return a(e).readFloatBE(t)}encode(e,t,r=0){return a(t).writeFloatBE(e,r),4}}n.FloatBE=L;class I extends u{constructor(e){super(8,e)}decode(e,t=0){return a(e).readDoubleLE(t)}encode(e,t,r=0){return a(t).writeDoubleLE(e,r),8}}n.Double=I;class N extends u{constructor(e){super(8,e)}decode(e,t=0){return a(e).readDoubleBE(t)}encode(e,t,r=0){return a(t).writeDoubleBE(e,r),8}}n.DoubleBE=N;class U extends u{constructor(e,t,r){if(!(e instanceof u))throw new TypeError(\"elementLayout must be a Layout\");if(!(t instanceof f&&t.isCount()||Number.isInteger(t)&&0<=t))throw new TypeError(\"count must be non-negative integer or an unsigned integer ExternalLayout\");let n=-1;!(t instanceof f)&&0<e.span&&(n=t*e.span),super(n,r),this.elementLayout=e,this.count=t}getSpan(e,t=0){if(0<=this.span)return this.span;let r=0,n=this.count;if(n instanceof f&&(n=n.decode(e,t)),0<this.elementLayout.span)r=n*this.elementLayout.span;else{let o=0;for(;o<n;)r+=this.elementLayout.getSpan(e,t+r),++o}return r}decode(e,t=0){const r=[];let n=0,o=this.count;for(o instanceof f&&(o=o.decode(e,t));n<o;)r.push(this.elementLayout.decode(e,t)),t+=this.elementLayout.getSpan(e,t),n+=1;return r}encode(e,t,r=0){const n=this.elementLayout,o=e.reduce(((e,o)=>e+n.encode(o,t,r+e)),0);return this.count instanceof f&&this.count.encode(e.length,t,r),o}}n.Sequence=U;class A extends u{constructor(e,t,r){if(!Array.isArray(e)||!e.reduce(((e,t)=>e&&t instanceof u),!0))throw new TypeError(\"fields must be array of Layout instances\");\"boolean\"==typeof t&&void 0===r&&(r=t,t=void 0);for(const t of e)if(0>t.span&&void 0===t.property)throw new Error(\"fields cannot contain unnamed variable-length layout\");let n=-1;try{n=e.reduce(((e,t)=>e+t.getSpan()),0)}catch(e){}super(n,t),this.fields=e,this.decodePrefixes=!!r}getSpan(e,t=0){if(0<=this.span)return this.span;let r=0;try{r=this.fields.reduce(((r,n)=>{const o=n.getSpan(e,t);return t+=o,r+o}),0)}catch(e){throw new RangeError(\"indeterminate span\")}return r}decode(e,t=0){s(e);const r=this.makeDestinationObject();for(const n of this.fields)if(void 0!==n.property&&(r[n.property]=n.decode(e,t)),t+=n.getSpan(e,t),this.decodePrefixes&&e.length===t)break;return r}encode(e,t,r=0){const n=r;let o=0,i=0;for(const n of this.fields){let s=n.span;if(i=0<s?s:0,void 0!==n.property){const o=e[n.property];void 0!==o&&(i=n.encode(o,t,r),0>s&&(s=n.getSpan(t,r)))}o=r,r+=s}return o+i-n}fromArray(e){const t=this.makeDestinationObject();for(const r of this.fields)void 0!==r.property&&0<e.length&&(t[r.property]=e.shift());return t}layoutFor(e){if(\"string\"!=typeof e)throw new TypeError(\"property must be string\");for(const t of this.fields)if(t.property===e)return t}offsetOf(e){if(\"string\"!=typeof e)throw new TypeError(\"property must be string\");let t=0;for(const r of this.fields){if(r.property===e)return t;0>r.span?t=-1:0<=t&&(t+=r.span)}}}n.Structure=A;class D{constructor(e){this.property=e}decode(e,t){throw new Error(\"UnionDiscriminator is abstract\")}encode(e,t,r){throw new Error(\"UnionDiscriminator is abstract\")}}n.UnionDiscriminator=D;class T extends D{constructor(e,t){if(!(e instanceof f&&e.isCount()))throw new TypeError(\"layout must be an unsigned integer ExternalLayout\");super(t||e.property||\"variant\"),this.layout=e}decode(e,t){return this.layout.decode(e,t)}encode(e,t,r){return this.layout.encode(e,t,r)}}n.UnionLayoutDiscriminator=T;class P extends u{constructor(e,t,r){let n;if(e instanceof p||e instanceof y)n=new T(new d(e));else if(e instanceof f&&e.isCount())n=new T(e);else{if(!(e instanceof D))throw new TypeError(\"discr must be a UnionDiscriminator or an unsigned integer layout\");n=e}if(void 0===t&&(t=null),!(null===t||t instanceof u))throw new TypeError(\"defaultLayout must be null or a Layout\");if(null!==t){if(0>t.span)throw new Error(\"defaultLayout must have constant span\");void 0===t.property&&(t=t.replicate(\"content\"))}let o=-1;t&&(o=t.span,0<=o&&(e instanceof p||e instanceof y)&&(o+=n.layout.span)),super(o,r),this.discriminator=n,this.usesPrefixDiscriminator=e instanceof p||e instanceof y,this.defaultLayout=t,this.registry={};let i=this.defaultGetSourceVariant.bind(this);this.getSourceVariant=function(e){return i(e)},this.configGetSourceVariant=function(e){i=e.bind(this)}}getSpan(e,t=0){if(0<=this.span)return this.span;const r=this.getVariant(e,t);if(!r)throw new Error(\"unable to determine span for unrecognized variant\");return r.getSpan(e,t)}defaultGetSourceVariant(e){if(Object.prototype.hasOwnProperty.call(e,this.discriminator.property)){if(this.defaultLayout&&this.defaultLayout.property&&Object.prototype.hasOwnProperty.call(e,this.defaultLayout.property))return;const t=this.registry[e[this.discriminator.property]];if(t&&(!t.layout||t.property&&Object.prototype.hasOwnProperty.call(e,t.property)))return t}else for(const t in this.registry){const r=this.registry[t];if(r.property&&Object.prototype.hasOwnProperty.call(e,r.property))return r}throw new Error(\"unable to infer src variant\")}decode(e,t=0){let r;const n=this.discriminator,o=n.decode(e,t),i=this.registry[o];if(void 0===i){const i=this.defaultLayout;let s=0;this.usesPrefixDiscriminator&&(s=n.layout.span),r=this.makeDestinationObject(),r[n.property]=o,r[i.property]=i.decode(e,t+s)}else r=i.decode(e,t);return r}encode(e,t,r=0){const n=this.getSourceVariant(e);if(void 0===n){const n=this.discriminator,o=this.defaultLayout;let i=0;return this.usesPrefixDiscriminator&&(i=n.layout.span),n.encode(e[n.property],t,r),i+o.encode(e[o.property],t,r+i)}return n.encode(e,t,r)}addVariant(e,t,r){const n=new _(this,e,t,r);return this.registry[e]=n,n}getVariant(e,t=0){let r;return r=e instanceof Uint8Array?this.discriminator.decode(e,t):e,this.registry[r]}}n.Union=P;class _ extends u{constructor(e,t,r,n){if(!(e instanceof P))throw new TypeError(\"union must be a Union\");if(!Number.isInteger(t)||0>t)throw new TypeError(\"variant must be a (non-negative) integer\");if(\"string\"==typeof r&&void 0===n&&(n=r,r=null),r){if(!(r instanceof u))throw new TypeError(\"layout must be a Layout\");if(null!==e.defaultLayout&&0<=r.span&&r.span>e.defaultLayout.span)throw new Error(\"variant span exceeds span of containing union\");if(\"string\"!=typeof n)throw new TypeError(\"variant must have a String property\")}let o=e.span;0>e.span&&(o=r?r.span:0,0<=o&&e.usesPrefixDiscriminator&&(o+=e.discriminator.layout.span)),super(o,n),this.union=e,this.variant=t,this.layout=r||null}getSpan(e,t=0){if(0<=this.span)return this.span;let r=0;this.union.usesPrefixDiscriminator&&(r=this.union.discriminator.layout.span);let n=0;return this.layout&&(n=this.layout.getSpan(e,t+r)),r+n}decode(e,t=0){const r=this.makeDestinationObject();if(this!==this.union.getVariant(e,t))throw new Error(\"variant mismatch\");let n=0;return this.union.usesPrefixDiscriminator&&(n=this.union.discriminator.layout.span),this.layout?r[this.property]=this.layout.decode(e,t+n):this.property?r[this.property]=!0:this.union.usesPrefixDiscriminator&&(r[this.union.discriminator.property]=this.variant),r}encode(e,t,r=0){let n=0;if(this.union.usesPrefixDiscriminator&&(n=this.union.discriminator.layout.span),this.layout&&!Object.prototype.hasOwnProperty.call(e,this.property))throw new TypeError(\"variant lacks property \"+this.property);this.union.discriminator.encode(this.variant,t,r);let o=n;if(this.layout&&(this.layout.encode(e[this.property],t,r+n),o+=this.layout.getSpan(t,r+n),0<=this.union.span&&o>this.union.span))throw new Error(\"encoded variant overruns containing union\");return o}fromArray(e){if(this.layout)return this.layout.fromArray(e)}}function k(e){return 0>e&&(e+=4294967296),e}n.VariantLayout=_;class C extends u{constructor(e,t,r){if(!(e instanceof p||e instanceof y))throw new TypeError(\"word must be a UInt or UIntBE layout\");if(\"string\"==typeof t&&void 0===r&&(r=t,t=!1),4<e.span)throw new RangeError(\"word cannot exceed 32 bits\");super(e.span,r),this.word=e,this.msb=!!t,this.fields=[];let n=0;this._packedSetValue=function(e){return n=k(e),this},this._packedGetValue=function(){return n}}decode(e,t=0){const r=this.makeDestinationObject(),n=this.word.decode(e,t);this._packedSetValue(n);for(const t of this.fields)void 0!==t.property&&(r[t.property]=t.decode(e));return r}encode(e,t,r=0){const n=this.word.decode(t,r);this._packedSetValue(n);for(const t of this.fields)if(void 0!==t.property){const r=e[t.property];void 0!==r&&t.encode(r)}return this.word.encode(this._packedGetValue(),t,r)}addField(e,t){const r=new R(this,e,t);return this.fields.push(r),r}addBoolean(e){const t=new j(this,e);return this.fields.push(t),t}fieldFor(e){if(\"string\"!=typeof e)throw new TypeError(\"property must be string\");for(const t of this.fields)if(t.property===e)return t}}n.BitStructure=C;class R{constructor(e,t,r){if(!(e instanceof C))throw new TypeError(\"container must be a BitStructure\");if(!Number.isInteger(t)||0>=t)throw new TypeError(\"bits must be positive integer\");const n=8*e.span,o=e.fields.reduce(((e,t)=>e+t.bits),0);if(t+o>n)throw new Error(\"bits too long for span remainder (\"+(n-o)+\" of \"+n+\" remain)\");this.container=e,this.bits=t,this.valueMask=(1<<t)-1,32===t&&(this.valueMask=4294967295),this.start=o,this.container.msb&&(this.start=n-o-t),this.wordMask=k(this.valueMask<<this.start),this.property=r}decode(e,t){return k(this.container._packedGetValue()&this.wordMask)>>>this.start}encode(e){if(\"number\"!=typeof e||!Number.isInteger(e)||e!==k(e&this.valueMask))throw new TypeError(l(\"BitField.encode\",this)+\" value must be integer not exceeding \"+this.valueMask);const t=this.container._packedGetValue(),r=k(e<<this.start);this.container._packedSetValue(k(t&~this.wordMask)|r)}}n.BitField=R;class j extends R{constructor(e,t){super(e,1,t)}decode(e,t){return!!super.decode(e,t)}encode(e){\"boolean\"==typeof e&&(e=+e),super.encode(e)}}n.Boolean=j;class M extends u{constructor(e,t){if(!(e instanceof f&&e.isCount()||Number.isInteger(e)&&0<=e))throw new TypeError(\"length must be positive integer or an unsigned integer ExternalLayout\");let r=-1;e instanceof f||(r=e),super(r,t),this.length=e}getSpan(e,t){let r=this.span;return 0>r&&(r=this.length.decode(e,t)),r}decode(e,t=0){let r=this.span;return 0>r&&(r=this.length.decode(e,t)),a(e).slice(t,t+r)}encode(e,t,r){let n=this.length;if(this.length instanceof f&&(n=e.length),!(e instanceof Uint8Array&&n===e.length))throw new TypeError(l(\"Blob.encode\",this)+\" requires (length \"+n+\") Uint8Array as src\");if(r+n>t.length)throw new RangeError(\"encoding overruns Uint8Array\");const o=a(e);return a(t).write(o.toString(\"hex\"),r,n,\"hex\"),this.length instanceof f&&this.length.encode(n,t,r),n}}n.Blob=M;class F extends u{constructor(e){super(-1,e)}getSpan(e,t=0){s(e);let r=t;for(;r<e.length&&0!==e[r];)r+=1;return 1+r-t}decode(e,t=0){const r=this.getSpan(e,t);return a(e).slice(t,t+r-1).toString(\"utf-8\")}encode(e,t,r=0){\"string\"!=typeof e&&(e=String(e));const n=i.Buffer.from(e,\"utf8\"),o=n.length;if(r+o>t.length)throw new RangeError(\"encoding overruns Buffer\");const s=a(t);return n.copy(s,r),s[r+o]=0,o+1}}n.CString=F;class V extends u{constructor(e,t){if(\"string\"==typeof e&&void 0===t&&(t=e,e=void 0),void 0===e)e=-1;else if(!Number.isInteger(e))throw new TypeError(\"maxSpan must be an integer\");super(-1,t),this.maxSpan=e}getSpan(e,t=0){return s(e),e.length-t}decode(e,t=0){const r=this.getSpan(e,t);if(0<=this.maxSpan&&this.maxSpan<r)throw new RangeError(\"text length exceeds maxSpan\");return a(e).slice(t,t+r).toString(\"utf-8\")}encode(e,t,r=0){\"string\"!=typeof e&&(e=String(e));const n=i.Buffer.from(e,\"utf8\"),o=n.length;if(0<=this.maxSpan&&this.maxSpan<o)throw new RangeError(\"text length exceeds maxSpan\");if(r+o>t.length)throw new RangeError(\"encoding overruns Buffer\");return n.copy(a(t),r),o}}n.UTF8=V;class G extends u{constructor(e,t){super(0,t),this.value=e}decode(e,t){return this.value}encode(e,t,r){return 0}}n.Constant=G,n.greedy=(e,t)=>new h(e,t);var q=n.offset=(e,t,r)=>new d(e,t,r),$=n.u8=e=>new p(1,e),z=n.u16=e=>new p(2,e);n.u24=e=>new p(3,e);var H=n.u32=e=>new p(4,e);n.u40=e=>new p(5,e),n.u48=e=>new p(6,e),n.nu64=e=>new v(e),n.u16be=e=>new y(2,e),n.u24be=e=>new y(3,e),n.u32be=e=>new y(4,e),n.u40be=e=>new y(5,e),n.u48be=e=>new y(6,e),n.nu64be=e=>new S(e);var W=n.s8=e=>new w(1,e);o=n.s16=e=>new w(2,e),n.s24=e=>new w(3,e);var X=n.s32=e=>new w(4,e);n.s40=e=>new w(5,e),n.s48=e=>new w(6,e),n.ns64=e=>new x(e),n.s16be=e=>new g(2,e),n.s24be=e=>new g(3,e),n.s32be=e=>new g(4,e),n.s40be=e=>new g(5,e),n.s48be=e=>new g(6,e),n.ns64be=e=>new B(e);var Y=n.f32=e=>new O(e);n.f32be=e=>new L(e);var J=n.f64=e=>new I(e);n.f64be=e=>new N(e);var Z=n.struct=(e,t,r)=>new A(e,t,r);n.bits=(e,t,r)=>new C(e,t,r);var K=n.seq=(e,t,r)=>new U(e,t,r),Q=n.union=(e,t,r)=>new P(e,t,r);n.unionLayoutDiscriminator=(e,t)=>new T(e,t);var ee=n.blob=(e,t)=>new M(e,t);n.cstr=e=>new F(e),n.utf8=(e,t)=>new V(e,t),n.constant=(e,t)=>new G(e,t);const te=e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)});var re={};Object.defineProperty(re,\"__esModule\",{value:!0});var ne=re.toBigIntLE=function(e){{const t=Buffer.from(e);t.reverse();const r=t.toString(\"hex\");return 0===r.length?BigInt(0):BigInt(`0x${r}`)}};re.toBigIntBE=function(e){{const t=e.toString(\"hex\");return 0===t.length?BigInt(0):BigInt(`0x${t}`)}};var oe=re.toBufferLE=function(e,t){{const r=e.toString(16),n=Buffer.from(r.padStart(2*t,\"0\").slice(0,2*t),\"hex\");return n.reverse(),n}};re.toBufferBE=function(e,t){{const r=e.toString(16);return Buffer.from(r.padStart(2*t,\"0\").slice(0,2*t),\"hex\")}};const ie=(se=16,e=>{const t=ee(se,e),{encode:r,decode:n}=te(t),o=t;return o.decode=(e,t)=>{const r=n(e,t);return ne(Buffer.from(r))},o.encode=(e,t,n)=>{const o=oe(e,se);return r(o,t,n)},o});var se,ae=/^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,ue=Math.ceil,ce=Math.floor,le=\"[BigNumber Error] \",fe=le+\"Number primitive has more than 15 significant digits: \",he=1e14,de=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],pe=1e9;function ye(e){var t=0|e;return e>0||e===t?t:t-1}function we(e){for(var t,r,n=1,o=e.length,i=e[0]+\"\";n<o;){for(r=14-(t=e[n++]+\"\").length;r--;t=\"0\"+t);i+=t}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function ge(e,t){var r,n,o=e.c,i=t.c,s=e.s,a=t.s,u=e.e,c=t.e;if(!s||!a)return null;if(r=o&&!o[0],n=i&&!i[0],r||n)return r?n?0:-a:s;if(s!=a)return s;if(r=s<0,n=u==c,!o||!i)return n?0:!o^r?1:-1;if(!n)return u>c^r?1:-1;for(a=(u=o.length)<(c=i.length)?u:c,s=0;s<a;s++)if(o[s]!=i[s])return o[s]>i[s]^r?1:-1;return u==c?0:u>c^r?1:-1}function me(e,t,r,n){if(e<t||e>r||e!==ce(e))throw Error(le+(n||\"Argument\")+(\"number\"==typeof e?e<t||e>r?\" out of range: \":\" not an integer: \":\" not a primitive number: \")+String(e))}function be(e){var t=e.c.length-1;return ye(e.e/14)==t&&e.c[t]%2!=0}function Ee(e,t){return(e.length>1?e.charAt(0)+\".\"+e.slice(1):e)+(t<0?\"e\":\"e+\")+t}function ve(e,t,r){var n,o;if(t<0){for(o=r+\".\";++t;o+=r);e=o+e}else if(++t>(n=e.length)){for(o=r,t-=n;--t;o+=r);e+=o}else t<n&&(e=e.slice(0,t)+\".\"+e.slice(t));return e}var Se=function e(t){var r,n,o,i,s,a,u,c,l,f,h=L.prototype={constructor:L,toString:null,valueOf:null},d=new L(1),p=20,y=4,w=-7,g=21,m=-1e7,b=1e7,E=!1,v=1,S=0,x={prefix:\"\",groupSize:3,secondaryGroupSize:0,groupSeparator:\",\",decimalSeparator:\".\",fractionGroupSize:0,fractionGroupSeparator:\" \",suffix:\"\"},B=\"0123456789abcdefghijklmnopqrstuvwxyz\",O=!0;function L(e,t){var r,i,s,a,u,c,l,f,h=this;if(!(h instanceof L))return new L(e,t);if(null==t){if(e&&!0===e._isBigNumber)return h.s=e.s,void(!e.c||e.e>b?h.c=h.e=null:e.e<m?h.c=[h.e=0]:(h.e=e.e,h.c=e.c.slice()));if((c=\"number\"==typeof e)&&0*e==0){if(h.s=1/e<0?(e=-e,-1):1,e===~~e){for(a=0,u=e;u>=10;u/=10,a++);return void(a>b?h.c=h.e=null:(h.e=a,h.c=[e]))}f=String(e)}else{if(!ae.test(f=String(e)))return o(h,f,c);h.s=45==f.charCodeAt(0)?(f=f.slice(1),-1):1}(a=f.indexOf(\".\"))>-1&&(f=f.replace(\".\",\"\")),(u=f.search(/e/i))>0?(a<0&&(a=u),a+=+f.slice(u+1),f=f.substring(0,u)):a<0&&(a=f.length)}else{if(me(t,2,B.length,\"Base\"),10==t&&O)return A(h=new L(e),p+h.e+1,y);if(f=String(e),c=\"number\"==typeof e){if(0*e!=0)return o(h,f,c,t);if(h.s=1/e<0?(f=f.slice(1),-1):1,L.DEBUG&&f.replace(/^0\\.0*|\\./,\"\").length>15)throw Error(fe+e)}else h.s=45===f.charCodeAt(0)?(f=f.slice(1),-1):1;for(r=B.slice(0,t),a=u=0,l=f.length;u<l;u++)if(r.indexOf(i=f.charAt(u))<0){if(\".\"==i){if(u>a){a=l;continue}}else if(!s&&(f==f.toUpperCase()&&(f=f.toLowerCase())||f==f.toLowerCase()&&(f=f.toUpperCase()))){s=!0,u=-1,a=0;continue}return o(h,String(e),c,t)}c=!1,(a=(f=n(f,t,10,h.s)).indexOf(\".\"))>-1?f=f.replace(\".\",\"\"):a=f.length}for(u=0;48===f.charCodeAt(u);u++);for(l=f.length;48===f.charCodeAt(--l););if(f=f.slice(u,++l)){if(l-=u,c&&L.DEBUG&&l>15&&(e>9007199254740991||e!==ce(e)))throw Error(fe+h.s*e);if((a=a-u-1)>b)h.c=h.e=null;else if(a<m)h.c=[h.e=0];else{if(h.e=a,h.c=[],u=(a+1)%14,a<0&&(u+=14),u<l){for(u&&h.c.push(+f.slice(0,u)),l-=14;u<l;)h.c.push(+f.slice(u,u+=14));u=14-(f=f.slice(u)).length}else u-=l;for(;u--;f+=\"0\");h.c.push(+f)}}else h.c=[h.e=0]}function I(e,t,r,n){var o,i,s,a,u;if(null==r?r=y:me(r,0,8),!e.c)return e.toString();if(o=e.c[0],s=e.e,null==t)u=we(e.c),u=1==n||2==n&&(s<=w||s>=g)?Ee(u,s):ve(u,s,\"0\");else if(i=(e=A(new L(e),t,r)).e,a=(u=we(e.c)).length,1==n||2==n&&(t<=i||i<=w)){for(;a<t;u+=\"0\",a++);u=Ee(u,i)}else if(t-=s,u=ve(u,i,\"0\"),i+1>a){if(--t>0)for(u+=\".\";t--;u+=\"0\");}else if((t+=i-a)>0)for(i+1==a&&(u+=\".\");t--;u+=\"0\");return e.s<0&&o?\"-\"+u:u}function N(e,t){for(var r,n=1,o=new L(e[0]);n<e.length;n++){if(!(r=new L(e[n])).s){o=r;break}t.call(o,r)&&(o=r)}return o}function U(e,t,r){for(var n=1,o=t.length;!t[--o];t.pop());for(o=t[0];o>=10;o/=10,n++);return(r=n+14*r-1)>b?e.c=e.e=null:r<m?e.c=[e.e=0]:(e.e=r,e.c=t),e}function A(e,t,r,n){var o,i,s,a,u,c,l,f=e.c,h=de;if(f){e:{for(o=1,a=f[0];a>=10;a/=10,o++);if((i=t-o)<0)i+=14,s=t,l=(u=f[c=0])/h[o-s-1]%10|0;else if((c=ue((i+1)/14))>=f.length){if(!n)break e;for(;f.length<=c;f.push(0));u=l=0,o=1,s=(i%=14)-14+1}else{for(u=a=f[c],o=1;a>=10;a/=10,o++);l=(s=(i%=14)-14+o)<0?0:u/h[o-s-1]%10|0}if(n=n||t<0||null!=f[c+1]||(s<0?u:u%h[o-s-1]),n=r<4?(l||n)&&(0==r||r==(e.s<0?3:2)):l>5||5==l&&(4==r||n||6==r&&(i>0?s>0?u/h[o-s]:0:f[c-1])%10&1||r==(e.s<0?8:7)),t<1||!f[0])return f.length=0,n?(t-=e.e+1,f[0]=h[(14-t%14)%14],e.e=-t||0):f[0]=e.e=0,e;if(0==i?(f.length=c,a=1,c--):(f.length=c+1,a=h[14-i],f[c]=s>0?ce(u/h[o-s]%h[s])*a:0),n)for(;;){if(0==c){for(i=1,s=f[0];s>=10;s/=10,i++);for(s=f[0]+=a,a=1;s>=10;s/=10,a++);i!=a&&(e.e++,f[0]==he&&(f[0]=1));break}if(f[c]+=a,f[c]!=he)break;f[c--]=0,a=1}for(i=f.length;0===f[--i];f.pop());}e.e>b?e.c=e.e=null:e.e<m&&(e.c=[e.e=0])}return e}function D(e){var t,r=e.e;return null===r?e.toString():(t=we(e.c),t=r<=w||r>=g?Ee(t,r):ve(t,r,\"0\"),e.s<0?\"-\"+t:t)}return L.clone=e,L.ROUND_UP=0,L.ROUND_DOWN=1,L.ROUND_CEIL=2,L.ROUND_FLOOR=3,L.ROUND_HALF_UP=4,L.ROUND_HALF_DOWN=5,L.ROUND_HALF_EVEN=6,L.ROUND_HALF_CEIL=7,L.ROUND_HALF_FLOOR=8,L.EUCLID=9,L.config=L.set=function(e){var t,r;if(null!=e){if(\"object\"!=typeof e)throw Error(le+\"Object expected: \"+e);if(e.hasOwnProperty(t=\"DECIMAL_PLACES\")&&(me(r=e[t],0,pe,t),p=r),e.hasOwnProperty(t=\"ROUNDING_MODE\")&&(me(r=e[t],0,8,t),y=r),e.hasOwnProperty(t=\"EXPONENTIAL_AT\")&&((r=e[t])&&r.pop?(me(r[0],-pe,0,t),me(r[1],0,pe,t),w=r[0],g=r[1]):(me(r,-pe,pe,t),w=-(g=r<0?-r:r))),e.hasOwnProperty(t=\"RANGE\"))if((r=e[t])&&r.pop)me(r[0],-pe,-1,t),me(r[1],1,pe,t),m=r[0],b=r[1];else{if(me(r,-pe,pe,t),!r)throw Error(le+t+\" cannot be zero: \"+r);m=-(b=r<0?-r:r)}if(e.hasOwnProperty(t=\"CRYPTO\")){if((r=e[t])!==!!r)throw Error(le+t+\" not true or false: \"+r);if(r){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw E=!r,Error(le+\"crypto unavailable\");E=r}else E=r}if(e.hasOwnProperty(t=\"MODULO_MODE\")&&(me(r=e[t],0,9,t),v=r),e.hasOwnProperty(t=\"POW_PRECISION\")&&(me(r=e[t],0,pe,t),S=r),e.hasOwnProperty(t=\"FORMAT\")){if(\"object\"!=typeof(r=e[t]))throw Error(le+t+\" not an object: \"+r);x=r}if(e.hasOwnProperty(t=\"ALPHABET\")){if(\"string\"!=typeof(r=e[t])||/^.?$|[+\\-.\\s]|(.).*\\1/.test(r))throw Error(le+t+\" invalid: \"+r);O=\"0123456789\"==r.slice(0,10),B=r}}return{DECIMAL_PLACES:p,ROUNDING_MODE:y,EXPONENTIAL_AT:[w,g],RANGE:[m,b],CRYPTO:E,MODULO_MODE:v,POW_PRECISION:S,FORMAT:x,ALPHABET:B}},L.isBigNumber=function(e){if(!e||!0!==e._isBigNumber)return!1;if(!L.DEBUG)return!0;var t,r,n=e.c,o=e.e,i=e.s;e:if(\"[object Array]\"=={}.toString.call(n)){if((1===i||-1===i)&&o>=-pe&&o<=pe&&o===ce(o)){if(0===n[0]){if(0===o&&1===n.length)return!0;break e}if((t=(o+1)%14)<1&&(t+=14),String(n[0]).length==t){for(t=0;t<n.length;t++)if((r=n[t])<0||r>=he||r!==ce(r))break e;if(0!==r)return!0}}}else if(null===n&&null===o&&(null===i||1===i||-1===i))return!0;throw Error(le+\"Invalid BigNumber: \"+e)},L.maximum=L.max=function(){return N(arguments,h.lt)},L.minimum=L.min=function(){return N(arguments,h.gt)},L.random=(i=9007199254740992,s=Math.random()*i&2097151?function(){return ce(Math.random()*i)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(e){var t,r,n,o,i,a=0,u=[],c=new L(d);if(null==e?e=p:me(e,0,pe),o=ue(e/14),E)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(o*=2));a<o;)(i=131072*t[a]+(t[a+1]>>>11))>=9e15?(r=crypto.getRandomValues(new Uint32Array(2)),t[a]=r[0],t[a+1]=r[1]):(u.push(i%1e14),a+=2);a=o/2}else{if(!crypto.randomBytes)throw E=!1,Error(le+\"crypto unavailable\");for(t=crypto.randomBytes(o*=7);a<o;)(i=281474976710656*(31&t[a])+1099511627776*t[a+1]+4294967296*t[a+2]+16777216*t[a+3]+(t[a+4]<<16)+(t[a+5]<<8)+t[a+6])>=9e15?crypto.randomBytes(7).copy(t,a):(u.push(i%1e14),a+=7);a=o/7}if(!E)for(;a<o;)(i=s())<9e15&&(u[a++]=i%1e14);for(e%=14,(o=u[--a])&&e&&(i=de[14-e],u[a]=ce(o/i)*i);0===u[a];u.pop(),a--);if(a<0)u=[n=0];else{for(n=-1;0===u[0];u.splice(0,1),n-=14);for(a=1,i=u[0];i>=10;i/=10,a++);a<14&&(n-=14-a)}return c.e=n,c.c=u,c}),L.sum=function(){for(var e=1,t=arguments,r=new L(t[0]);e<t.length;)r=r.plus(t[e++]);return r},n=function(){var e=\"0123456789\";function t(e,t,r,n){for(var o,i,s=[0],a=0,u=e.length;a<u;){for(i=s.length;i--;s[i]*=t);for(s[0]+=n.indexOf(e.charAt(a++)),o=0;o<s.length;o++)s[o]>r-1&&(null==s[o+1]&&(s[o+1]=0),s[o+1]+=s[o]/r|0,s[o]%=r)}return s.reverse()}return function(n,o,i,s,a){var u,c,l,f,h,d,w,g,m=n.indexOf(\".\"),b=p,E=y;for(m>=0&&(f=S,S=0,n=n.replace(\".\",\"\"),d=(g=new L(o)).pow(n.length-m),S=f,g.c=t(ve(we(d.c),d.e,\"0\"),10,i,e),g.e=g.c.length),l=f=(w=t(n,o,i,a?(u=B,e):(u=e,B))).length;0==w[--f];w.pop());if(!w[0])return u.charAt(0);if(m<0?--l:(d.c=w,d.e=l,d.s=s,w=(d=r(d,g,b,E,i)).c,h=d.r,l=d.e),m=w[c=l+b+1],f=i/2,h=h||c<0||null!=w[c+1],h=E<4?(null!=m||h)&&(0==E||E==(d.s<0?3:2)):m>f||m==f&&(4==E||h||6==E&&1&w[c-1]||E==(d.s<0?8:7)),c<1||!w[0])n=h?ve(u.charAt(1),-b,u.charAt(0)):u.charAt(0);else{if(w.length=c,h)for(--i;++w[--c]>i;)w[c]=0,c||(++l,w=[1].concat(w));for(f=w.length;!w[--f];);for(m=0,n=\"\";m<=f;n+=u.charAt(w[m++]));n=ve(n,l,u.charAt(0))}return n}}(),r=function(){function e(e,t,r){var n,o,i,s,a=0,u=e.length,c=t%1e7,l=t/1e7|0;for(e=e.slice();u--;)a=((o=c*(i=e[u]%1e7)+(n=l*i+(s=e[u]/1e7|0)*c)%1e7*1e7+a)/r|0)+(n/1e7|0)+l*s,e[u]=o%r;return a&&(e=[a].concat(e)),e}function t(e,t,r,n){var o,i;if(r!=n)i=r>n?1:-1;else for(o=i=0;o<r;o++)if(e[o]!=t[o]){i=e[o]>t[o]?1:-1;break}return i}function r(e,t,r,n){for(var o=0;r--;)e[r]-=o,o=e[r]<t[r]?1:0,e[r]=o*n+e[r]-t[r];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(n,o,i,s,a){var u,c,l,f,h,d,p,y,w,g,m,b,E,v,S,x,B,O=n.s==o.s?1:-1,I=n.c,N=o.c;if(!(I&&I[0]&&N&&N[0]))return new L(n.s&&o.s&&(I?!N||I[0]!=N[0]:N)?I&&0==I[0]||!N?0*O:O/0:NaN);for(w=(y=new L(O)).c=[],O=i+(c=n.e-o.e)+1,a||(a=he,c=ye(n.e/14)-ye(o.e/14),O=O/14|0),l=0;N[l]==(I[l]||0);l++);if(N[l]>(I[l]||0)&&c--,O<0)w.push(1),f=!0;else{for(v=I.length,x=N.length,l=0,O+=2,(h=ce(a/(N[0]+1)))>1&&(N=e(N,h,a),I=e(I,h,a),x=N.length,v=I.length),E=x,m=(g=I.slice(0,x)).length;m<x;g[m++]=0);B=N.slice(),B=[0].concat(B),S=N[0],N[1]>=a/2&&S++;do{if(h=0,(u=t(N,g,x,m))<0){if(b=g[0],x!=m&&(b=b*a+(g[1]||0)),(h=ce(b/S))>1)for(h>=a&&(h=a-1),p=(d=e(N,h,a)).length,m=g.length;1==t(d,g,p,m);)h--,r(d,x<p?B:N,p,a),p=d.length,u=1;else 0==h&&(u=h=1),p=(d=N.slice()).length;if(p<m&&(d=[0].concat(d)),r(g,d,m,a),m=g.length,-1==u)for(;t(N,g,x,m)<1;)h++,r(g,x<m?B:N,m,a),m=g.length}else 0===u&&(h++,g=[0]);w[l++]=h,g[0]?g[m++]=I[E]||0:(g=[I[E]],m=1)}while((E++<v||null!=g[0])&&O--);f=null!=g[0],w[0]||w.splice(0,1)}if(a==he){for(l=1,O=w[0];O>=10;O/=10,l++);A(y,i+(y.e=l+14*c-1)+1,s,f)}else y.e=c,y.r=+f;return y}}(),a=/^(-?)0([xbo])(?=\\w[\\w.]*$)/i,u=/^([^.]+)\\.$/,c=/^\\.([^.]+)$/,l=/^-?(Infinity|NaN)$/,f=/^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g,o=function(e,t,r,n){var o,i=r?t:t.replace(f,\"\");if(l.test(i))e.s=isNaN(i)?null:i<0?-1:1;else{if(!r&&(i=i.replace(a,(function(e,t,r){return o=\"x\"==(r=r.toLowerCase())?16:\"b\"==r?2:8,n&&n!=o?e:t})),n&&(o=n,i=i.replace(u,\"$1\").replace(c,\"0.$1\")),t!=i))return new L(i,o);if(L.DEBUG)throw Error(le+\"Not a\"+(n?\" base \"+n:\"\")+\" number: \"+t);e.s=null}e.c=e.e=null},h.absoluteValue=h.abs=function(){var e=new L(this);return e.s<0&&(e.s=1),e},h.comparedTo=function(e,t){return ge(this,new L(e,t))},h.decimalPlaces=h.dp=function(e,t){var r,n,o,i=this;if(null!=e)return me(e,0,pe),null==t?t=y:me(t,0,8),A(new L(i),e+i.e+1,t);if(!(r=i.c))return null;if(n=14*((o=r.length-1)-ye(this.e/14)),o=r[o])for(;o%10==0;o/=10,n--);return n<0&&(n=0),n},h.dividedBy=h.div=function(e,t){return r(this,new L(e,t),p,y)},h.dividedToIntegerBy=h.idiv=function(e,t){return r(this,new L(e,t),0,1)},h.exponentiatedBy=h.pow=function(e,t){var r,n,o,i,s,a,u,c,l=this;if((e=new L(e)).c&&!e.isInteger())throw Error(le+\"Exponent not an integer: \"+D(e));if(null!=t&&(t=new L(t)),s=e.e>14,!l.c||!l.c[0]||1==l.c[0]&&!l.e&&1==l.c.length||!e.c||!e.c[0])return c=new L(Math.pow(+D(l),s?2-be(e):+D(e))),t?c.mod(t):c;if(a=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new L(NaN);(n=!a&&l.isInteger()&&t.isInteger())&&(l=l.mod(t))}else{if(e.e>9&&(l.e>0||l.e<-1||(0==l.e?l.c[0]>1||s&&l.c[1]>=24e7:l.c[0]<8e13||s&&l.c[0]<=9999975e7)))return i=l.s<0&&be(e)?-0:0,l.e>-1&&(i=1/i),new L(a?1/i:i);S&&(i=ue(S/14+2))}for(s?(r=new L(.5),a&&(e.s=1),u=be(e)):u=(o=Math.abs(+D(e)))%2,c=new L(d);;){if(u){if(!(c=c.times(l)).c)break;i?c.c.length>i&&(c.c.length=i):n&&(c=c.mod(t))}if(o){if(0===(o=ce(o/2)))break;u=o%2}else if(A(e=e.times(r),e.e+1,1),e.e>14)u=be(e);else{if(0===(o=+D(e)))break;u=o%2}l=l.times(l),i?l.c&&l.c.length>i&&(l.c.length=i):n&&(l=l.mod(t))}return n?c:(a&&(c=d.div(c)),t?c.mod(t):i?A(c,S,y,undefined):c)},h.integerValue=function(e){var t=new L(this);return null==e?e=y:me(e,0,8),A(t,t.e+1,e)},h.isEqualTo=h.eq=function(e,t){return 0===ge(this,new L(e,t))},h.isFinite=function(){return!!this.c},h.isGreaterThan=h.gt=function(e,t){return ge(this,new L(e,t))>0},h.isGreaterThanOrEqualTo=h.gte=function(e,t){return 1===(t=ge(this,new L(e,t)))||0===t},h.isInteger=function(){return!!this.c&&ye(this.e/14)>this.c.length-2},h.isLessThan=h.lt=function(e,t){return ge(this,new L(e,t))<0},h.isLessThanOrEqualTo=h.lte=function(e,t){return-1===(t=ge(this,new L(e,t)))||0===t},h.isNaN=function(){return!this.s},h.isNegative=function(){return this.s<0},h.isPositive=function(){return this.s>0},h.isZero=function(){return!!this.c&&0==this.c[0]},h.minus=function(e,t){var r,n,o,i,s=this,a=s.s;if(t=(e=new L(e,t)).s,!a||!t)return new L(NaN);if(a!=t)return e.s=-t,s.plus(e);var u=s.e/14,c=e.e/14,l=s.c,f=e.c;if(!u||!c){if(!l||!f)return l?(e.s=-t,e):new L(f?s:NaN);if(!l[0]||!f[0])return f[0]?(e.s=-t,e):new L(l[0]?s:3==y?-0:0)}if(u=ye(u),c=ye(c),l=l.slice(),a=u-c){for((i=a<0)?(a=-a,o=l):(c=u,o=f),o.reverse(),t=a;t--;o.push(0));o.reverse()}else for(n=(i=(a=l.length)<(t=f.length))?a:t,a=t=0;t<n;t++)if(l[t]!=f[t]){i=l[t]<f[t];break}if(i&&(o=l,l=f,f=o,e.s=-e.s),(t=(n=f.length)-(r=l.length))>0)for(;t--;l[r++]=0);for(t=he-1;n>a;){if(l[--n]<f[n]){for(r=n;r&&!l[--r];l[r]=t);--l[r],l[n]+=he}l[n]-=f[n]}for(;0==l[0];l.splice(0,1),--c);return l[0]?U(e,l,c):(e.s=3==y?-1:1,e.c=[e.e=0],e)},h.modulo=h.mod=function(e,t){var n,o,i=this;return e=new L(e,t),!i.c||!e.s||e.c&&!e.c[0]?new L(NaN):!e.c||i.c&&!i.c[0]?new L(i):(9==v?(o=e.s,e.s=1,n=r(i,e,0,3),e.s=o,n.s*=o):n=r(i,e,0,v),(e=i.minus(n.times(e))).c[0]||1!=v||(e.s=i.s),e)},h.multipliedBy=h.times=function(e,t){var r,n,o,i,s,a,u,c,l,f,h,d,p,y,w,g=this,m=g.c,b=(e=new L(e,t)).c;if(!(m&&b&&m[0]&&b[0]))return!g.s||!e.s||m&&!m[0]&&!b||b&&!b[0]&&!m?e.c=e.e=e.s=null:(e.s*=g.s,m&&b?(e.c=[0],e.e=0):e.c=e.e=null),e;for(n=ye(g.e/14)+ye(e.e/14),e.s*=g.s,(u=m.length)<(f=b.length)&&(p=m,m=b,b=p,o=u,u=f,f=o),o=u+f,p=[];o--;p.push(0));for(y=he,w=1e7,o=f;--o>=0;){for(r=0,h=b[o]%w,d=b[o]/w|0,i=o+(s=u);i>o;)r=((c=h*(c=m[--s]%w)+(a=d*c+(l=m[s]/w|0)*h)%w*w+p[i]+r)/y|0)+(a/w|0)+d*l,p[i--]=c%y;p[i]=r}return r?++n:p.splice(0,1),U(e,p,n)},h.negated=function(){var e=new L(this);return e.s=-e.s||null,e},h.plus=function(e,t){var r,n=this,o=n.s;if(t=(e=new L(e,t)).s,!o||!t)return new L(NaN);if(o!=t)return e.s=-t,n.minus(e);var i=n.e/14,s=e.e/14,a=n.c,u=e.c;if(!i||!s){if(!a||!u)return new L(o/0);if(!a[0]||!u[0])return u[0]?e:new L(a[0]?n:0*o)}if(i=ye(i),s=ye(s),a=a.slice(),o=i-s){for(o>0?(s=i,r=u):(o=-o,r=a),r.reverse();o--;r.push(0));r.reverse()}for((o=a.length)-(t=u.length)<0&&(r=u,u=a,a=r,t=o),o=0;t;)o=(a[--t]=a[t]+u[t]+o)/he|0,a[t]=he===a[t]?0:a[t]%he;return o&&(a=[o].concat(a),++s),U(e,a,s)},h.precision=h.sd=function(e,t){var r,n,o,i=this;if(null!=e&&e!==!!e)return me(e,1,pe),null==t?t=y:me(t,0,8),A(new L(i),e,t);if(!(r=i.c))return null;if(n=14*(o=r.length-1)+1,o=r[o]){for(;o%10==0;o/=10,n--);for(o=r[0];o>=10;o/=10,n++);}return e&&i.e+1>n&&(n=i.e+1),n},h.shiftedBy=function(e){return me(e,-9007199254740991,9007199254740991),this.times(\"1e\"+e)},h.squareRoot=h.sqrt=function(){var e,t,n,o,i,s=this,a=s.c,u=s.s,c=s.e,l=p+4,f=new L(\"0.5\");if(1!==u||!a||!a[0])return new L(!u||u<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(u=Math.sqrt(+D(s)))||u==1/0?(((t=we(a)).length+c)%2==0&&(t+=\"0\"),u=Math.sqrt(+t),c=ye((c+1)/2)-(c<0||c%2),n=new L(t=u==1/0?\"5e\"+c:(t=u.toExponential()).slice(0,t.indexOf(\"e\")+1)+c)):n=new L(u+\"\"),n.c[0])for((u=(c=n.e)+l)<3&&(u=0);;)if(i=n,n=f.times(i.plus(r(s,i,l,1))),we(i.c).slice(0,u)===(t=we(n.c)).slice(0,u)){if(n.e<c&&--u,\"9999\"!=(t=t.slice(u-3,u+1))&&(o||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(A(n,n.e+p+2,1),e=!n.times(n).eq(s));break}if(!o&&(A(i,i.e+p+2,0),i.times(i).eq(s))){n=i;break}l+=4,u+=4,o=1}return A(n,n.e+p+1,y,e)},h.toExponential=function(e,t){return null!=e&&(me(e,0,pe),e++),I(this,e,t,1)},h.toFixed=function(e,t){return null!=e&&(me(e,0,pe),e=e+this.e+1),I(this,e,t)},h.toFormat=function(e,t,r){var n,o=this;if(null==r)null!=e&&t&&\"object\"==typeof t?(r=t,t=null):e&&\"object\"==typeof e?(r=e,e=t=null):r=x;else if(\"object\"!=typeof r)throw Error(le+\"Argument not an object: \"+r);if(n=o.toFixed(e,t),o.c){var i,s=n.split(\".\"),a=+r.groupSize,u=+r.secondaryGroupSize,c=r.groupSeparator||\"\",l=s[0],f=s[1],h=o.s<0,d=h?l.slice(1):l,p=d.length;if(u&&(i=a,a=u,u=i,p-=i),a>0&&p>0){for(i=p%a||a,l=d.substr(0,i);i<p;i+=a)l+=c+d.substr(i,a);u>0&&(l+=c+d.slice(i)),h&&(l=\"-\"+l)}n=f?l+(r.decimalSeparator||\"\")+((u=+r.fractionGroupSize)?f.replace(new RegExp(\"\\\\d{\"+u+\"}\\\\B\",\"g\"),\"$&\"+(r.fractionGroupSeparator||\"\")):f):l}return(r.prefix||\"\")+n+(r.suffix||\"\")},h.toFraction=function(e){var t,n,o,i,s,a,u,c,l,f,h,p,w=this,g=w.c;if(null!=e&&(!(u=new L(e)).isInteger()&&(u.c||1!==u.s)||u.lt(d)))throw Error(le+\"Argument \"+(u.isInteger()?\"out of range: \":\"not an integer: \")+D(u));if(!g)return new L(w);for(t=new L(d),l=n=new L(d),o=c=new L(d),p=we(g),s=t.e=p.length-w.e-1,t.c[0]=de[(a=s%14)<0?14+a:a],e=!e||u.comparedTo(t)>0?s>0?t:l:u,a=b,b=1/0,u=new L(p),c.c[0]=0;f=r(u,t,0,1),1!=(i=n.plus(f.times(o))).comparedTo(e);)n=o,o=i,l=c.plus(f.times(i=l)),c=i,t=u.minus(f.times(i=t)),u=i;return i=r(e.minus(n),o,0,1),c=c.plus(i.times(l)),n=n.plus(i.times(o)),c.s=l.s=w.s,h=r(l,o,s*=2,y).minus(w).abs().comparedTo(r(c,n,s,y).minus(w).abs())<1?[l,o]:[c,n],b=a,h},h.toNumber=function(){return+D(this)},h.toPrecision=function(e,t){return null!=e&&me(e,1,pe),I(this,e,t,2)},h.toString=function(e){var t,r=this,o=r.s,i=r.e;return null===i?o?(t=\"Infinity\",o<0&&(t=\"-\"+t)):t=\"NaN\":(null==e?t=i<=w||i>=g?Ee(we(r.c),i):ve(we(r.c),i,\"0\"):10===e&&O?t=ve(we((r=A(new L(r),p+i+1,y)).c),r.e,\"0\"):(me(e,2,B.length,\"Base\"),t=n(ve(we(r.c),i,\"0\"),10,e,o,!0)),o<0&&r.c[0]&&(t=\"-\"+t)),t},h.valueOf=h.toJSON=function(){return D(this)},h._isBigNumber=!0,h[Symbol.toStringTag]=\"BigNumber\",h[Symbol.for(\"nodejs.util.inspect.custom\")]=h.valueOf,null!=t&&L.set(t),L}();const xe=new Se(\"1e+18\"),Be=e=>{const t=ie(e),{encode:r,decode:n}=te(t),o=t;return o.decode=(e,t)=>{const r=n(e,t).toString();return new Se(r).div(xe)},o.encode=(e,t,n)=>{const o=BigInt(e.times(xe).integerValue().toString());return r(o,t,n)},o},Oe=e=>{const t=$(e),{encode:r,decode:n}=te(t),o=t;return o.decode=(e,t)=>!!n(e,t),o.encode=(e,t,n)=>{const o=Number(e);return r(o,t,n)},o},Le=e=>{const t=ee(32,e),{encode:n,decode:o}=te(t),i=t;return i.decode=(e,t)=>{const n=o(e,t);return new r(n)},i.encode=(e,t,r)=>{const o=e.toBuffer();return n(o,t,r)},i};function Ie(e){return new De(8,!1,e)}function Ne(e){return new De(8,!0,e)}function Ue(e){return new De(16,!1,e)}function Ae(e){return new De(16,!0,e)}class De extends c{constructor(e,t,r){super(e,r),this.blob=ee(e),this.signed=t}encode(e,t,r=0){return this.signed&&(e=e.toTwos(8*this.span)),this.blob.encode(e.toArrayLike(Buffer,\"le\",this.span),t,r)}decode(t,r=0){const n=new e(this.blob.decode(t,r),10,\"le\");return this.signed?n.fromTwos(8*this.span).clone():n}}function Te(e,t){return new Pe(e,t)}class Pe extends c{constructor(e,t){super(-1,t),this.layout=e,this.discriminator=$()}encode(e,t,r=0){return null==e?this.discriminator.encode(0,t,r):(this.discriminator.encode(1,t,r),this.discriminator.span+this.layout.encode(e,t,r+this.discriminator.span))}decode(e,t=0){const r=this.discriminator.decode(e,t);if(0===r)return null;if(1===r)return this.layout.decode(e,t+this.discriminator.span);throw new Error(\"Invalid option \"+this.layout.property)}getSpan(e,t=0){const r=this.discriminator.decode(e,t);if(0===r)return 1;if(1===r)return this.layout.getSpan(e,t+1)+1;throw new Error(\"Invalid option \"+this.property)}}function _e(e,t){return new ke(e,t)}class ke extends c{constructor(e,t){super(-1,t),this.layout=e,this.discriminator=H()}encode(e,t,r=0){return null==e?this.layout.span+this.discriminator.encode(0,t,r):(this.discriminator.encode(1,t,r),this.discriminator.span+this.layout.encode(e,t,r+this.discriminator.span))}decode(e,t=0){const r=this.discriminator.decode(e,t);if(0===r)return null;if(1===r)return this.layout.decode(e,t+this.discriminator.span);throw new Error(\"Invalid coption \"+this.layout.property)}getSpan(e,t=0){return this.discriminator.span+this.layout.getSpan(e,t+this.discriminator.span)}}function Ce(e,t){return new Re(e,t)}class Re extends c{constructor(e,t){super(-1,t),this.layout=Z([H(\"length\"),K(e,q(H(),-4),\"src\")],t)}encode(e,t,r=0){const n={src:e};return this.layout.encode(n,t,r)}decode(e,t=0){return this.layout.decode(e,t).src}getSpan(e,t=0){return this.layout.getSpan(e,t)}}function je(e){return new Me(e)}class Me extends c{constructor(e){super(-1,e),this.layout=Z([H(\"length\"),ee(q(H(),-4),\"src\")],this.property)}encode(e,t,r=0){if(null==e)return this.layout.span;const n={src:e};return this.layout.encode(n,t,r)}decode(e,t=0){return this.layout.decode(e,t).src}getSpan(t,r=0){return H().span+new e(new Uint8Array(t).slice(r,r+4),10,\"le\").toNumber()}}function Fe(e){return new Ve(e)}class Ve extends c{constructor(e){super(-1,e),this.layout=Z([H(\"length\"),ee(q(H(),-4),\"src\")],this.property)}encode(e,t,r=0){if(null==e)return this.layout.span;const n={src:Buffer.from(e,\"utf8\")};return this.layout.encode(n,t,r)}decode(e,t=0){return this.layout.decode(e,t).src.toString()}getSpan(t,r=0){return H().span+new e(new Uint8Array(t).slice(r,r+4),10,\"le\").toNumber()}}export{c as Layout,ee as blob,Oe as bool,je as bytes,_e as coption,Be as decimal,Y as f32,J as f64,Ae as i128,o as i16,X as i32,Ne as i64,W as i8,Te as option,Le as publicKey,K as seq,Z as struct,Ue as u128,z as u16,H as u32,Ie as u64,$ as u8,Q as union,Fe as utf8Str,Ce as vec};\n//# sourceMappingURL=index.js.map\n",null,null,null,null,null,null],"names":["isVersionedTransaction","tx","encode$1","data","bs58$1","encode","decode","Buffer$1","from","isCompositeAccounts","accountItem","IDL_ACCOUNT_LAYOUT","borsh","struct","publicKey","vecU8","handleDefinedFields","fields","unitCb","namedCb","tupleCb","length","name","toInstruction","idlIx","args","Error","ix","idx","forEach","ixArg","validateAccounts","ixAccounts","accounts","acc","translateAddress","address","PublicKey","StructError","TypeError","constructor","failure","failures","cached","message","rest","path","super","join","this","value","key","type","refinement","branch","Object","assign","_cached","isObject","x","print","JSON","stringify","toFailure","result","context","toFailures","Symbol","iterator","isIterable","r","run","options","coerce","mask","ctx","coercer","schema","Array","isArray","undefined","valid","validator","k","v","s","entries","ts","t","Map","set","Set","add","refiner","Struct","props","TYPE","assert","validate","create","is","tuples","tuple","input","done","next","shiftIterator","error","define","array","Element","i","slice","literal","constant","description","nullable","number","isNaN","optional","string","keys","union$1","Structs","map","firstMatch","find","e","unknown","S","first","push","async","getMultipleAccountsAndContext","connection","publicKeys","commitment","getMultipleAccountsAndContextCore","batches","size","apply","Math","ceil","_","index","chunks","Promise","all","batch","flat","commitmentOverride","accountInfos","getMultipleAccountsInfoAndContext","account","jsonRpcResult","condition","createRpcResult","UnknownRpcResult","jsonrpc","id","code","SimulatedTransactionResponseStruct","err","logs","executable","owner","lamports","rentEpoch","unitsConsumed","slot","AnchorProvider","wallet","opts","defaultOptions","static","preflightCommitment","url","signers","_a","_b","_c","_d","sign","feePayer","recentBlockhash","getLatestBlockhash","blockhash","signer","partialSign","rawTx","signTransaction","serialize","sendAndConfirmRawTransaction","ConfirmError","txSig","signatures","Uint8Array","signature","maxVer","failedTx","getTransaction","maxSupportedTransactionVersion","meta","logMessages","SendTransactionError","txWithSigners","txs","kp","signedTxs","signAllTransactions","sigs","includeAccounts","simulateTransaction","transaction","_compile","signData","encodedTransaction","_serialize","toString","config","encoding","addresses","nonProgramIds","toBase58","sigVerify","res","_rpcRequest","traceIndent","logTrace","console","SimulateError","simulationResponse","rawTransaction","sendOptions","skipPreflight","maxRetries","minContextSlot","status","startTime","Date","now","sendRawTransaction","abortSignal","AbortSignal","timeout","confirmTransaction","getProvider","local","commonjsGlobal","globalThis","window","global","self","dist","defineProperty","ANCHOR_ERROR__REQUIRE_EQ_VIOLATED","ANCHOR_ERROR__REQUIRE_VIOLATED","ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID","ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE","ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS","ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION","ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM","ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM","ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM","ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE","ANCHOR_ERROR__CONSTRAINT_SPACE","ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS","ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER","ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT","ANCHOR_ERROR__CONSTRAINT_ZERO","ANCHOR_ERROR__CONSTRAINT_ADDRESS","ANCHOR_ERROR__CONSTRAINT_CLOSE","ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT","ANCHOR_ERROR__CONSTRAINT_ASSOCIATED","ANCHOR_ERROR__CONSTRAINT_STATE","ANCHOR_ERROR__CONSTRAINT_EXECUTABLE","ANCHOR_ERROR__CONSTRAINT_SEEDS","ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT","ANCHOR_ERROR__CONSTRAINT_OWNER","ANCHOR_ERROR__CONSTRAINT_RAW","ANCHOR_ERROR__CONSTRAINT_SIGNER","ANCHOR_ERROR__CONSTRAINT_HAS_ONE","ANCHOR_ERROR__CONSTRAINT_MUT","ANCHOR_ERROR__EVENT_INSTRUCTION_STUB","ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY","ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM","ANCHOR_ERROR__IDL_INSTRUCTION_STUB","ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE","ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE","ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND","ANCHOR_ERROR__INSTRUCTION_MISSING","ANCHOR_ERROR__DEPRECATED","ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION","ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT","ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH","ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS","ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT","ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH","ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT","ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA","ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED","ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED","ANCHOR_ERROR__ACCOUNT_NOT_SIGNER","ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE","ANCHOR_ERROR__INVALID_PROGRAM_ID","ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM","ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE","ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS","ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE","ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE","ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH","ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND","ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET","ANCHOR_ERROR__REQUIRE_GTE_VIOLATED","ANCHOR_ERROR__REQUIRE_GT_VIOLATED","ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED","ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED","ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED","_FEATURES","isSet","get","IdlError","ProgramErrorStack","stack","programKeyRegex","successRegex","programStack","exec","pop","programKey","AnchorError","errorCode","errorMessage","errorLogs","origin","comparedValues","replace","_programErrorStack","parse","anchorErrorLogIndex","findIndex","log","startsWith","anchorErrorLog","pubkeyRegex","leftPubkey","rightPubkey","valueRegex","leftValue","rightValue","noInfoAnchorErrorLog","fileLineAnchorErrorLog","accountNameAnchorErrorLog","errorCodeString","errorNumber","parseInt","file","line","fileLine","accountName","program","programErrorStack","ProgramError","msg","idlErrors","errString","unparsedErrorCode","includes","components","split","matches","match","parseErr","errorMsg","LangErrorMessage","translateError","anchorError","programError","handler","target","prop","Reflect","arguments","Proxy","LangErrorCode","InstructionMissing","InstructionFallbackNotFound","InstructionDidNotDeserialize","InstructionDidNotSerialize","IdlInstructionStub","IdlInstructionInvalidProgram","IdlAccountNotEmpty","EventInstructionStub","ConstraintMut","ConstraintHasOne","ConstraintSigner","ConstraintRaw","ConstraintOwner","ConstraintRentExempt","ConstraintSeeds","ConstraintExecutable","ConstraintState","ConstraintAssociated","ConstraintAssociatedInit","ConstraintClose","ConstraintAddress","ConstraintZero","ConstraintTokenMint","ConstraintTokenOwner","ConstraintMintMintAuthority","ConstraintMintFreezeAuthority","ConstraintMintDecimals","ConstraintSpace","ConstraintAccountIsNone","ConstraintTokenTokenProgram","ConstraintMintTokenProgram","ConstraintAssociatedTokenTokenProgram","ConstraintMintGroupPointerExtension","ConstraintMintGroupPointerExtensionAuthority","ConstraintMintGroupPointerExtensionGroupAddress","ConstraintMintGroupMemberPointerExtension","ConstraintMintGroupMemberPointerExtensionAuthority","ConstraintMintGroupMemberPointerExtensionMemberAddress","ConstraintMintMetadataPointerExtension","ConstraintMintMetadataPointerExtensionAuthority","ConstraintMintMetadataPointerExtensionMetadataAddress","ConstraintMintCloseAuthorityExtension","ConstraintMintCloseAuthorityExtensionAuthority","ConstraintMintPermanentDelegateExtension","ConstraintMintPermanentDelegateExtensionDelegate","ConstraintMintTransferHookExtension","ConstraintMintTransferHookExtensionAuthority","ConstraintMintTransferHookExtensionProgramId","RequireViolated","RequireEqViolated","RequireKeysEqViolated","RequireNeqViolated","RequireKeysNeqViolated","RequireGtViolated","RequireGteViolated","AccountDiscriminatorAlreadySet","AccountDiscriminatorNotFound","AccountDiscriminatorMismatch","AccountDidNotDeserialize","AccountDidNotSerialize","AccountNotEnoughKeys","AccountNotMutable","AccountOwnedByWrongProgram","InvalidProgramId","InvalidProgramExecutable","AccountNotSigner","AccountNotSystemOwned","AccountNotInitialized","AccountNotProgramData","AccountNotAssociatedTokenAccount","AccountSysvarMismatch","AccountReallocExceedsLimit","AccountDuplicateReallocs","DeclaredProgramIdMismatch","TryingToInitPayerAsProgramAccount","InvalidNumericConversion","Deprecated","IdlCoder","field","types","genericArgs","fieldName","bool","u8","i8","u16","i16","u32","i32","f32","u64","i64","f64","u128","i128","u256","i256","str","option","fieldLayout","vec","len","resolveArrayLen","definedName","defined","typeDef","typeDefLayout","generics","genericArg","at","kind","fieldLayouts","f","genArgs","resolveGenericArgs","variants","variant","rustEnum","replicate","alias","ty","idl","typeSize","coption","reduce","variantSizes","max","generic","genericLen","g","isDefined","defGeneric","elTy","isGenericLen","curIndex","arg","flatMap","filter","BorshInstructionCoder","ixLayouts","instructions","layout","discriminator","ixName","buffer","alloc","encoder","concat","givenDisc","subarray","equals","format","accountMetas","InstructionFormatter","idlField","formatIdlType","formatIdlData","flatIdlAccounts","flattenIdlAccounts","idlType","d","formatIdlDataDefined","val","variantName","enumValue","namedFields","fieldData","tupleFields","prefix","accName","charAt","toUpperCase","sentenceCase","hasOwnProperty","newPrefix","BorshAccountsCoder","accountLayouts","layouts","accountData","accountDiscriminator","compare","decodeUnchecked","decodeAny","memcmp","appendData","offset","bytes","BorshEventCoder","events","ev","logArr","BorshTypesCoder","typeLayouts","BorshCoder","instruction","Layout","span","property","Number","isInteger","makeDestinationObject","b","src","getSpan","RangeError","rv","prototype","fromArray","values","Layout_2","ExternalLayout","isCount","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","V2E32","pow","divmodInt64","hi32","floor","lo32","roundedInt64","NearUInt64","readUInt32LE","writeUInt32LE","NearInt64","readInt32LE","writeInt32LE","Structure","decodePrefixes","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","VariantLayout","vb","Buffer","isBuffer","union","Blob$1","lo","write","ns64","blob","RustStringLayout","chars","BN","toNumber","rustStringLayout","publicKey$2","LAYOUT","WrappedLayout$1","decoder","publicKey$1","toBuffer","browserPonyfill","exports","module","__self__","F","fetch","DOMException","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","call","normalizeName","String","test","toLowerCase","normalizeValue","iteratorFor","items","Headers","headers","append","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","fromCharCode","readArrayBufferAsText","formData","json","oldValue","has","callback","thisArg","methods","Request","method","upcased","credentials","mode","signal","referrer","form","trim","decodeURIComponent","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","location","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","default","PROGRAM_LOG","PROGRAM_DATA","PROGRAM_LOG_START_INDEX","PROGRAM_DATA_START_INDEX","EventManager","programId","provider","coder","_programId","_provider","_eventParser","EventParser","_eventCallbacks","_eventListeners","_listenerIdCount","eventName","listener","_onLogsSubscriptionId","onLogs","event","parseLogs","allListeners","listenerCb","listeners","delete","l","removeOnLogsListener","errorOnDecodeFailure","logScanner","LogScanner","execution","ExecutionContext","newProgram","didPop","handleLog","handleProgramLog","handleSystemLog","logStr","logStart","splitArgsAndCtx","inputLen","a","InstructionNamespaceFactory","encodeFn","ixArgs","remainingAccounts","TransactionInstruction","accs","accountsArray","rpcAccs","pubkey","isOptional","isWritable","Boolean","writable","isSigner","TransactionFactory","ixFn","Transaction","preInstructions","postInstructions","RpcFactory","txFn","sendAndConfirm","AccountFactory","accountFns","AccountClient","_size","_coder","idlAccount","_idlAccount","fetchNullableAndContext","accountInfo","getAccountInfoAndContext","fetchMultipleAndContext","filters","coderFilters","dataSize","getProgramAccounts","subscribe","sub","subscriptions","ee","EventEmitter","onAccountChange","emit","removeAccountChangeListener","catch","warn","sizeOverride","SystemProgram","createAccount","fromPubkey","newAccountPubkey","space","getMinimumBalanceForRentExemption","getAccountInfo","SimulateFactory","resp","simulate","parser","raw","uint64","WrappedLayout","fromBuffer","n","COptionLayout","toArray","reverse","zeroPad","copy","TOKEN_ACCOUNT_LAYOUT","p","U","AccountsResolver","_args","_accounts","_idlIx","accountNamespace","_idlTypes","_customResolver","_accountStore","AccountStore","resolveEventCpi","resolveConst","depth","resolvePdasAndRelations","resolveCustom","isResolvable","some","pda","relations","getPaths","paths","resolvableAccs","unresolvedAccs","resolveOptionals","resolveOptionalsHelper","ret","subPath","cur","partialAccounts","nestedAccountsGeneric","partialAccount","isPartialAccounts","flattenPartialAccounts","resolved","accountOrAccounts","nextIndex","currentName","nextName","currentPath","nextPath","findProgramAddressSync","found","seeds","seed","parseProgramId","accountKey","fetchAccount","toBufferConst","toBufferArg","toBufferAccount","toBufferValue","getType","fieldPubkey","accountValue","currentPaths","toArrayLike","typeName","definedType","_cache","_idls","decodeTokenAccount","getAccountsNs","accountNs","programIdStr","Program","fetchIdl","MethodsBuilderFactory","rpcFn","simulateFn","viewFn","idlTypes","customResolver","MethodsBuilder","throwOnNull","toReturn","_ixFn","_txFn","_rpcFn","_simulateFn","_viewFn","_remainingAccounts","_signers","_preInstructions","_postInstructions","_resolveAccounts","_accountsResolver","accountsPartial","accountsStrict","ixs","prepend","rpc","pubkeys","ViewFactory","hasReturn","returns","simulationResult","returnPrefix","returnLog","returnData","returnType","NamespaceFactory","getCustomResolver","errors","parseIdlErrors","build","ixItem","txItem","rpcItem","simulateItem","viewItem","methodItem","_idl","rawIdl","_rawIdl","KEYS_TO_CONVERT","toCamelCase","camelCase","recursivelyConvertNamesToCamelCase","camelCasedIdl","structuredClone","convertIdlToCamelCase","_events","views","idlAddr","base","findProgramAddress","createWithSeed","idlAddress","inflatedIdl","inflate","TextDecoder","decode$2","s16","s8","nu64be","u48be","u40be","u32be","u24be","u16be","nu64","u48","u40","H","u24","$","q","greedy","Constant","UTF8","CString","BitField","BitStructure","Sequence","DoubleBE","Double","FloatBE","Float","NearInt64BE","NearUInt64BE","IntBE","Int","GreedyCount","bindConstructorLayout","nameWithProperty","uint8ArrayToBuffer","checkUint8Array","utf8","cstr","unionLayoutDiscriminator","K","seq","bits","Z","f64be","f32be","ns64be","s48be","s40be","s32be","s24be","s16be","s48","s40","s32","s24","byteOffset","u","c","layout_","boundConstructor_","h","elementSpan","y","w","readIntLE","writeIntLE","readIntBE","writeIntBE","m","E","o","readUInt32BE","writeUInt32BE","B","readInt32BE","writeInt32BE","O","readFloatLE","writeFloatLE","L","readFloatBE","writeFloatBE","I","readDoubleLE","writeDoubleLE","N","readDoubleBE","writeDoubleBE","elementLayout","count","A","D","T","P","C","word","msb","_packedSetValue","_packedGetValue","addField","R","addBoolean","j","fieldFor","container","valueMask","start","wordMask","M","V","maxSpan","G","Q","te","re","toBigIntLE","BigInt","toBigIntBE","toBufferLE","padStart","toBufferBE","ae","ue","ce","le","fe","he","de","pe","ye","we","charCodeAt","ge","me","be","Ee","ve","Se","valueOf","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","_isBigNumber","search","substring","DEBUG","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","crypto","getRandomValues","randomBytes","DECIMAL_PLACES","ROUNDING_MODE","EXPONENTIAL_AT","RANGE","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","ALPHABET","isBigNumber","maximum","lt","minimum","min","gt","random","Uint32Array","splice","sum","plus","NaN","absoluteValue","abs","comparedTo","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","idiv","exponentiatedBy","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","modulo","multipliedBy","negated","precision","sd","shiftedBy","squareRoot","sqrt","toExponential","toFixed","toFormat","substr","RegExp","toFraction","toPrecision","toJSON","toStringTag","for","Oe","Le","Ie","De","signed","toTwos","fromTwos","Te","Pe","_e","ke","Ve","SplTokenAccountsCoder","MINT_LAYOUT","ACCOUNT_LAYOUT","MULTISIG_LAYOUT","decodeMintAccount","decodeAccountAccount","decodeMultisigAccount","_appendData","B.struct","B.coption","B.publicKey","B.u64","B.u8","B.bool","B.union","B.seq","SplTokenEventsCoder","_log","SplTokenInstructionCoder","decimals","mintAuthority","freezeAuthority","encodeData","initializeMint","encodeInitializeMint","initializeAccount","encodeInitializeAccount","initializeMultisig","encodeInitializeMultisig","amount","transfer","encodeTransfer","approve","encodeApprove","revoke","encodeRevoke","authorityType","newAuthority","setAuthority","encodeSetAuthority","mintTo","encodeMintTo","burn","encodeBurn","closeAccount","encodeCloseAccount","freezeAccount","encodeFreezeAccount","thawAccount","encodeThawAccount","transferChecked","encodeTransferChecked","approveChecked","encodeApproveChecked","mintToChecked","encodeMintToChecked","burnChecked","encodeBurnChecked","initializeAccount2","encodeInitializeAccount2","syncNative","encodeSyncNative","initializeAccount3","encodeInitializeAccount3","initializeMultisig2","encodeInitializeMultisig2","initializeMint2","encodeInitializeMint2","getAccountDataSize","encodeGetAccountDataSize","initializeImmutableOwner","encodeInitializeImmutableOwner","amountToUiAmount","encodeAmountToUiAmount","uiAmount","uiAmountToAmount","encodeUiAmountToAmount","encodeState","_ixName","_ix","B.option","SplTokenTypesCoder","_name","_type","_typeData","SplTokenCoder","SPL_TOKEN_PROGRAM_ID","splTokenProgram","params","IDL","metadata","version","spec","docs"],"mappings":"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"}