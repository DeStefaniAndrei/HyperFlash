/* eslint-disable no-console */
import { helpers } from "@debridge-finance/solana-utils";

import { ChainEngine, ChainId, OrderDataWithId, OrderWithoutNonce } from "../src";

import { initClients } from "./initClient";

const [, , commonClient] = initClients();

const orderToSend: OrderWithoutNonce = {
  give: {
    amount: BigInt(100),
    tokenAddress: commonClient.getClient(ChainId.Polygon).nativeAddress,
    chainId: ChainId.Polygon,
  },
  maker: helpers.hexToBuffer("0x...."),
  receiver: helpers.hexToBuffer("0x..."),
  givePatchAuthority: helpers.hexToBuffer("0x...."),
  orderAuthorityDstAddress: helpers.hexToBuffer("0x...."),
  take: {
    amount: BigInt(1e9), // 1e9 usdc
    chainId: ChainId.BSC,
    tokenAddress: helpers.hexToBuffer("0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d"), // bsc usdc
  },
};

const createTx = await commonClient.createOrder<ChainEngine.EVM>(
  { order: orderToSend, referralCode: 0 },
  { permit: "0x" },
);

/**
 * Send evm tx
 * const txHash = await sendEvmTx(createTx);
 */
const txHash = "";

console.log(`polygon create tx: ${txHash}`);
const maybeOrder = await commonClient.getOrderFromTransaction(
  { giveChain: orderToSend.give.chainId, txHash: txHash },
  {},
);
if (!maybeOrder) throw new Error(`failed to get order from tx: ${txHash}`);
const onChainOrder = maybeOrder;
console.log(onChainOrder);
