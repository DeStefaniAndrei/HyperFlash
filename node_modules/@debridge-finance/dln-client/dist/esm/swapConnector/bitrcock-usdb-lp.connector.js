import { ChainId } from "../common.types";
import { tokenStringToBuffer } from "../utils";
import { UniswapV2Connector } from "./uniswapv2.connector";
export const BitrockAddresses = {
    UsdbAddress: "0xD647a6E1F898c39bA594443c19De0872EA935310",
    wBrockAddress: "0x413f0E3A440abA7A15137F4278121450416882d5",
    RockAddress: "0x826628622a8B55F4AF6aC2A1DD1273bF837e651a",
    RockRouterAddress: "0xeeabd314e2eE640B1aca3B27808972B05c7f6A3b",
};
export const BitrockBuffers = {
    UsdbAddress: tokenStringToBuffer(ChainId.Bitrock, BitrockAddresses.UsdbAddress),
    wBrockAddress: tokenStringToBuffer(ChainId.Bitrock, BitrockAddresses.wBrockAddress),
    RockAddress: tokenStringToBuffer(ChainId.Bitrock, BitrockAddresses.RockAddress),
    BrockAddress: Buffer.alloc(20, 0),
    RockRouterAddress: tokenStringToBuffer(ChainId.Bitrock, BitrockAddresses.RockRouterAddress),
};
export class BitrockUSDBLP extends UniswapV2Connector {
    constructor(connection) {
        super(connection, ChainId.Bitrock, [
            // USDB/wBROCK
            [BitrockBuffers.UsdbAddress, BitrockBuffers.wBrockAddress],
            // ROCK/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0x826628622a8b55f4af6ac2a1dd1273bf837e651a"),
                BitrockBuffers.wBrockAddress,
            ],
            // MSMIL/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xaa72d86210ac33bca2de6139403f9af37398e721"),
                BitrockBuffers.wBrockAddress,
            ],
            // BRW/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xa7c9bb7a6fd13dca85e9df12b4f91dc8bede225e"),
                BitrockBuffers.wBrockAddress,
            ],
            // APE/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xe8a4f717ac5b08bccc7240d649af653b2577b36a"),
                BitrockBuffers.wBrockAddress,
            ],
            // CHARM/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xa056871e6796315c558280bff7e7f5d2c5b1f6fb"),
                BitrockBuffers.wBrockAddress,
            ],
            // MICKEY/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0x978adb9fbf147c1316b3c04230c88b356f3f4513"),
                BitrockBuffers.wBrockAddress,
            ],
            // RR/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xe4bda992ecad56986704e21f1622e5f8aceaddb1"),
                BitrockBuffers.wBrockAddress,
            ],
            // HE-MAN/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0x01c8b36c965adb150cd4244edb463d4ba96549d4"),
                BitrockBuffers.wBrockAddress,
            ],
            // DUMBASS/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0x47094defb05e50309499acd572fa107c89c3b305"),
                BitrockBuffers.wBrockAddress,
            ],
            // BDOG/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xa9fae95179ba375b0e7e6bcb4932fb484138c6e4"),
                BitrockBuffers.wBrockAddress,
            ],
            // jamma/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0xfaF9a02dB868cb557aA9EF6C9eEAac34aFD013e2"),
                BitrockBuffers.wBrockAddress,
            ],
            // SNIPER/wBROCK
            [
                tokenStringToBuffer(ChainId.Bitrock, "0x8a6162CdcBa0878212BD5C6857ff977E218E7772"),
                BitrockBuffers.wBrockAddress,
            ],
        ], BitrockBuffers.RockRouterAddress, BitrockBuffers.wBrockAddress);
    }
}
//# sourceMappingURL=bitrcock-usdb-lp.connector.js.map