"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CrossChainForwarderService = void 0;
const viem_1 = require("viem");
const CrossChainForwarder_1 = require("../../assets/abi/CrossChainForwarder");
class CrossChainForwarderService {
    strictlySwapAndCallDln(payload) {
        return (0, viem_1.encodeFunctionData)({
            abi: CrossChainForwarder_1.CrosschainForwarderABI,
            functionName: "strictlySwapAndCallDln",
            args: [
                //_srcTokenIn
                payload._srcTokenIn,
                //_srcAmountIn
                payload._srcAmountIn,
                //_srcTokenInPermitEnvelope
                payload._srcTokenInPermitEnvelope,
                //_swapDetails
                {
                    swapRouter: payload._srcSwapRouter,
                    swapCalldata: payload._srcSwapCalldata,
                    tokenOut: payload._srcTokenOut,
                    tokenOutExpectedAmount: payload._srcTokenExpectedAmountOut,
                    // refund from fulfill's preswap is sent to the user (the maker) to limit taker's income
                    tokenOutRefundRecipient: payload._srcTokenRefundRecipient,
                },
                //_target
                payload._receiver,
                //_targetData
                payload._receiverCalldata,
                //_orderId
                payload._orderId,
            ],
        });
    }
    strictlySwapAndCall(provider, contractAddress, payload) {
        return (0, viem_1.encodeFunctionData)({
            abi: CrossChainForwarder_1.CrosschainForwarderABI,
            functionName: "strictlySwapAndCall",
            args: [
                //_srcTokenIn
                payload._srcTokenIn,
                //_srcAmountIn
                payload._srcAmountIn,
                //_srcTokenInPermitEnvelope
                payload._srcTokenInPermitEnvelope,
                //_swapRouter
                payload._srcSwapRouter,
                //_swapCalldata
                payload._srcSwapCalldata,
                //_tokenOut
                payload._srcTokenOut,
                //_tokenOutExpectedAmount
                payload._srcTokenExpectedAmountOut,
                // refund from fulfill's preswap is sent to the user (the maker) to limit taker's income
                //_tokenOutRefundRecipient
                payload._srcTokenRefundRecipient,
                //_target
                payload._receiver,
                //_targetData
                payload._receiverCalldata,
            ],
        });
    }
}
exports.CrossChainForwarderService = CrossChainForwarderService;
//# sourceMappingURL=crosschain-forwarder.service.js.map