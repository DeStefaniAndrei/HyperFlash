import { Logger } from "../common/logger";
export type MaskCredentialFunction = (toMask: string) => string;
export declare class SwapConnectorLogger extends Logger {
    #private;
    constructor(baseLogger: Logger, swapConnector: string, maskCredentialFunction: MaskCredentialFunction);
    protected message(level: "verbose" | "log" | "error", ...params: unknown[]): void;
    /**
     * @param params any arrays or (object, string) for structured log
     * @returns void
     */
    verbose(...params: unknown[]): void;
    /**
     * @param params any arrays or (object, string) for structured log
     * @returns void
     */
    log(...params: unknown[]): void;
    /**
     * @param params any arrays or (object, string) for structured log
     * @returns void
     */
    error(...params: unknown[]): void;
}
//# sourceMappingURL=swap-connector.logger.d.ts.map